[Info]
Type:AdvDupe File
Creator:"Cipher Ultra"
Date:12/22/10
Description:"none"
Entities:6
Constraints:5
[More Information]
FileVersion:0.84
AdvDupeVersion:1.85
AdvDupeToolVersion:1.9
AdvDupeSharedVersion:1.72
SerialiserVersion:1.4
WireVersion:2345 (EXPORTED)
Time:12:13 PM
Head:168
HoldAngle:0,129.02,0
HoldPos:6.18652,3.72314,-13.1222
StartPos:8597.3,-7193.91,0.03125
[Save]
Entities:424998A0{;}35E85E80{T:35E85F10;T:35E85F40;}4249B0D0{;}42559938{Y:22=T:42559A88;Y:54=N:0;Y:55=N:0;}35E8C6F0{Y:2=Y:1;Y:3=A:1.95876e-020,-180,5.81571e-006;Y:4=V:6.18652,3.72314,13.1222;Y:5=N:0;Y:7=T:35E8C660;Y:9=Y:8;Y:13=T:35E87E00;}35E8C690{Y:3=A:1.95876e-020,-180,5.81571e-006;Y:4=V:6.18652,3.72314,13.1222;Y:6=B:t;}42552DF8{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}42551298{Y:11=S:"";}42553BD8{;}42499720{Y:11=Y:53;}42559A88{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}035616C8{Y:3=A:1.79347e-005,90,360;Y:4=V:-11.8135,-15.0171,14.9644;Y:6=B:t;}424A4610{Y:11=Y:30;}424A53C0{Y:33=Y:32;Y:34=S:"0";}424A23C0{;}35E84530{T:35E84560;T:35E845C0;}424A2450{N:0=T:424A3770;}42553848{Y:18=T:42553BD8;S:"Src"=N:170;Y:20=Y:78;Y:21=V:1.89,-1.89,2.33;Y:22=T:4254FF48;Y:24=Y:23;Y:25=V:1.83,2.92,0.73;Y:26=N:0;}42497FE0{Y:35=T:424A53C0;Y:36=T:4249B0D0;Y:38=Y:37;Y:2=Y:39;Y:9=Y:31;Y:41=Y:40;Y:43=Y:42;Y:45=Y:44;}42552E28{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}4254EA78{;}03561A60{S:"pod"=N:173;Y:28=T:0374F408;}42498F10{Y:14=N:168;Y:3=A:90,-4.09811e-005,0;Y:4=V:-16.8389,3.66846,29.7781;Y:5=N:0;Y:7=T:42497B00;Y:9=Y:15;Y:2=Y:16;Y:13=T:424991E0;}42559AB8{N:0=T:42559458;}0377DBF0{Y:7=T:035504B8;Y:9=Y:124;Y:14=N:168;Y:4=V:-11.8135,-15.0171,14.9644;Y:2=Y:52;Y:125=N:0;Y:13=T:037D1070;Y:3=A:1.58336e-005,90,-4.87611e-007;Y:5=N:0;}4249A8C0{Y:3=A:1.79347e-005,90,360;Y:4=V:-12.0244,22.2026,14.9644;Y:6=B:t;}42499510{Y:12=T:42499720;Y:29=T:42499810;Y:56=T:42499750;}4254E5C8{;}H4252C0A0{N:168=T:35E8C6F0;N:169=T:42498F10;N:173=T:424A07D0;N:170=T:42499450;N:174=T:42555A38;N:171=T:0377DBF0;}425513E8{Y:18=T:425526D8;S:"Src"=N:170;Y:20=S:"A";Y:21=V:2.51,-2.64,1.63;Y:22=T:42552DF8;Y:24=Y:23;Y:25=V:-1.49,-1.13,0.73;Y:26=N:0;}4254C648{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}4254C498{Y:18=T:4254C5B8;S:"Src"=N:170;Y:20=S:"W";Y:21=V:1.73,-0.04,2.42;Y:22=T:4254C648;Y:24=Y:23;Y:25=V:-0.81,-1.37,0.73;Y:26=N:0;}42499750{Y:22=T:424997E0;Y:54=N:0;Y:55=N:0;}037D19D0{;}036D9E10{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}35E844D0{N:0;N:0;N:255;}4249EE80{Y:27=T:42497890;}35E842F0{N:0;N:0;N:0;}425526D8{;}35E801B0{N:25;N:-179.99996948242;N:5.5979808462336e-012;}0374F958{Y:18=T:037D19D0;S:"Src"=N:174;Y:20=Y:60;Y:21=V:-1.11,1,0.73;Y:22=T:0375BAA0;Y:24=Y:23;Y:25=V:1.19,0.46,2.49;Y:26=N:0;}037B6180{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}0370AC18{;}037B23A0{Y:18=T:0370AC18;S:"Src"=N:170;Y:20=Y:69;Y:21=V:0.11,3.91,0.28;Y:22=T:037B6180;Y:24=Y:126;Y:25=V:-0.17,3.91,0.25;Y:26=N:2;}037C4D48{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}0375BAA0{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}42497B00{N:0=T:424A5330;}03747C30{Y:18=T:036BB578;S:"Src"=N:174;Y:20=Y:59;Y:21=V:0.6,0.78,0.73;Y:22=T:037C4D48;Y:24=Y:23;Y:25=V:0.56,-3.91,2.18;Y:26=N:0;}42499450{Y:7=T:424998D0;Y:9=Y:51;Y:14=N:168;Y:4=V:-12.0244,22.2026,14.9644;Y:2=Y:52;Y:5=N:0;Y:13=T:42499510;Y:3=A:1.58336e-005,90,-2.54213e-013;}425513B8{S:"A"=T:425513E8;S:"S"=T:42552EE8;S:"R"=T:425530C8;S:"D"=T:42554FB8;S:"Pod"=T:42552E88;Y:66=T:4254E9E8;Y:67=T:42553848;Y:68=T:4254D2D8;S:"W"=T:4254C498;Y:69=T:42553128;}35E8C660{N:0=T:35E8C690;}425531E8{;}4254E7A8{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}42497890{Y:18=T:42497980;S:"Src"=N:174;Y:20=Y:19;Y:21=V:-1.94,-2.85,0.73;Y:22=T:42497AD0;Y:24=Y:23;Y:25=V:0.28,-0.12,0.33;Y:26=N:0;}037D1070{Y:12=T:03550850;Y:29=T:03561A60;Y:56=T:03554158;}42550308{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}424A5330{Y:3=A:90,180,180;Y:4=V:-16.8389,3.66846,29.7781;Y:6=B:t;}42554FB8{Y:18=T:42551448;S:"Src"=N:170;Y:20=S:"D";Y:21=V:0.23,-2.46,2.15;Y:22=T:42552E28;Y:24=Y:23;Y:25=V:-0.27,-0.73,0.73;Y:26=N:0;}4254FF48{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}35E84500{N:0;N:0;N:255;}35E81230{N:0;N:0;N:0;}35E84470{N:0;N:0;N:0;}425530F8{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}35E81290{N:0;N:0;N:0;}03554158{Y:22=T:036D9E10;Y:54=N:0;Y:55=N:0;}35E84560{Y:58;Y:59;Y:19;Y:60;}42497980{;}35E844A0{N:0;N:0;N:0;}35E84410{N:0;N:0;N:0;}036BB578{;}424A3770{Y:3=A:-7.95931e-006,-91,-1.96294e-006;Y:4=V:-47.3311,2.26221,1.67535;Y:6=B:t;}424998D0{N:0=T:4249A8C0;}35E84440{N:0;N:0;N:0;}35E85F10{S:"A";S:"S";S:"R";S:"D";S:"Pod";Y:66;Y:67;Y:68;S:"W";Y:69;}42555A38{Y:7=T:42559AB8;Y:3=A:2.50449e-006,3.09632e-005,-5.29244e-012;Y:9=Y:57;Y:65=T:35E84530;Y:71=T:35E85E80;Y:73=Y:72;Y:14=N:168;Y:4=V:9.08496,3.88525,18.6216;Y:2=Y:74;Y:76=Y:75;Y:13=T:42554A48;Y:123=T:35E8AF50;Y:5=N:0;}42551448{;}42552EE8{Y:18=T:42552FD8;S:"Src"=N:170;Y:20=S:"S";Y:21=V:-0.31,-1.83,2.36;Y:22=T:425530F8;Y:24=Y:23;Y:25=V:1.63,0.65,0.73;Y:26=N:0;}425538A8{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}42552E88{Y:18=T:42552F78;S:"Src"=N:170;Y:20=Y:58;Y:21=V:-0.95,0.05,2.33;Y:22=T:42553038;Y:24=Y:23;Y:25=V:-1.03,-0.05,0.73;Y:26=N:0;}42553248{;}42552FD8{;}425530C8{Y:18=T:425531E8;S:"Src"=N:170;Y:20=S:"R";Y:21=V:1.36,-1.89,2.2;Y:22=T:42553218;Y:24=Y:23;Y:25=V:0.67,-1.98,0.73;Y:26=N:0;}42553128{Y:18=T:42553248;S:"Src"=N:170;Y:20=Y:69;Y:21=V:1.47,-1.06,2.38;Y:22=T:425538A8;Y:24=Y:23;Y:25=V:1.12,0.05,0.73;Y:26=N:0;}4254C5B8{;}0374F408{Y:109=T:03747C30;Y:127=T:037B23A0;Y:100=T:0374F958;}424991E0{Y:29=T:424A3BF0;Y:12=T:424A4610;}4254D2D8{Y:18=T:4254E5C8;S:"Src"=N:170;Y:20=Y:68;Y:21=V:-0.73,-3.91,1.54;Y:22=T:4254E7A8;Y:24=Y:23;Y:25=V:-1.03,-0.33,0.73;Y:26=N:0;}035504B8{N:0=T:035616C8;}42554A48{Y:12=T:42551298;Y:56=T:42559938;Y:29=T:42551358;}42553218{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}4254E9E8{Y:18=T:4254EA78;S:"Src"=N:169;Y:20=Y:77;Y:21=V:-5.13,3.67,0.33;Y:22=T:42550308;Y:24=Y:23;Y:25=V:-1.48,-3.01,0.73;Y:26=N:0;}424A2330{Y:12=T:424A2420;Y:50=T:424A23C0;}42552F78{;}42551358{Y:28=T:425513B8;}42553038{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}424A2420{Y:11=Y:49;}424997E0{S:"a"=N:255;S:"b"=N:255;S:"g"=N:255;S:"r"=N:255;}42497AD0{S:"a"=N:255;S:"r"=N:255;S:"g"=N:255;S:"b"=N:255;}424A07D0{Y:7=T:424A2450;Y:9=Y:31;Y:46=T:42497FE0;Y:14=N:168;Y:4=V:-47.3311,2.26221,1.67535;Y:2=Y:39;Y:48=Y:47;Y:13=T:424A2330;Y:3=A:-5.85853e-006,-91,1.01497e-007;Y:5=N:0;}35E845C0{Y:61;Y:62;Y:63;Y:64;}35E8AF50{Y:79=N:0;Y:80=T:35E81230;Y:69=N:0;Y:82=Y:81;Y:83=N:0;Y:59=T:35E801B0;Y:84=N:256;Y:85=T:35E81260;Y:86=N:1;S:"Clk"=N:0;Y:87=N:0;S:"Num"=N:0;Y:88=N:255;Y:89=N:0;Y:90=N:0;Y:91=N:1;Y:92=N:-4.5;Y:93=N:0;S:"Top"=N:0;Y:94=N:3.0963223252911e-005;Y:95=N:0;Y:96=N:0;S:"D"=N:0;S:"W"=N:0;Y:97=N:256;Y:98=N:11;S:"A"=N:0;Y:99=N:0;Y:100=T:35E84440;S:"R"=N:0;Y:101=N:0;Y:102=N:0;Y:103=N:2.4;Y:105=Y:104;Y:106=T:35E842F0;Y:107=N:0;Y:108=N:0;Y:68=N:0;Y:109=T:35E84470;Y:110=N:0;S:"Red"=N:0;Y:111=T:35E844A0;Y:112=T:35E844D0;S:"S"=N:0;Y:113=T:35E81290;Y:114=N:1;Y:19=N:0;Y:115=N:-0.6;Y:60=V:8636.38,-7190.02,34.6528;Y:116=T:35E84410;Y:117=N:1;Y:38=Y:118;S:"Z"=N:18.652849197388;Y:67=N:0;Y:119=N:0;Y:120=T:35E84500;Y:122=Y:121;}35E81260{N:0;N:0;N:0;}35E88A60{Y:11=Y:10;}35E87E00{Y:12=T:35E88A60;}42559458{Y:3=A:2.50449e-006,3.09632e-005,360;Y:4=V:9.08496,3.88525,18.6216;Y:6=B:t;}424A3BF0{Y:17=B:t;Y:28=T:4249EE80;}42499810{S:"pod"=N:173;Y:28=T:424998A0;}35E85F40{Y:63;Y:63;Y:63;Y:63;Y:61;Y:70;Y:63;Y:63;Y:63;Y:63;}03550850{Y:11=Y:53;}
Constraints:424A3DD0{T:42497290;T:42497350;}H3FD62028{T:4254C558;T:35E8CD50;T:424A3DA0;T:4249CA50;T:037A6910;}0377A5E0{T:03750330;T:03758580;}424A3DA0{Y:58=T:424A3DD0;Y:86=Y:130;}35E8CD50{Y:58=T:35E8DE90;Y:86=Y:130;}03750330{Y:128=N:169;Y:129=N:0;}4249CA50{Y:58=T:42497440;Y:86=Y:130;}35E8DE90{T:35E86180;T:35E87740;}424A5360{Y:128=N:168;Y:129=N:0;}4254C558{Y:58=T:4254C588;Y:86=Y:130;}4254C588{T:4254C678;T:4254E628;}4254E628{Y:128=N:168;Y:129=N:0;}42498250{Y:128=N:173;Y:129=N:0;}037A6910{Y:58=T:0377A5E0;Y:86=Y:130;}42497290{Y:128=N:170;Y:129=N:0;}03758580{Y:128=N:168;Y:129=N:0;}42497440{T:42498250;T:424A5360;}35E86180{Y:128=N:174;Y:129=N:0;}42497350{Y:128=N:168;Y:129=N:0;}4254C678{Y:128=N:171;Y:129=N:0;}35E87740{Y:128=N:168;Y:129=N:0;}
[Dict]
1:"models/hunter/plates/plate1x1.mdl"
2:"Model"
3:"LocalAngle"
4:"LocalPos"
5:"Skin"
6:"Frozen"
7:"PhysicsObjects"
8:"prop_physics"
9:"Class"
10:"models/props_wasteland/wood_fence01a"
11:"MaterialOverride"
12:"material"
13:"EntityMods"
14:"SavedParentIdx"
15:"gmod_wire_consolescreen"
16:"models/cheeze/pcb/pcb4.mdl"
17:"extended"
18:"Path"
19:"Refresh"
20:"SrcId"
21:"SrcPos"
22:"Color"
23:"arrowire/arrowire2"
24:"Material"
25:"StartPos"
26:"Width"
27:"Reset"
28:"Wires"
29:"WireDupeInfo"
30:"phoenix_storms/wood"
31:"prop_vehicle_prisoner_pod"
32:"scripts/vehicles/prisoner_pod.txt"
33:"vehiclescript"
34:"limitview"
35:"KeyValues"
36:"Members"
37:"Jeep Seat"
38:"Name"
39:"models/nova/jeep_seat.mdl"
40:"VALVe"
41:"Author"
42:"A Seat from VALVe's Jeep"
43:"Information"
44:"Half-Life 2"
45:"Category"
46:"VehicleTable"
47:"Seat_Jeep"
48:"VehicleName"
49:"phoenix_storms/FuturisticTrackRamp_1-2"
50:"VehicleMemDupe"
51:"gmod_wire_adv_pod"
52:"models/jaanus/wiretool/wiretool_range.mdl"
53:"models/props_combine/combine_interface_disp"
54:"RenderMode"
55:"RenderFX"
56:"colour"
57:"gmod_wire_expression2"
58:"Entity"
59:"CamAngle"
60:"CamPosition"
61:"ENTITY"
62:"ANGLE"
63:"NORMAL"
64:"VECTOR"
65:"_outputs"
66:"Screen"
67:"Horn"
68:"Space"
69:"Active"
70:"WIRELINK"
71:"_inputs"
72:"Boats Single"
73:"_name"
74:"models/beer/wiremod/gate_e2.mdl"
75:"@name Boats Single€@inputs Active Pod:entity€@inputs R W A S D Horn Space Screen:wirelink€@outputs CamPosition:vector CamAngle:angle Entity:entity Refresh€@persist Type CamClk Spawn Clk AdjustCamF AdjustCamZ€@persist [Colour Colour1 Colour2 Position]:vector Drive Inertia Bright1 Bright2 Red Green Blue€@persist [Mat1 Mat2 Metal Name]:string Front Rear Pitch Z Bottom Top Random€@persist Angle:angle Forward Turn Dturn ColNum Option Boat Spin Vector:vector Waves Wave Splash Chip:entity€if(dupefinished()|first()){Spawn = 0,Refresh = 1}€€if(Spawn < 11){€    €interval(100)€    Spawn++€    Chip=entity()€€€### Common €€Mat2 = £phoenix_storms/fender_white£€Metal =£phoenix_storms/grey_steel£€Mat1 = £phoenix_storms/mat/mat_phx_plastic£€€holoCreate(Spawn)€holoModel(1, £hqcylinder2£)€holoModel(2, £hqtorus2£) €holoScale(2, vec(0.14,0.14,0.1))€ holoModel(3, £dome£)€ holoModel(8, £dome£)€holoAng(8,Chip:toWorld(ang(-10,0,0)))€  holoClipEnabled(8,1)€  holoClip(8,vec(0.2,0,0),vec(0.2,0,0),0)€€   holoParent(2,1)€   holoParent(3,1)€   holoParent(4,1)€   holoParent(5,1)€   holoParent(6,1)€   holoParent(7,1)€   holoParent(8,1)€   holoParent(9,1)€   holoParent(10,1)€   holoParent(11,1)€€   holoMaterial(1,  £phoenix_storms/dome£)€   holoMaterial(2, £phoenix_storms/mat/mat_phx_carbonfiber2£)€   holoMaterial(3, Mat1)€   holoMaterial(4, Mat1)€   holoMaterial(5, Mat2)€   holoMaterial(6, Mat2)€   holoMaterial(7, Mat1)€   holoMaterial(8, £phoenix_storms/glass£)€   holoMaterial(9, Metal)€   holoMaterial(10, Mat2)€   holoMaterial(11, Mat2)€Colour1 = vec(0,0,255)€Colour2 = vec(0,0,255)€€   holoColor(Spawn, Colour1)€€Entity=holoEntity(1)€€Bright1 = 256€Bright2 = 256€Blue = 255€€Boat = 1€Option=1€Clk=0€Drive = 0€Chip:setAlpha(0)€€}else{€runOnTick(1)€€if(Space & ~Space){Drive = !Drive}€ €if(changed(Option)){€ if(Option == 2){Red = Colour1:x(),Green = Colour1:y(),Blue = Colour1:z()}€ if(Option == 4){Red = Colour2:x(),Green = Colour2:y(),Blue = Colour2:z()}€    }€€€€      if(Drive==0 & !tickClk() & Active){soundStop(1),soundStop(2),soundStop(3)€                       €         Option += S-W€         Option =  Option%5€         Option += ( Option<1)*5€                €           €    if(Option ==1){€                €        Boat += D-A€        Boat = Boat%4€        Boat += (Boat<1)*4€    €€€}€€  €€}elseif(Drive == 0 & tickClk()){Spin= angnorm(Spin + 0.5),holoAng(1,Chip:toWorld(ang(0,Spin,0)))€       €        holoPos(1, Chip:toWorld(vec(0,0,0))) €        CamPosition = Chip:toWorld(vec(30,0,16))€        CamAngle = Chip:toWorld(ang(25,180,0))€        Forward = 0€        Turn = Chip:toWorld(ang(0,0,0)):yaw()€        Z = Chip:pos():z()€        Front = 0€        Rear = 0€        Wave=1€        CamClk = 0€€if(Option == 2 | Option == 3 | Option == 4 | Option == 5){€        €Num = (D-A)*2€if(Option == 2 | Option == 4){€if(A|D){€if(Red == 255 & inrange(Green,0+A,254+A) & Blue == 0){Green+=Num}€elseif(inrange(Red,1-A,255) & Green == 255 & Blue == 0){Red-=Num}€elseif(Red == 0 & Green == 255 & inrange(Blue,0,254+A)){Blue+=Num}€elseif(Red == 0 & inrange(Green,1-A,255) & Blue == 255){Green-=Num}€elseif(inrange(Red,0,254+A) & Green == 0 & Blue == 255){Red+=Num}€elseif(Red == 255 & Green == 0 & inrange(Blue,1-A,255)){Blue-=Num}€    }€}elseif(Option == 3){ €    €        Bright1 = clamp(Bright1 + (D-A)*2,1,511)€        €       }elseif(Option == 5){ €            €         Bright2 = clamp(Bright2 + (D-A)*2,1,511)€    €        }€        €   Red = clamp(Red,0,255)€   Green = clamp(Green,0,255)€   Blue = clamp(Blue,0,255)€  Colour = vec(Red,Green,Blue)€ if(changed(Colour)|changed(Bright1)|changed(Bright2)){€  if(Option == 2){Colour1 = Colour}€  if(Option == 4){Colour2 = Colour}€€Colour1H = clamp(Colour1+Bright1-255,vec(0,0,0),vec(255,255,255))€Colour2H = clamp(Colour2+Bright2-255,vec(0,0,0),vec(255,255,255))€€       €    holoColor(1, Colour1H)€    holoColor(2, Colour2H) €    holoColor(3, Colour1H)€    holoColor(4, Colour1H)€    holoColor(5, Colour2H)€    holoColor(6, Colour2H)€    holoColor(7, Colour2H)€    €    holoColor(9, Colour1H)€    holoColor(10, Colour1H)€    holoColor(11, Colour1H)€€    } €    €}€           if(changed(Option))€        {Chip:soundPlay(4,0,£weapons/ar2/ar2_empty.wav£)}€            €        elseif(changed(Boat))€        {Chip:soundPlay(4,0,£weapons/ar2/ar2_reload_push.wav£)€            Refresh = !Refresh}€                €   if(W|A|S|D|changed(Refresh)|changed(Active)){ €        Screen:writeString(£Cipher_Ultra's Boat Racers£,1,0,69)€        Screen:writeString(£Customise Your Boat!£,1,2,69)€        Screen:writeString(£[W/S] keys = Scroll Options.£,1,3,69)€        Screen:writeString(£[A/D] keys = Scroll Styles.£,1,4,69)€        Screen:writeString(£Boat Type: £ + Boat + £/4 - £ + Name,1,6,999,(Option==1)*69)€        Screen:writeString(£Colour 1:£,1,7,999,(Option==2)*69) Screen:writeString(Colour1+£   £,11,7,999,0)€        Screen:writeString(£Brightness 1:£,1,8,999,(Option==3)*69) Screen:writeString(clamp(round((Bright1/509)*100),0,100)+£%   £,15,8,999,0)€        Screen:writeString(£Colour 2:£,1,9,999,(Option==4)*69) Screen:writeString(Colour2+£   £,11,9,999,0)€        Screen:writeString(£Brightness 2:£,1,10,999,(Option==5)*69) Screen:writeString(clamp(round((Bright2/509)*100),0,100)+£%   £,15,10,999,0)€        €        Screen:writeString(£Press [Space] to Sail£,1,14,69)€    }€    €    €€    €if(changed(Boat)|changed(Active)){Spin = 0€€holoAng(1,Chip:toWorld(ang(0,0,0)))€holoAng(2,Entity:toWorld(ang(90,0,0)))€    €if(Boat == 1){€Type=1€Name = £Squallo£€###Main€€ holoScale(1, vec(0.26,0.9,0.06))€€#Steering€  holoPos(2, Chip:toWorld(vec(3.4,0,0.3))) €€#Lower bow€  holoPos(3, Chip:toWorld(vec(3.2,0,0.2))) holoScale(3, vec(0.5,1,3))€ holoAng(3,Chip:toWorld(ang(90,0,0)))€  holoClipEnabled(3,1)€  holoClip(3,vec(0.2,0,0),vec(0.2,0,0),0)€#Lower stern€  holoPos(4, Chip:toWorld((vec(0,0,0.2))))  holoModel(4, £hqcylinder2£)  holoScale(4, vec(0.5,1,0.6))€  holoAng(4,Chip:toWorld(ang(90,0,0)))€  holoClipEnabled(4,1)€  holoClip(4,vec(0.2,0,0),vec(0.2,0,0),0)€€#upper bow€  holoPos(5, Chip:toWorld(vec(3.2,0,0.2)))  holoModel(5, £dome£)  holoScale(5, vec(0.16,1.06,3.1))€  holoAng(5,Chip:toWorld(ang(90,0,0)))€#upper stern€  holoPos(6, Chip:toWorld(vec(-1.8,0,0.1)))  holoModel(6, £hqcylinder2£)  holoScale(6,vec(0.2,1.04,0.3))€ holoAng(6,Chip:toWorld(ang(90,0,0)))€€#Interiour€  holoPos(7, Chip:toWorld(vec(2,0,0.2)))  holoModel(7, £dome2£)  holoScale(7, vec(1,0.98,0.4))€  holoAng(7,Chip:toWorld(ang(180,0,0)))€€#Screen€  holoPos(8, Chip:toWorld(vec(3.4,0,0.5)))  holoModel(8, £dome2£)  holoScale(8, vec(0.3,1,0.36))€  holoMaterial(8, £phoenix_storms/glass£) holoAng(8,Chip:toWorld(ang(-10,0,0)))€  holoClipEnabled(8,1)€  holoClip(8,vec(0.2,0,0),vec(0.2,0,0),0)€€  holoPos(9, Chip:toWorld(vec(-3.2,2.2,1.6)))  holoModel(9, £dome£)  holoScale(9, vec(0.3,0.12,0.9))€  holoAng(9,Chip:toWorld(ang(185,0,0)))€€  holoPos(10, Chip:toWorld(vec(-3.2,-2.2,1.6)))  holoModel(10, £dome£)  holoScale(10, vec(0.3,0.12,0.9))€  holoMaterial(10, Metal) holoAng(10,Chip:toWorld(ang(185,0,0)))€ €  holoPos(11, Chip:toWorld(vec(12.6,0,0.58)))  holoModel(11, £hqcylinder2£)  holoScale(11,vec(1.54,0.1,0.1))€  holoAng(11,Chip:toWorld(ang(2.1,0,90)))€€€AdjustCamF = -0.6€AdjustCamZ = 2.4€€}elseif(Boat == 2){€Type = 2€Name = £Catamaran£€###Main€€  holoScale(1, vec(0.3,0.84,0.1))€€#Steering€  holoPos(2, Chip:toWorld(vec(3.8,0,0.26))) €€#Lower left€  holoPos(3, Chip:toWorld(vec(4,4.6,0.2)))   holoScale(3, vec(2.3,0.3,0.5))€  holoAng(3,Chip:toWorld(ang(180,0,0)))€  holoClipEnabled(3,0)€€#Lower right€  holoPos(4, Chip:toWorld((vec(4,-4.6,0.2))))  holoModel(4, £dome£)  holoScale(4, vec(2.3,0.3,0.5))€  holoAng(4,Chip:toWorld(ang(180,0,0)))€  holoClipEnabled(4,0)€€#upper left€  holoPos(5, Chip:toWorld(vec(4,4.6,0.1)))  holoModel(5, £dome£)  holoScale(5, vec(2.3,0.3,0.1))€  holoAng(5,Chip:toWorld(ang(0,0,0)))€#upper right€  holoPos(6, Chip:toWorld(vec(4,-4.6,0.1)))  holoModel(6, £dome£)  holoScale(6,vec(2.3,0.3,0.1))€  holoAng(6,Chip:toWorld(ang(0,0,0)))€€#Interiour€  holoPos(7, Chip:toWorld(vec(4,0,0.2)))  holoModel(7, £dome2£)  holoScale(7, vec(1.6,1,0.4))€  holoAng(7,Chip:toWorld(ang(180,0,0)))€€#Screen€  holoPos(8, Chip:toWorld(vec(3.8,0,0.5)))  holoModel(8, £dome2£)  holoScale(8, vec(0.3,1,0.36))€  holoMaterial(8, £phoenix_storms/glass£) holoAng(8,Chip:toWorld(ang(-10,0,0)))€  holoClipEnabled(8,1)€  holoClip(8,vec(0.2,0,0),vec(0.2,0,0),0)€€  holoPos(9, Chip:toWorld(vec(-5,0,2)))  holoModel(9, £dome£)  holoScale(9, vec(0.3,0.2,0.9))€  holoAng(9,Chip:toWorld(ang(190,0,0)))€€  holoPos(10, Chip:toWorld(vec(0,0,0.5)))  holoModel(10, £dome£)  holoScale(10, vec(0.4,0.8,1))€  holoMaterial(10, Mat2) holoAng(10,Chip:toWorld(ang(-100,0,0)))€€  holoPos(11, Chip:toWorld(vec(3.8,0,0.16)))  holoModel(11, £dome£)  holoScale(11,vec(0.18,0.8,1.8))€  holoAng(11,Chip:toWorld(ang(90,0,0)))€€€AdjustCamF = 0.7€AdjustCamZ = 1.6€€€}elseif(Boat == 3){€Type = 3€Name = £Jetmax£€###Main€€ holoScale(1, vec(0.26,0.9,0.06))€€€#Steering€  holoPos(2, Chip:toWorld(vec(3.4,0,0.3))) €€#Lower bow€  holoPos(3, Chip:toWorld(vec(3.2,0,0.2)))   holoScale(3, vec(0.5,1,3))€  holoAng(3,Chip:toWorld(ang(90,0,0)))€  holoClipEnabled(3,1)€  holoClip(3,vec(0.2,0,0),vec(0.2,0,0),0)€#Lower stern€  holoPos(4, Chip:toWorld((vec(0,0,0.2))))  holoModel(4, £hqcylinder2£)  holoScale(4, vec(0.5,1,0.6))€  holoAng(4,Chip:toWorld(ang(90,0,0)))€  holoClipEnabled(4,1)€  holoClip(4,vec(0.2,0,0),vec(0.2,0,0),0)€€#upper bow€  holoPos(5, Chip:toWorld(vec(3.2,0,0.2)))  holoModel(5, £dome£)  holoScale(5, vec(0.16,1.06,3.1))€  holoAng(5,Chip:toWorld(ang(90,0,0)))€#upper stern€  holoPos(6, Chip:toWorld(vec(-1.8,0,0.1)))  holoModel(6, £hqcylinder2£)  holoScale(6,vec(0.2,1.04,0.32))€  holoAng(6,Chip:toWorld(ang(90,0,0)))€€#Interiour€  holoPos(7, Chip:toWorld(vec(2,0,0.2)))  holoModel(7, £dome2£)  holoScale(7, vec(1,0.98,0.4))€  holoAng(7,Chip:toWorld(ang(180,0,0)))€€#Screen€  holoPos(8, Chip:toWorld(vec(3.4,0,0.5)))  holoModel(8, £dome2£)  holoScale(8, vec(0.3,1,0.36))€  holoMaterial(8, £phoenix_storms/glass£) holoAng(8,Chip:toWorld(ang(-10,0,0)))€  holoClipEnabled(8,1)€  holoClip(8,vec(0.2,0,0),vec(0.2,0,0),0)€€  holoPos(9, Chip:toWorld(vec(-1.8,0,1.1)))  holoModel(9, £cylinder£)  holoScale(9, vec(0.1,0.5,0.3))€  holoAng(9,Chip:toWorld(ang(90,0,0)))€€  holoPos(10, Chip:toWorld(vec(11.6,2.4,0.8)))  holoModel(10, £hqcylinder2£)  holoScale(10,vec(1.3,0.06,0.1))€  holoAng(10,Chip:toWorld(ang(2,-2,-96)))€€  holoPos(11, Chip:toWorld(vec(11.6,-2.4,0.8)))  holoModel(11, £hqcylinder2£)  holoScale(11,vec(1.3,0.06,0.1))€  holoAng(11,Chip:toWorld(ang(2,2,96)))€€AdjustCamF = -0.6€AdjustCamZ = 2.4€€}elseif(Boat == 4){€Type = 4€Name = £Speeder£€€#Main€  holoScale(1, vec(0.5,0.9,0.06))€€€#Steering€  holoPos(2, Chip:toWorld(vec(5.8,0,0.3)))€#Lower bow€  holoPos(3, Chip:toWorld(vec(5.7,0,0.2)))   holoScale(3, vec(0.5,1,2.7))€  holoAng(3,Chip:toWorld(ang(90,0,0)))€  holoClipEnabled(3,1)€  holoClip(3,vec(0.2,0,0),vec(0.2,0,0),0)€€#Lower stern€  holoPos(4, Chip:toWorld(vec(0,0,0.2)))  holoModel(4, £hqcylinder2£)  holoScale(4, vec(1,0.5,1))€  holoAng(4,Chip:toWorld(ang(0,90,90)))€  holoClipEnabled(4,1)€  holoClip(4,vec(0,-0.2,0),vec(0,-0.2,0),0)€€#upper bow€€  holoPos(5, Chip:toWorld(vec(5.7,0,0.2)))  holoModel(5, £dome£)  holoScale(5, vec(0.16,1.06,2.8))€  holoAng(5,Chip:toWorld(ang(90,0,0)))€€#upper stern€€  holoPos(6, Chip:toWorld(vec(-2,0,0.1)))  holoModel(6, £hqcylinder2£)  holoScale(6,vec(0.16,1.04,0.68))€  holoAng(6,Chip:toWorld(ang(90,0,0)))€€#Interiour€€  holoPos(7, Chip:toWorld(vec(4,0,0)))  holoModel(7, £dome2£)  holoScale(7, vec(1.8,1,0.4))€  holoAng(7,Chip:toWorld(ang(180,0,0)))€€#Screen€  holoPos(8, Chip:toWorld(vec(6,0,0.3)))  holoModel(8, £dome2£)  holoScale(8, vec(0.2,1,0.4))€  holoMaterial(8, £phoenix_storms/glass£) holoAng(8,Chip:toWorld(ang(-10,0,0)))€  holoClipEnabled(8,1)€  holoClip(8,vec(0.2,0,0),vec(0.2,0,0),0)€€  holoPos(9, Chip:toWorld(vec(-6,2,1.6)))  holoModel(9, £dome£)  holoScale(9, vec(0.2,0.1,1))€  holoAng(9,Chip:toWorld(ang(185,0,0)))€€  holoPos(10, Chip:toWorld(vec(-6,-2,1.6)))  holoModel(10, £dome£)  holoScale(10, vec(0.2,0.1,1))€  holoMaterial(10, Metal) holoAng(10,Chip:toWorld(ang(185,0,0)))€ €  holoPos(11, Chip:toWorld(vec(-3.1,0,0.2)))  holoModel(11, £hqcylinder2£)  holoScale(11,vec(0.24,0.7,0.4))€  holoAng(11,Chip:toWorld(ang(90,0,0)))€€€AdjustCamF = 2€AdjustCamZ = 2.4€€}€}#end boat€€            €}€    €    if(Space & ~Space){€ €             Entity:soundPlay(2,0,£vehicles/airboat/pontoon_stopped_water_loop1.wav£)€             Entity:soundPlay(3,0,£vehicles/airboat/pontoon_fast_water_loop2.wav£)€    €                        €            if(Type == 1){€                Entity:soundPlay(1,0,£plats/tram_move.wav£)€            }elseif(Type == 2){€                Entity:soundPlay(1,0,£vehicles/airboat/fan_motor_fullthrottle_loop1.wav£)€            }elseif(Type == 3){€                Entity:soundPlay(1,0,£plats/elevator_move_loop1.wav£)€            }elseif(Type == 4){€                Entity:soundPlay(1,0,£vehicles/crane/crane_extend_loop1.wav£)€            }€            €            soundPitch(1,200)€            Pod:hintDriver(£W = Forward£,7)€            Pod:hintDriver(£S = Reverse£,7)€            Pod:hintDriver(£A & D = Left & Right£,7)€            Pod:hintDriver(£Reload to Change View£,7)€            €                     Vector = Chip:toWorld(vec(0,0,10))€                    Turn = Chip:toWorld(ang(0,0,0)):yaw()€            €        }€€         €   €    if(Drive==1){€        runOnTick(1)€      €       if(tickClk()){€    €      €            if(abs(Pitch)<35){€            if(!(W|S)){€                Forward-=(inrange(Forward,-1,1) ? Forward : sign(Forward)*0.5)€            }elseif(S& Forward >-180) {€                Forward-=1+1*(Forward>0)€            }elseif(W& Forward <600) {€                Forward+=1.5*(Forward>248 ? 1-(Forward-300)/300 : 1)€                €            }€            €                   Forward-=(Dturn*sign(Dturn)*0.01)*sign(Forward)€                €            }else{Forward-=(Forward > 1)}€        €                if(A|D){€                    €                    Dturn = clamp(Dturn+(A-D)*0.6,-45,45)€                    if((A-D) & sign(Dturn) != (A-D)){€                        Dturn -= (inrange(Dturn,-1,1) ? Dturn : sign(Dturn))*1€                    }€                    €            }elseif(Dturn<-1|Dturn>1){Dturn -= sign(Dturn)*1}€            elseif(Dturn!= 0){Dturn = 0}€              €             if(abs(Pitch)<50){           €                           €              Turn=(Turn+((Dturn*0.03)*((Forward)<140 ? (Forward/140) : 1))-Inertia*0.04)€            }€             €    €        rangerHitWater(1)€        Front =  rangerOffset(100,Position+Angle:up()*2+Angle:forward()*10,Angle:up()*-1):distance()€         rangerHitWater(1)€             Rear =   rangerOffset(100,Position+Angle:up()*2+Angle:forward()*-10,Angle:up()*-1):distance()€             €        €        Pitch = clamp(angnorm(Pitch + ((Front-Rear)*0.4)),-45,45)€        Roll = clamp(Dturn * (Forward*sign(Forward))*0.0002,-15,15) €       €        if(Waves > 30){Wave=-1}€        elseif(Waves < -45){Wave=1}€        €€        Waves += Wave * (50-Waves*sign(Waves))*0.02€    €    €     Z = (Waves*0.005 + 3.8 + Z) -(clamp((Front+Rear)/2,-20,clamp(12-(Forward*0.04),5,10)))€                     €     €            ###############€                €        soundPitch(1,((Forward*sign(Forward)*0.1)+30))€        soundVolume(2,100-Forward)€        soundVolume(3,Forward*0.001)€            €    if(A&Forward>50|D&Forward>50){€        Inertia =clamp(Inertia+(angnorm($Angle:yaw()*0.0003*Forward)),-Forward*0.03,Forward*0.03)}€           elseif(Inertia<-3|Inertia>3){Inertia -= sign(Inertia)*3}€           elseif(Inertia<-0.1|Inertia>0.1){Inertia -= sign(Inertia)*0.1}€           else{Inertia = 0}  €        €            Angle = ang(((Pitch)-Forward*0.08)+Waves*0.02,Turn,Roll)€            Vector =  (Vector+(Angle-ang(0,Inertia,0)):forward()*Forward*0.01)€              €             Position =  (Vector:setZ(Z)-$Vector:setZ(0)*Forward*0.04)€            €        holoPos(1,Position)€        holoAng(1,Angle)€     €  }## tick €€  €        if(R & ~R){€            CamClk = !CamClk€        }€        €         if(Horn & ~Horn){€    Entity:soundPlay(4,0,£synth/saw.wav£)€         soundPitch(4,60)}€    elseif(!Horn &  ~Horn){soundStop(4)}€        €        if(CamClk == 0){€            CamPosition = Position + (Angle:forward() *(AdjustCamF)) +(Angle:up() *(AdjustCamZ))€            CamAngle = (Angle) €        }else{€            CamPosition = Position + (CamAngle:forward() *-32) +(Angle:up() *14)€            CamAngle = (Angle - ang(-10,0,Roll)) €        }€    €    €        €        €      holoAng(2,Entity:toWorld(ang(Dturn*6,90,90)))€ €€€}€}€€€€€€€€"
76:"_original"
77:"link"
78:"Shift"
79:"Pitch"
80:"Colour1H"
81:"phoenix_storms/mat/mat_phx_plastic"
82:"Mat1"
83:"Drive"
84:"Bright1"
85:"Colour2H"
86:"Type"
87:"Waves"
88:"Blue"
89:"Bottom"
90:"Inertia"
91:"Boat"
92:"Spin"
93:"Rear"
94:"Turn"
95:"Front"
96:"Green"
97:"Bright2"
98:"Spawn"
99:"ColNum"
100:"Position"
101:"CamClk"
102:"Dturn"
103:"AdjustCamZ"
104:"phoenix_storms/fender_white"
105:"Mat2"
106:"$Vector"
107:"Roll"
108:"Splash"
109:"Angle"
110:"Random"
111:"Colour"
112:"Colour2"
113:"$Angle"
114:"Option"
115:"AdjustCamF"
116:"Vector"
117:"Wave"
118:"Squallo"
119:"Forward"
120:"Colour1"
121:"phoenix_storms/grey_steel"
122:"Metal"
123:"_vars"
124:"gmod_wire_cameracontroller"
125:"Static"
126:"cable/rope"
127:"Activated"
128:"Index"
129:"Bone"
130:"NoCollide"
Saved:251