@name [okei]Pathfinder
@inputs Pos:vector
@outputs 
@persist Send:gtable Index Col Done IndexRope [Ent1 Ent2]:entity Props:array PD Pointer:entity Remove:table TempZ

runOnTick(1)
runOnChat(1)

 E = entity()
 O = owner()

#=====================
#Pathfinder , It's a totally mess.
#=====================
if(first()){
     Spawn1 = propSpawn("models/hunter/blocks/cube025x025x025.mdl",E:pos()+vec(0,0,50),1)
        Spawn2 = propSpawn("models/hunter/blocks/cube025x025x025.mdl",E:pos()+vec(0,0,50),1)
        Point = propSpawn("models/hunter/plates/plate.mdl",E:pos(),1)
        
        Props:pushEntity(Spawn1)
        Props:pushEntity(Spawn2)
        Props:pushEntity(Point)
    for(I=1,50){
     
    holoCreate(1)
    holoPos(1,E:pos())
    Index = 1
    IndexRope = 2
Done = 0
}
}

if(first()){holoCreate(100)} 
if(Allow==1){
if(Done==0){
    
    rangerFilter(Props[1,entity])
    rangerFilter(Props[2,entity])
    rangerFilter(Props[3,entity])
rangerFilter(E)
R = rangerOffset(150,holoEntity(Index):pos(),holoEntity(Index):forward())
RD = R:distance()
RE = R:entity()
RP = R:position()
Props[3,entity]:setPos(RP)
holoPos(100,RP)
timer("holo",1000)


if(RD<40){
    Prop= RE
  Pos = Props[3,entity]:toLocal(Prop:pos())
PercentageX = (Pos:x()/RE:aabbMax():x())*100
PercentageY = (Pos:y()/RE:aabbMax():y())*100
PercentageZ = (Pos:z()/RE:aabbMax():z())*100
PD = PercentageX
         Index+=2
         IndexRope+=2
    holoCreate(Index)
    holoCreate(IndexRope)
    BM = Props[2,entity]:massCenter()
D = (Props[1,entity]:pos()-Props[2,entity]:pos())
Angle =  D:toAngle()
holoPos(IndexRope,(Props[1,entity]:pos()+Props[2,entity]:pos())*0.5)
Props[1,entity]:setAng(holoEntity(Index):angles())
Props[2,entity]:setAng(holoEntity(Index-2):angles())
holoScale(IndexRope,vec(D:length()*0.0833333,0.1,0.1))
holoAng(IndexRope,Angle)
#=================================================
#=====================
#Pathfinder
#=====================
#=================================================

  
    if(PercentageX<0||PercentageY<0){
    holoPos(Index,holoEntity(Index-2):pos()+vec(RE:aabbMax():x()+30,0,0))
}
if(PercentageX>0||PercentageY>0){
    holoPos(Index,holoEntity(Index-2):pos()-vec(RE:aabbMax():x()+60,0,0))
}
if(PercentageZ<0){
    timer("down",1000)
    TempZ = RE:aabbMax():z()
    holoPos(Index,holoEntity(Index-2):pos()+vec(0,0,RE:aabbMax():z()+60))
    
}

    Col+=20
}
if(clk("down")){holoPos(Index,holoEntity(Index):pos()-vec(0,0,TempZ+60))}

if(clk("holo")){
    IndexRope+=2
    
    holoCreate(IndexRope)
  
Angle =  D:toAngle()
holoPos(IndexRope,(Props[1,entity]:pos()+Props[2,entity]:pos())*0.5)
Props[1,entity]:setAng(holoEntity(Index):angles())
Props[2,entity]:setAng(holoEntity(Index-2):angles())
holoScale(IndexRope,vec(D:length()*0.0833333,0.1,0.1))
holoAng(IndexRope,Angle)

     Index+=2
    holoCreate(Index)
    holoPos(Index,holoEntity(Index-2):pos())   
    Col+=20
    }

Props[1,entity]:setPos(holoEntity(Index):pos())
Props[2,entity]:setPos(holoEntity(Index-2):pos())

  BM = Props[2,entity]:massCenter()
D = Props[1,entity]:massCenter()-BM
Angle =  D:toAngle()
holoPos(IndexRope,(Props[1,entity]:pos()+Props[2,entity]:pos())*0.5)
holoScale(IndexRope,vec(D:length()*0.0833333,0.1,0.1))
holoAng(IndexRope,Angle)
    Ang = (Pos-holoEntity(Index):pos()):toAngle()
holoPos(Index,holoEntity(Index):pos()+holoEntity(Index):forward()*2)
holoAng(Index,Ang)
DistA = E:pos():distance(Pos)
DistB = holoEntity(Index):pos():distance(Pos)
PercA = 
Percentage = (DistB/DistA)*100
holoScale(Index,vec(2,2,2))
holoColor(Index,hsv2rgb(vec(Col,1,1)))

Dist = holoEntity(Index):pos():distance(Pos)
if(Dist<50){
    Done = 1
}
}
setName("Percentage Left: "+round(Percentage))
if(Percentage<0){
    setName("Done !")
}
print(_HUD_PRINTCENTER,""+Percentage)

S = O:lastSaid():explode(" ")
if(chatClk(O)&S:string(1)=="-remove"){
 findByModel("models/hunter/blocks/cube025x025x025.mdl")   

 Remove = findToTable()
for(I=1,Remove:count()){
 Remove[I,entity]:propDelete()   
}
}
}
S = O:lastSaid():explode(" ")
if(chatClk(O)&S:string(1)=="#turn"&S:string(2)=="on"){
Allow = 1
}
if(chatClk(O)&S:string(1)=="#turn"&S:string(2)=="off"){
Allow = 0
} 