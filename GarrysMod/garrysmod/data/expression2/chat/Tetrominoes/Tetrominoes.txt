SHAPES = table(
    "i" = array(vec4(0x0F00,0x2222,0x00F0,0x4444),vec(0,255,255)),
    "j" = array(vec4(0x44C0,0x8E00,0x6440,0x0E20),vec(0,0,255)),
    "l" = array(vec4(0x4460,0x0E80,0xC440,0x2E00),vec(255,125,0)),
    "o" = array(vec4(0xCC00,0xCC00,0xCC00,0xCC00),vec(255,255,0)),
    "s" = array(vec4(0x06C0,0x8C40,0x6C00,0x4620),vec(0,255,0)),
    "t" = array(vec4(0x0E40,0x4C40,0x4E00,0x4640),vec(255,0,255)),
    "z" = array(vec4(0x0C60,0x4C80,0xC600,0x2640),vec(255,0,0))
)

function string shapeToStringInline(Hex) {
    local BinaryS = format("%016s",Hex:toString(2))
    local BinaryR = ""
    for (B = 1,16,4) {
        BinaryR += BinaryS:sub(B,B + 3) + " "
    }
    return BinaryR
}

local Print = array()
foreach (K,T:array = SHAPES) {
    local Color = T[2,vector]
    local Shape = T[1,vector4]    
    
    Print:pushVector(Color)
    Print:pushString(K + "\n")
    
    local A = shapeToStringInline(Shape[1]):explode(" ")
    local B = shapeToStringInline(Shape[2]):explode(" ")
    local C = shapeToStringInline(Shape[3]):explode(" ")
    local D = shapeToStringInline(Shape[4]):explode(" ")
    
    for (I = 1,4) {
        Print:pushString(format("%s\t%s\t%s\t%s\n",A[I,string],B[I,string],C[I,string],D[I,string]))
    }
}

printColor(Print)
