@name Biped
#@persist SegmentWidth SegmentLength BaseHeight Speed SpinSpeed WheelAng LegDist FootAngShift StepHeight StepLength
@persist SegmentWidth SegmentLength BaseHeight SpinSpeed WheelAng LegDist FootAngShift StepHeight StepLength
@inputs Speed
if(first()){
    FootAngShift = 20
    LegDist = 20/2
    StepLength = 45/2
    StepHeight = 10
    Speed = 0
    SegmentLength = 25
    SegmentWidth = 2
    BaseHeight = SegmentLength*2-2
    
    #SpinSpeed = Speed*360/(WheelRadius*2*_PI)
    SpinSpeed = Speed*360/((StepLength+StepHeight)*_PI)
    for(I=1,4){
        holoCreate(I)
        #holoParent(I,entity())
        holoScaleUnits(I,vec(SegmentLength,SegmentWidth,SegmentWidth))
    }
    holoParent(1,entity())
    holoParent(3,entity())
    holoParent(2,1)
    holoParent(4,3)
    runOnTick(1)
}
SpinSpeed = Speed*tickInterval()*360/((StepLength+StepHeight)*_PI)
WheelAng = (WheelAng+SpinSpeed)%360
Up = entity():up()
Forward = entity():forward()
#V2 = toWorld(vec(WheelRadius,0,0),ang(),entity():toWorld(vec(0,LegDist,WheelRadius)),entity():toWorld(ang(WheelAng,0,0)))
#V2 = entity():toLocal(toWorld(vec(WheelRadius,0,0),ang(),entity():toWorld(vec(0,LegDist,WheelRadius/2)),entity():toWorld(ang(WheelAng,0,0))))
#V3 = entity():toLocal(toWorld(vec(cos(WheelAng)*StepLength,0,sin(WheelAng)*StepHeight),ang(),entity():toWorld(vec(0,LegDist,0)),entity():angles()):rotateAroundAxis(entity():right(),FootAngShift))
V1 = entity():toWorld(vec(0,LegDist,BaseHeight))
V3 = (vec(cos(-WheelAng)*StepLength-StepLength/3,LegDist,sin(-WheelAng)*StepHeight+8)*vec(clamp(abs(Speed)/75,0,1),1,clamp(abs(Speed)/200,0,1))):rotateAroundAxis(vec(0,1,0),FootAngShift)
V3 = vec(V3:x(),V3:y(),max(0,V3:z()))
V2 = entity():toWorld(V3)
Dist = V1:distance(V2)
#FlatAng = 90-asin(cos(WheelAng)*WheelRadius/Dist)
FlatAng = 90-asin(V3:x()/Dist)
SegmentAng = acos(Dist/2/SegmentLength)
TopAng = entity():toWorld(ang(FlatAng-SegmentAng,0,0))
holoPos(1,V1+TopAng:forward()*SegmentLength/2)
holoAng(1,TopAng)
BottomAng = entity():toWorld(ang(FlatAng+SegmentAng,0,0))
holoPos(2,V2+BottomAng:forward()*-SegmentLength/2)
holoAng(2,BottomAng)

V1 = entity():toWorld(vec(0,-LegDist,BaseHeight))
V3 = (vec(cos(-WheelAng+180)*StepLength-StepLength/3,-LegDist,sin(-WheelAng+180)*StepHeight+8)*vec(clamp(abs(Speed)/75,0,1),1,clamp(abs(Speed)/200,0,1))):rotateAroundAxis(vec(0,1,0),FootAngShift)
V3 = vec(V3:x(),V3:y(),max(0,V3:z()))
V2 = entity():toWorld(V3)
Dist = V1:distance(V2)
#FlatAng = 90-asin(cos(WheelAng)*WheelRadius/Dist)
FlatAng = 90-asin(V3:x()/Dist)
SegmentAng = acos(Dist/2/SegmentLength)
TopAng = entity():toWorld(ang(FlatAng-SegmentAng,0,0))
holoPos(3,V1+TopAng:forward()*SegmentLength/2)
holoAng(3,TopAng)
BottomAng = entity():toWorld(ang(FlatAng+SegmentAng,0,0))
holoPos(4,V2+BottomAng:forward()*-SegmentLength/2)
holoAng(4,BottomAng)
