@name Player Pointer
@persist Ent:entity Plys:array Count 
@persist P:array Y:array
@persist I

if (first())
{
    runOnTick(1)
    
    Ent = entity()
    Ent:setAlpha(0)
}

Plys = players()
Count = Plys:count()

for (I = 1,Count)
{
    holoCreate(0)
    holoScaleUnits(0,vec(Ent:boxSize():x(),Ent:boxSize():x(),Ent:boxSize():x()))
    holoModel(0,"hqicosphere")
    holoColor(0,vec(128,128,128))
    holoMaterial(0,"models/debug/debugwhite")
    
    holoCreate(I)
    holoScale(I,vec(1,Ent:boxSize():z()/12.000005722046,1))
    holoModel(I,"models/sprops/misc/alphanum/alphanum_arrow_a.mdl")
    holoMaterial(I,"models/debug/debugwhite")
    holoColor(I,teamColor(Plys[I,entity]:team()))
}

for (I = 1,Count)
{
    if (Plys[I,entity]:timeConnected() == 0)
    {
        holoDelete(I)
    }
    
    P[I,number] = Ent:elevation(Plys[I,entity]:pos() + Plys[I,entity]:attachmentPos(0))
    Y[I,number] = Ent:bearing(Plys[I,entity]:pos() + Plys[I,entity]:attachmentPos(0))
    
    holoAng(I,ang(0,-Y[I,number]+90,-P[I,number]+90))
    holoPos(I,Ent:pos() + holoEntity(I):angles():up()*14 + holoEntity(I):angles():up()*sin(curtime()*80)*holoScaleUnits(I):z()/4)
}