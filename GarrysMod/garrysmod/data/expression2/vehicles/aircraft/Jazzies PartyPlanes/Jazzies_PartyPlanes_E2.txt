@name Jazzies PartyPlanes E2
@inputs L
@outputs Plane Updown Leftright Angle Land
@persist Height LandY LandZ LandAng W A S D F Propeller Shift Space EArr:array MoveSpeed Propspeed T Red1 Blue1 Green1 Red2 Green2 Blue2 Red3 Green3 Blue3 Primary:vector Secondary:vector Misc:vector
@trigger


Chip = entity()
E = entity():isWeldedTo()
runOnTick(1)
if(first())
{ 


E:setMass(50000)
Red1=random(255)
Green1=random(255)
Blue1=random(255)
Plane = random(3)
Primary = vec(Red1, Green1, Blue1)

Red2=random(255)
Green2=random(255)
Blue2=random(255)
Secondary = vec(Red2, Green2, Blue2)

Red3=random(255)
Green3=random(255)
Blue3=random(255)
Misc = vec(Red3, Green3, Blue3)
if (Plane < 1)
{Plane = 1}
else
{Plane = Plane}

if (Plane < 2 & Plane > 1)
{Plane = 2}
else
{Plane = Plane}

if (Plane < 3 & Plane > 2)
{Plane = 3}
else
{Plane = Plane}





if (Plane == 1)
{Height = 62
holoCreate(0)
holoPos(0,E:toWorld(vec(0,-10,-20)) + vec(0,0,20))
holoScale(0,vec(3,7,2))
holoAng(0,E:toWorld(ang(0,0,0)))
holoParent(0,E)
holoColor(0, Primary)

holoCreate(1)
holoPos(1,E:toWorld(vec(0,0,-9.4)) + vec(0,0,20))
holoScale(1,vec(15,3,0.2))
holoAng(1,E:toWorld(ang(0,0,0)))
holoParent(1,E)
holoColor(1, Secondary)

holoCreate(2)
holoPos(2,E:toWorld(vec(0,-33,-9.4)) + vec(0,0,20))
holoScale(2,vec(15,0.2,2.5))
holoAng(2,E:toWorld(ang(0,0,90)))
holoParent(2,E)
holoColor(2, Secondary)
holoModel(2, "prism")

holoCreate(3)
holoPos(3,E:toWorld(vec(0,44,-20)) + vec(0,0,20))
holoScale(3,vec(3,2,2))
holoAng(3,E:toWorld(ang(0,0,-90)))
holoParent(3,E)
holoColor(3, Primary)
holoModel(3, "pyramid")

holoCreate(4)
holoPos(4,E:toWorld(vec(0,-82,-20)) + vec(0,0,20))
holoScale(4,vec(3,2,5))
holoAng(4,E:toWorld(ang(0,0,90)))
holoParent(4,E)
holoColor(4, Primary)
holoModel(4, "pyramid")

holoCreate(5)
holoPos(5,E:toWorld(vec(90,0,-9.2)) + vec(0,0,20))
holoScale(5,vec(2,0.2,3))
holoAng(5,E:toWorld(ang(0,0,90)))
holoParent(5,E)
holoColor(5, Primary)
holoModel(5, "prism")

holoCreate(6)
holoPos(6,E:toWorld(vec(-90,0,-9.2)) + vec(0,0,20))
holoScale(6,vec(2,0.2,3))
holoAng(6,E:toWorld(ang(0,0,90)))
holoParent(6,E)
holoColor(6, Primary)
holoModel(6, "prism")

holoCreate(10)
holoPos(10,E:toWorld(vec(45,-10,-9.2)) + vec(0,0,20))
holoScale(10,vec(2,2,1))
holoAng(10,E:toWorld(ang(0,0,90)))
holoParent(10,E)
holoColor(10, Misc)
holoModel(10, "pyramid")

holoCreate(7)
holoPos(7,E:toWorld(vec(45,8,-9.2)) + vec(0,0,20))
holoScale(7,vec(2,2,2))
holoAng(7,E:toWorld(ang(0,0,90)))
holoParent(7,E)
holoColor(7, Misc)
holoModel(7, "cube")

holoCreate(8)
holoPos(8,E:toWorld(vec(-45,-10,-9.2)) + vec(0,0,20))
holoScale(8,vec(2,2,1))
holoAng(8,E:toWorld(ang(0,0,90)))
holoParent(8,E)
holoColor(8, Misc)
holoModel(8, "pyramid")

holoCreate(9)
holoPos(9,E:toWorld(vec(-45,8,-9.2)) + vec(0,0,20))
holoScale(9,vec(2,2,2))
holoAng(9,E:toWorld(ang(0,0,90)))
holoParent(9,E)
holoColor(9, Misc)
holoModel(9, "cube")

holoCreate(14)
holoPos(14,E:toWorld(vec(-45,25,-9.2)) + vec(0,0,20))
holoScale(14,vec(2,2,1))
holoAng(14,E:toWorld(ang(0,0,-90)))
holoParent(14,E)
holoColor(14, Primary)
holoModel(14, "pyramid")

holoCreate(11)
holoPos(11,E:toWorld(vec(45,25,-9.2)) + vec(0,0,20))
holoScale(11,vec(2,2,1))
holoAng(11,E:toWorld(ang(0,0,-90)))
holoParent(11,E)
holoColor(11, Primary)
holoModel(11, "pyramid")

holoCreate(16)
holoPos(16,E:toWorld(vec(-45,30,-9.2)) + vec(0,0,20))
holoScale(16,vec(1,1,1))
holoAng(16,E:toWorld(ang(0,0,-90)))
holoParent(16,E)
holoColor(16, Primary)
holoModel(16, "cone")

holoCreate(15)
holoPos(15,E:toWorld(vec(45,30,-9.2)) + vec(0,0,20))
holoScale(15,vec(1,1,1))
holoAng(15,E:toWorld(ang(0,0,-90)))
holoParent(15,E)
holoColor(15, Primary)
holoModel(15, "cone")

holoCreate(18)
holoPos(18,E:toWorld(vec(0,-93,0)) + vec(0,0,0))
holoScale(18,vec(5,0.2,2))
holoAng(18,E:toWorld(ang(0,0,-90)))
holoParent(18,E)
holoColor(18, Misc)
holoModel(18, "prism")
  
holoCreate(19)
holoPos(19,E:toWorld(vec(0,-90,5)) + vec(0,0,0))
holoScale(19,vec(2,0.2,2))
holoAng(19,E:toWorld(ang(120,90,0)))
holoParent(19,E)
holoColor(19, Primary)
holoModel(19, "prism")


holoCreate(12)
holoParent(12,E)
holoScale(12, vec(0.3,0.1,4.3))
holoPos(12,E:toWorld(vec(-45,30,-9.2)) + vec(0,0,20))
holoColor(12, Misc)

holoCreate(13)
holoParent(13,E)
holoScale(13, vec(0.3,0.1,4.3))
holoPos(13,E:toWorld(vec(45,30,-9.2)) + vec(0,0,20))
holoColor(13, Misc)

#landing gear

holoCreate(20)
holoScale(20, vec(0.2,0.2,3))
holoParent(20, E)
holoColor(20, Misc)

holoCreate(21)
holoScale(21, vec(0.2,0.2,3))
holoParent(21, E)
holoColor(21, Misc)

holoCreate(22)
holoScale(22, vec(0.2,0.2,3))
holoParent(22, E)
holoColor(22, Misc)

holoCreate(23)
holoParent(23, 20)
holoPos(23, holoEntity(20):toWorld(vec(0,0,-15)))
holoModel(23, "cylinder")
holoAng(23, holoEntity(20):angles()+ ang(90,0,0))
holoScale(23, vec(1,1,0.23))
holoColor(23, Primary)

holoCreate(24)
holoParent(24, 21)
holoPos(24, holoEntity(21):toWorld(vec(0,0,-15)))
holoModel(24, "cylinder")
holoAng(24, holoEntity(21):angles()+ ang(90,0,0))
holoScale(24, vec(1,1,0.23))
holoColor(24, Primary)

holoCreate(25)
holoParent(25, 22)
holoPos(25, holoEntity(22):toWorld(vec(0,0,-15)))
holoModel(25, "cylinder")
holoAng(25, holoEntity(22):angles()+ ang(90,0,0))
holoScale(25, vec(1,1,0.23))
holoColor(25, Primary)

holoCreate(26)
holoParent(26, 1)
holoPos(26, E:toWorld(vec(0,26,-10)))
holoScale(26, vec(3,1,1))
holoColor(26, Primary)}
holoAng(26,E:toWorld(ang(0,0,0)))


if (Plane == 2)
{Height = 70
holoCreate(0)
holoPos(0,E:toWorld(vec(0,0,-20)) + vec(0,0,20))
holoScale(0,vec(2,2,5))
holoAng(0,E:toWorld(ang(90,90,0)))
holoParent(0,E)
holoColor(0, Primary)
  
holoCreate(1)
holoPos(1,E:toWorld(vec(0,10,-30)) + vec(0,0,20))
holoScale(1,vec(2,2,6.65))
holoAng(1,E:toWorld(ang(90,90,0)))
holoParent(1,E)
holoColor(1, Primary)  

holoCreate(2)
holoPos(2,E:toWorld(vec(0,61.7,-30)) + vec(0,0,20))
holoScale(2,vec(2,2,2))
holoAng(2,E:toWorld(ang(90,90,0)))
holoParent(2,E)
holoColor(2, Secondary)  
holoModel(2, "pyramid")

holoCreate(3)
holoPos(3,E:toWorld(vec(0,70,-30)) + vec(0,0,20))
holoScale(3,vec(1,1,1.5))
holoAng(3,E:toWorld(ang(90,90,0)))
holoParent(3,E)
holoColor(3, Misc)  
holoModel(3, "cone")

holoCreate(12)
holoParent(12,E)
holoScale(12, vec(0.3,0.1,5))
holoPos(12, E:toWorld(vec(0,70,-30)) + vec(0,0,20))
holoColor(12, Misc)

holoCreate(4)
holoPos(4,E:toWorld(vec(0,34,-21)) + vec(0,0,20))
holoScale(4,vec(2,2,1))
holoAng(4,E:toWorld(ang(99,90,0)))
holoParent(4,E)
holoColor(4, Primary)
holoModel(4, "prism")

holoCreate(5)
holoPos(5,E:toWorld(vec(0,20,-35)) + vec(0,0,20))
holoScale(5,vec(0.2,15,2))
holoAng(5,E:toWorld(ang(90,90,0)))
holoParent(5,E)
holoColor(5, Secondary)

holoCreate(6)
holoPos(6,E:toWorld(vec(0,-10,-35)) + vec(0,0,20))
holoScale(6,vec(15,0.2,3))
holoAng(6,E:toWorld(ang(0,0,90)))
holoParent(6,E)
holoColor(6, Secondary)
holoModel(6, "prism")

holoCreate(7)
holoPos(7,E:toWorld(vec(0,-70,-25)) + vec(0,0,20))
holoScale(7,vec(2.8,2,6.7))
holoAng(7,E:toWorld(ang(90,-90,0)))
holoParent(7,E)
holoColor(7, Misc)  
holoModel(7, "pyramid")

holoCreate(8)
holoPos(8,E:toWorld(vec(0,-70,-25)) + vec(0,0,20))
holoScale(8,vec(1.5,1.5,4))
holoAng(8,E:toWorld(ang(90,-90,0)))
holoParent(8,E)
holoColor(8, Secondary)  
holoModel(8, "cube")

holoCreate(9)
holoPos(9,E:toWorld(vec(0,-105.3,-25)) + vec(0,0,20))
holoScale(9,vec(1.5,1.5,2))
holoAng(9,E:toWorld(ang(90,-90,0)))
holoParent(9,E)
holoColor(9, Secondary)  
holoModel(9, "pyramid")

holoCreate(10)
holoPos(10,E:toWorld(vec(0,-90.3,-25)) + vec(0,0,20))
holoScale(10,vec(6,0.2,2))
holoAng(10,E:toWorld(ang(0,0,-90)))
holoParent(10,E)
holoColor(10, Primary)  
holoModel(10, "prism")

holoCreate(11)
holoPos(11,E:toWorld(vec(0,-90,-5)) + vec(0,0,20))
holoScale(11,vec(2.6,0.2,2))
holoAng(11,E:toWorld(ang(90,0,-90)))
holoParent(11,E)
holoColor(11, Secondary)  
holoModel(11, "prism")

holoCreate(14)
holoPos(14,E:toWorld(vec(0,-90,-11)) + vec(0,0,20))
holoScale(14,vec(1,0.2,2))
holoAng(14,E:toWorld(ang(90,0,-90)))
holoParent(14,E)
holoColor(14, Secondary)  
holoModel(14, "cube")

#landing gear

holoCreate(15)
holoScale(15, vec(0.2,0.2,3))
holoParent(15, E)
holoColor(15, Misc)

holoCreate(16)
holoScale(16, vec(0.2,0.2,3))
holoParent(16, E)
holoColor(16, Misc)

holoCreate(17)
holoScale(17, vec(0.2,0.2,3))
holoParent(17, E)
holoColor(17, Misc)

holoCreate(18)
holoParent(18, 17)
holoPos(18, holoEntity(16):toWorld(vec(0,0,-13)))
holoModel(18, "cylinder")
holoAng(18, holoEntity(16):angles()+ ang(90,0,0))
holoScale(18, vec(1,1,0.23))
holoColor(18, Primary)

holoCreate(19)
holoParent(19, 16)
holoPos(19, holoEntity(17):toWorld(vec(0,0,-13)))
holoModel(19, "cylinder")
holoAng(19, holoEntity(17):angles()+ ang(90,0,0))
holoScale(19, vec(1,1,0.23))
holoColor(19, Primary)

holoCreate(20)
holoParent(20, 15)
holoPos(20, holoEntity(15):toWorld(vec(0,0,-13)))
holoModel(20, "cylinder")
holoAng(20, holoEntity(15):angles()+ ang(90,0,0))
holoScale(20, vec(1,1,0.23))
holoColor(20, Primary)

}
if (Plane == 3)
{Height = 58
holoCreate(0)
holoPos(0,E:toWorld(vec(0,0,-15)) + vec(0,0,20))
holoScale(0,vec(2,2,5))
holoAng(0,E:toWorld(ang(90,90,0)))
holoParent(0,E)
holoColor(0, Primary)

holoCreate(1)
holoPos(1,E:toWorld(vec(27,0,9)) + vec(0,0,20))
holoScale(1,vec(0.2,0.1,4.5))
holoAng(1,E:toWorld(ang(40,0,0)))
holoParent(1,E)
holoColor(1, Misc)    

holoCreate(2)
holoPos(2,E:toWorld(vec(27,20,9)) + vec(0,0,20))
holoScale(2,vec(0.2,0.1,4.5))
holoAng(2,E:toWorld(ang(40,0,0)))
holoParent(2,E)
holoColor(2, Misc)   

holoCreate(3)
holoPos(3,E:toWorld(vec(-27,20,9)) + vec(0,0,20))
holoScale(3,vec(0.2,0.1,4.5))
holoAng(3,E:toWorld(ang(-40,0,0)))
holoParent(3,E)
holoColor(3, Misc)      

holoCreate(4)
holoPos(4,E:toWorld(vec(-27,0,9)) + vec(0,0,20))
holoScale(4,vec(0.2,0.1,4.5))
holoAng(4,E:toWorld(ang(-40,0,0)))
holoParent(4,E)
holoColor(4, Misc)    

holoCreate(5)
holoPos(5,E:toWorld(vec(0,10,30)) + vec(0,0,20))
holoScale(5,vec(0.2,16,2))
holoAng(5,E:toWorld(ang(90,90,0)))
holoParent(5,E)
holoColor(5, Secondary) 

holoCreate(6)
holoPos(6,E:toWorld(vec(0,18,-20)) + vec(0,0,20))
holoScale(6,vec(2.3,2,2))
holoAng(6,E:toWorld(ang(90,90,0)))
holoParent(6,E)
holoColor(6, Primary)

holoCreate(7)
holoPos(7,E:toWorld(vec(0,20,-15)) + vec(0,0,20))
holoScale(7,vec(1.8,1.8,2.3))
holoAng(7,E:toWorld(ang(90,90,0)))
holoParent(7,E)
holoColor(7, Secondary)

holoCreate(8)
holoPos(8,E:toWorld(vec(0,37,-15)) + vec(0,0,20))
holoScale(8,vec(1.8,1.8,1))
holoAng(8,E:toWorld(ang(90,90,0)))
holoParent(8,E)
holoColor(8, Primary)
holoModel(8, "pyramid")

holoCreate(9)
holoPos(9,E:toWorld(vec(0,40,-15)) + vec(0,0,20))
holoScale(9,vec(1,1,1))
holoAng(9,E:toWorld(ang(90,90,0)))
holoParent(9,E)
holoColor(9, Misc)
holoModel(9, "cone")

holoCreate(12)
holoParent(12,E)
holoScale(12, vec(0.3,0.1,5))
holoPos(12,E:toWorld(vec(0,41,-15)) + vec(0,0,20))
holoColor(12, Misc)

holoCreate(13)
holoParent(13,E)
holoScale(13, vec(0.3,0.1,5))
holoPos(13,E:toWorld(vec(0,41,-15)) + vec(0,0,20))
holoColor(13, Misc)

holoCreate(10)
holoPos(10,E:toWorld(vec(0,10,-25)) + vec(0,0,20))
holoScale(10,vec(0.2,16,2))
holoAng(10,E:toWorld(ang(90,90,0)))
holoParent(10,E)
holoColor(10, Secondary) 

holoCreate(11)
holoPos(11,E:toWorld(vec(70,0,3)) + vec(0,0,20))
holoScale(11,vec(0.2,0.2,5.3))
holoAng(11,E:toWorld(ang(30,0,0)))
holoParent(11,E)
holoColor(11, Misc) 

holoCreate(14)
holoPos(14,E:toWorld(vec(-70,0,3)) + vec(0,0,20))
holoScale(14,vec(0.2,0.2,5.3))
holoAng(14,E:toWorld(ang(-30,0,0)))
holoParent(14,E)
holoColor(14, Misc) 

holoCreate(15)
holoPos(15,E:toWorld(vec(70,20,3)) + vec(0,0,20))
holoScale(15,vec(0.2,0.2,5.3))
holoAng(15,E:toWorld(ang(-30,0,0)))
holoParent(15,E)
holoColor(15, Misc) 

holoCreate(16)
holoPos(16,E:toWorld(vec(-70,20,3)) + vec(0,0,20))
holoScale(16,vec(0.2,0.2,5.3))
holoAng(16,E:toWorld(ang(30,0,0)))
holoParent(16,E)
holoColor(16, Misc) 

holoCreate(17)
holoPos(17,E:toWorld(vec(0,-68,-15)) + vec(0,0,20))
holoScale(17,vec(2,2,7))
holoAng(17,E:toWorld(ang(0,0,90)))
holoParent(17,E)
holoColor(17, Secondary)
holoModel(17, "pyramid")

holoCreate(18)
holoPos(18,E:toWorld(vec(0,-85,-15)) + vec(0,0,20))
holoScale(18,vec(4,1,0.2))
holoAng(18,E:toWorld(ang(0,0,0)))
holoParent(18,E)
holoColor(18, Misc)
holoModel(18, "cube")

holoCreate(19)
holoPos(19,E:toWorld(vec(0,-85,-10)) + vec(0,0,20))
holoScale(19,vec(2,0.2,1))
holoAng(19,E:toWorld(ang(130,90,0)))
holoParent(19,E)
holoColor(19, Misc)
holoModel(19, "prism")

#landing gear

holoCreate(20)
holoScale(20, vec(0.2,0.2,3))
holoParent(20, E)
holoColor(20, Misc)

holoCreate(21)
holoScale(21, vec(0.2,0.2,3))
holoParent(21, E)
holoColor(21, Misc)

holoCreate(22)
holoScale(22, vec(0.2,0.2,3))
holoParent(22, E)
holoColor(22, Misc)

holoCreate(23)
holoParent(23, 22)
holoPos(23, holoEntity(22):toWorld(vec(0,0,-15)))
holoModel(23, "cylinder")
holoAng(23, holoEntity(22):angles()+ ang(90,0,0))
holoScale(23, vec(1,1,0.23))
holoColor(23, Primary)

holoCreate(24)
holoParent(24, 21)
holoPos(24, holoEntity(22):toWorld(vec(0,0,-15)))
holoModel(24, "cylinder")
holoAng(24, holoEntity(21):angles()+ ang(90,0,0))
holoScale(24, vec(1,1,0.23))
holoColor(24, Primary)

holoCreate(25)
holoParent(25, 20)
holoPos(25, holoEntity(20):toWorld(vec(0,0,-18)))
holoModel(25, "cylinder")
holoAng(25, holoEntity(20):angles()+ ang(90,0,0))
holoScale(25, vec(1,1,0.23))
holoColor(25, Primary)

} 
Updown = 0
Leftright = 0
}

User = E:driver()
Earr = array(E,User,entity())
W = User:keyPressed("W")
A = User:keyPressed("A")
S = User:keyPressed("S")
D = User:keyPressed("D")
F = User:keyPressed("F")
Shift = User:keySprint()
Space = User:keyPressed("Space")
E:applyForce(-E:vel()*E:mass()/2.5)
rangerFilter(E)
rangerHitWater(1)




if(MoveSpeed>450){
E:applyForce(1*E:up()*Updown)
E:applyForce((A-D)*F*-E:right()*200*E:mass())
E:applyForce((F)*E:up()*-200*E:mass())
RanC = rangerOffset(50,E:pos()+E:boxCenter(),vec(0,0,-1))
E:applyTorque((vec((S-W)*0-E:angles():roll(),0.5*-Leftright-E:angles():pitch(),(A-D)*!F*100)*3-E:angVelVector())*E:mass())
E:applyTorque((vec(1*Updown*-1-E:angles():roll(),0.7*-Leftright*2-E:angles():pitch(),1*Leftright)*5-E:angVelVector())*E:mass())
L = 1
if (Shift == 1)
{Updown = Updown + 1}
if (Space == 1)
{Updown = Updown - 1}
if (Updown >= 91)
{Updown = 90}
else
{Updown = Updown}
if (Updown <= -91)
{Updown = -90}
else
{Updown = Updown}
if (A == 1)
{Leftright = Leftright + 0.5}
if (A == 0)
{Leftright = Leftright - 0.5}
if (D == 1)
{Leftright = Leftright - 0.5}
if (D == 0)
{Leftright = Leftright + 0.5}
if (Leftright >= 31)
{Leftright = 30}
else
{Leftright = Leftright}
if (Leftright <= -31)
{Leftright = -30}
else
{Leftright = Leftright}
if (Leftright < 0)
{Leftright = Leftright + 0.5}
else
{Leftright = Leftright}
if (Leftright > 0)
{Leftright = Leftright - 0.5}
else
{Leftright = Leftright}
}else{RanC = rangerOffset(250,E:pos()+E:boxCenter(),vec(0,0,-1))
E:applyTorque((vec(1*Updown*-1-E:angles():roll(),(D-A)*0-E:angles():pitch(),(A-D)*!F*5)*5-E:angVelVector())*E:mass())
Leftright = 0 #L = 0
if (Updown >= 0)
{Updown = Updown -0.5}
else
{Updown = Updown}
if (Updown <= 0)
{Updown = Updown +0.5}
else
{Updown = Updown}
}
if(W==1){MoveSpeed++ if(MoveSpeed>500){MoveSpeed=500}}else{MoveSpeed-- if(MoveSpeed<0){MoveSpeed=0}  }
E:applyForce(E:forward()*MoveSpeed*E:mass()*1.2)
if (Plane == 3)
{
holoAng(12,E:toWorld(ang(-T,0,0)))
holoAng(13,E:toWorld(ang(-T+90,0,0)))
}
else
{
holoAng(12,E:toWorld(ang(-T,0,0)))
holoAng(13,E:toWorld(ang(T,0,0)))
} 

E:applyForce(vec(0,0,1)*E:mass()*(Height-RanC:distance())) 
if (E:velL():y() >=10)
{T = T + 5}
else
{T = T}
if (E:velL():y() >=100)
{T = T + 10}
else
{T = T}
if (E:velL():y() >=1000)
{T = T + 100}
else
{T = T}
if (T >= 1000)
{T = 0}
else
{T = T}
if(E:driver())
{
Active=1
}
else{Active=0}
if(changed(Active)&Active)
{
E:hintDriver("Made by Jazzie!",7)
E:hintDriver("W = Accelerate",5)
E:hintDriver("A & D to Steer",5)
E:hintDriver("Space & Shift to Fly",5)
E:hintDriver("You don't have to hold space",5)
}
if(E:velL():y() >=1300)
{E:soundPlay(1,0,"Airboat_fan_fullthrottle")}
soundPitch(1,E:vel():length()*0.1)
soundVolume(1, 0.5)
if(E:velL():y() >=5 & E:velL():y() <=1300)
{E:soundPlay(2,0,"Airboat_fan_idle")}
soundPitch(2,E:vel():length()*0.1)
soundVolume(2, 0.5)
if (L == 1)
{LandZ = LandZ + 1}
else
{LandZ = LandZ}
if (L == 0)
{LandZ = LandZ - 0.3}
else
{LandZ = LandZ}
if (LandZ >= 1.2)
{LandZ = 1}
else
{LandZ = LandZ}
if (LandZ <= -10.2)
{LandZ = -10}
else
{LandZ = LandZ}
if (L == 0)
{LandAng = LandAng - 2}
else
{LandAng = LandAng}
if (L == 1)
{LandAng = LandAng + 2}
else
{LandAng = LandAng}
if (LandAng >= 91)
{LandAng = 90}
else
{LandAng = LandAng}
if (LandAng <= -1)
{LandAng = 0}
else
{LandAng = LandAng}
if (Plane == 2)
{holoAng(15, E:toWorld(ang(0,0,-LandAng)))
holoAng(16, E:toWorld(ang(0,0,LandAng)))
holoAng(17, E:toWorld(ang(0,0,LandAng)))
holoPos(15,E:toWorld(vec(0,30,LandZ-19)))
holoPos(16,E:toWorld(vec(10,-17,LandZ-20)))
holoPos(17,E:toWorld(vec(-10,-17,LandZ-20)))}
if (Plane == 3)
{holoAng(20, E:toWorld(ang(0,0,LandAng)))
holoAng(21, E:toWorld(ang(0,0,-LandAng)))
holoAng(22, E:toWorld(ang(0,0,-LandAng)))
holoPos(20,E:toWorld(vec(0,-35,LandZ-3)))
holoPos(21,E:toWorld(vec(10,12,LandZ-6)))
holoPos(22,E:toWorld(vec(-10,12,LandZ-6)))}
if (Plane == 1)
{holoAng(20, E:toWorld(ang(0,0,-LandAng)))
holoAng(21, E:toWorld(ang(0,0,LandAng)))
holoAng(22, E:toWorld(ang(0,0,LandAng)))
holoPos(20,E:toWorld(vec(0,10,LandZ-10)))
holoPos(21,E:toWorld(vec(10,-30,LandZ-10)))
holoPos(22,E:toWorld(vec(-10,-30,LandZ-10)))}

