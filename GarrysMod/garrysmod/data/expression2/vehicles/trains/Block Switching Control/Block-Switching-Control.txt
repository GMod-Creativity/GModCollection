@name Block Switching Control by Tolyzor
@inputs User:entity ShiftEntrySwitch ShiftExitSwitch 
@outputs Block PressUse
@persist SwitchLUT:table Index MaxIndex ProxDist [LastPos UserOffset EntrySwitch ExitSwitch]:vector Holo
@trigger
# please leave my name in the title!
# note: you register as being inside a block until you enter a new one
if (first()) {
    ProxDist = 100 # distance the entity must be to the waypoint to trigger it
    UserOffset = vec(0, 0, 20) # make the user hover above the button
    SwitchLUT = table(
        # each pair of rows in the table is an entry/exit pair
        # each waypoint corresponds to a switch at the same end of the block
        # diagram: [switch A]--[waypoint A]-----{block}------[waypoint B]--[switch B]
        # waypoint pos, switch pos
        #array(, ),
        array(vec(3842.50342, -2941.0188, -503.96875), vec(3711.73047, -2271.17578, -463.96875)), 
        array(vec(3836.53247, -4100.98193, -503.96875), vec(3712.02148, -4766.38867, -463.96875)),
        array(vec(4020.40088, -5103.85107, -503.96875), vec(3715.35962, -4766.7085, -463.96875)), 
        array(vec(4480.94922, -5749.4209, -503.96875), vec(4682.52148, -6130.15723, -463.96875)),
        array(vec(4662.67188, -5660.30762, -503.96875), vec(4683.33789, -6129.90381, -463.96875)), 
        array(vec(4658.76123, -1393.29004, -503.96875), vec(4682.12646, -912.29456, -463.96875)),
        array(vec(4015.27417, -1955.41907, -503.96875), vec(3712.34839, -2272.56714, -463.96875)), 
        array(vec(4514.64014, -1257.82312, -503.96875), vec(4682.81982, -910.73193, -463.96875)),
        array(vec(3842.21191, -1401.62061, -503.96875), vec(3968.48169, -768.67493, -463.96875)), 
        array(vec(3838.50366, -1921.95483, -503.96875), vec(3713.26123, -2269.72949, -463.96875)), 
        array(vec(3631.31274, -1345.95813, -503.96875), vec(3967.64575, -769.33765, -463.96875)), 
        array(vec(3581.73608, -5681.29199, -503.96875), vec(3840.04736, -6335.91113, -463.96875)), 
        array(vec(3837.78174, -5096.55127, -503.96875), vec(3712.50732, -4768.125, -463.96875)), 
        array(vec(3807.9873, -5689.98193, -503.96875), vec(3840.27954, -6336.59863, -463.96875)), 
        array(vec(5136.63867, -6404.86182, -503.96875), vec(4683.78125, -6131.09814, -463.96875)), 
        array(vec(5240.97168, -6501.59766, -503.96875), vec(5344.11523, -6786.58105, -463.96875)),
        array(vec(5375.9375, -6438.01807, -503.96875), vec(5343.85645, -6788.01514, -463.96875)),	
        array(vec(5371.86328, -601.76379, -503.96875), vec(5345.26904, -253.3949, -463.96875)),
        array(vec(5816.92383, -7085.77686, -503.96875), vec(5344.80762, -6792.04004, -463.96875)),	
        array(vec(6268.02246, -7787.12451, -503.96875), vec(6192.28125, -8063.31934, -463.96875)),
        array(vec(3584.22852, -6853.64453, -503.96875), vec(3840.14038, -6336.66162, -463.96875)),
        array(vec(3582.71802, -7000.75586, -503.96875), vec(3454.14014, -7073.0791, -463.96875)),
        array(vec(3843.3335, -239.58319, -503.96875), vec(3967.25977, -765.93683, -463.96875)),
        array(vec(3843.93286, -44.33673, -503.96875), vec(3712.57275, 32.5314, -463.96875)),
        array(vec(3582.87646, -63.77177, -503.96875), vec(3711.32349, 29.28135, -463.96875)),
        array(vec(3327.56567, -1888.50476, -503.96875), vec(3457.4187, -2430.7041, -463.96875)),
        array(vec(3331.73535, -2749.44238, -503.96875), vec(3455.91309, -2430.24097, -463.96875)),
        array(vec(3332.88867, -4490.91064, -503.96875), vec(3457.0874, -4767.82324, -463.96875)),
        array(vec(3330.70117, -5314.44043, -503.96875), vec(3455.98267, -4768.62744, -463.96875)),
        array(vec(3331.625, -5435.05615, -503.96875), vec(3105.4707, -5953.21289, -463.96875)),
        array(vec(5808.48779, 38.62837, -503.96875)	, vec(5344.96045, -249.92946, -463.96875)	),
        array(vec(6240.73633, 685.24561, -503.96875)	, vec(6144.98633, 956.52533, -463.96875)	),
        array(vec(6409.17529, 709.59723, -503.96875)	, vec(6144.42871, 958.40625, -463.96875)	),
        array(vec(6403.94092, 582.48578, -503.96875)	, vec(6176.15332, 62.52097, -463.96875)	),
        array(vec(6209.59668, -450.75763, -503.96875)	, vec(6176.89648, 65.00942, -463.96875)	),
        array(vec(6206.00049, -6585.19482, -503.96875)	, vec(6529.98633, -7104.54492, -463.96875)	),
        array(vec(6401.81934, -7631.34863, -503.96875), vec(6527.83545, -7104.36914, -463.96875)	),
        array(vec(6400.84082, -7740.82666, -503.96875)	, vec(6193.53125, -8063.89453, -463.96875)	),
        array(vec(6397.17822, -481.00256, -503.96875)	, vec(6175.05469, 63.91125, -463.96875)	),
        array(vec(6400.5459, -3712.19238, -503.96875)	, vec(6527.63428, -3777.08447, -463.96875)	),
        array(vec(6395.96631, -5269.42139, -503.96875)	, vec(6528.42432, -5185.21094, -463.96875)	),
        array(vec(6403.41699, -6559.34766, -503.96875)	, vec(6527.25928, -7103.92773, -463.96875)	),
        array(vec(6653.91553, -7380.14307, -503.96875)	, vec(6880.58105, -7742.59717, -463.96875)	),
        array(vec(6657.11572, -5248.28418, -503.96875)	, vec(6529.15869, -5182.6709, -463.96875)	),
        array(vec(6653.20752, -3701.01611, -503.96875)	, vec(6526.51074, -3776.45801, -463.96875)	),
        array(vec(6652.91504, -257.51416, -503.96875)	, vec(6879.08643, 256.73798, -463.96875)	),
        array(vec(3199.27637, -4541.48584, -503.96875)	, vec(3455.41553, -4766.16211, -463.96875)	),
        array(vec(1940.32996, -2802.76172, -503.96875)	, vec(2047.38965, -2559.15088, -463.96875)	),
        array(vec(1790.6377, -2861.4646, -503.96875)	, vec(2046.83533, -2562.44141, -463.96875)	),
        array(vec(1794.12708, -4329.57764, -503.96875)	, vec(1664.91516, -4639.78125, -463.96875)	),
        array(vec(1934.73694, -4419.42822, -503.96875)	, vec(1666.33752, -4639.43115, -463.96875)	),
        array(vec(3186.78833, -2652.49585, -503.96875)	, vec(3456.41138, -2430.80103, -463.96875)	),
        array(vec(1794.00806, -5169.70117, -503.96875)	, vec(1664.6311, -4641.45605, -463.96875)	),
        array(vec(1787.93408, -5242.93311, -503.96875)	, vec(2023.32227, -5758.8916, -463.96875)	),
        array(vec(3328.5415, -6513.41016, -503.96878)	, vec(3103.48364, -5953.01465, -463.96875)	),
        array(vec(3330.18213, -6986.45117, -503.96875)	, vec(3455.40332, -7071.88721, -463.96875)	),
        array(vec(3120.03955, -6511.40283, -503.96875)	, vec(3103.69507, -5952.47754, -463.96875)	),
        array(vec(12247.71289, -11646.93262, -119.96875)	, vec(12559.42773, -11774.7334, -79.96876)	),
        array(vec(3580.45728, -8555.38281, -503.96875)	, vec(3455.75195, -8481.72461, -463.96875)	),
        array(vec(7912.41748, -10621.60645, -503.96875), vec(8255.29102, -10415.18945, -463.96875)),
        array(vec(7980.94629, -10885.09766, -503.96878)	, vec(8318.59375, -11007.66406, -463.96875)	),
        array(vec(3324.1189, -8566.45117, -503.96875)	, vec(3454.44092, -8480.4248, -463.96875)	),
        array(vec(7949.08887, -10752.33203, -503.96875)	, vec(8319.36328, -11007.73437, -463.96875)	),
        array(vec(6395.25879, -8529.39062, -503.96875)	, vec(6192.31494, -8065.521, -463.96875)	),
        array(vec(6655.79492, -8181.01416, -503.96875)	, vec(6879.80469, -7743.77686, -463.96875)	),
        array(vec(7971.48438, -10486.96484, -503.96875)	, vec(8255.6416, -10415.19922, -463.96875)	),
        array(vec(6799.72314, -7433.05273, -503.96875)	, vec(6881.06445, -7743.26025, -463.96875)	),
        array(vec(8657.67383, -6140.34375, -503.96875)	, vec(8691.7168, -6230.16357, -503.96875)	),
        array(vec(6656.4248, 546.18524, -503.96875)	, vec(6878.94727, 257.29889, -463.96875)	),
        array(vec(4302.69141, 3840.06689, -503.96875), vec(3776.44458, 3712.25317, -463.96875)	),
        array(vec(2324.22168, 3572.91333, -503.96872)	, vec(1986.57617, 3376.82739, -463.96875)	),
        array(vec(6399.62793, 1476.92798, -503.96875)	, vec(6144.69238, 960.13922, -463.96875)	),
        array(vec(3841.06738, 1518.48657, -503.96875)	, vec(3714.45703, 1443.29834, -463.96875)	),
        array(vec(2272.2688, 3716.2085, -503.96875)	, vec(1919.50452, 3967.60181, -463.96875)	),
        array(vec(2270.35132, 3445.88989, -503.96875)	, vec(1983.86487, 3376.82959, -463.96875)	),
        array(vec(3584.01318, 1523.58521, -503.96875)	, vec(3711.30591, 1439.85815, -463.96875)	),
        array(vec(3223.74878, 3846.35864, -503.96875)	, vec(3773.56152, 3712.69067, -463.96875)	),
        array(vec(2253.20923, 3843.28955, -503.96875)	, vec(1920.46289, 3968.07861, -463.96875)	),
        array(vec(3237.96558, 4051.23218, -503.96875)	, vec(3772.88867, 3711.60303, -463.96875)	),
        array(vec(-3041.24487, 3839.59961, -503.96875)	, vec(-3326.14185, 3713.20972, -463.96875)	),
        array(vec(1516.0686, 3843.72046, -495.96875)	, vec(1920.35803, 3969.08301, -463.96875)	),
        array(vec(-10239.79883, 2230.69409, -503.96875)	, vec(-10367.0293, 2302.96777, -463.96875)	),
        array(vec(-10500.86523, 2231.35181, -503.96875)	, vec(-10366.70605, 2301.91626, -463.96875)	),
        array(vec(1521.7926, 3584.93311, -495.96875)	, vec(1983.63538, 3376.23047, -463.96875)	),
        array(vec(-10241.0332, 3792.25537, -503.96875)	, vec(-10368.14355, 3712.4502, -463.96875)	),
        array(vec(-10243.00293, 5109.65918, -503.96875)	, vec(-10366.75195, 5375.78809, -463.96875)	),
        array(vec(-10497.95996, 6706.59863, -503.96875)	, vec(-10368.62305, 7232.69043, -463.96875)	),
        array(vec(-10497.53809, 3789.87598, -503.96875)	, vec(-10369.09766, 3712.05615, -463.96875)	),
        array(vec(-10109.7793, 5194.79541, -503.96875)	, vec(-10369.2168, 5375.7998, -463.96875)	),
        array(vec(-3848.73535, 3842.75391, -503.96872)	, vec(-3327.90576, 3712.92871, -463.96875)),
        array(vec(-10235.22656, 5898.55518, -503.96875)	, vec(-10368.56055, 5377.93896, -463.96875)	),
        array(vec(-1418.58936, 9477.73633, -503.96875)	, vec(-1152.77905, 9364.70996, -463.96875)	),
        array(vec(2556.37891, 8453.80566, -503.96875)	, vec(2624.11938, 8321.58008, -463.96875)	),
        array(vec(-10495.33594, 7778.63672, -503.96875)	, vec(-10367.14551, 7232.95898, -463.96875)),
        array(vec(-10687.02051, 7760.94141, -503.96875)	, vec(-10370.90723, 7230.04834, -463.96875)	),
        array(vec(8948.1416, 15491.33984, 136.03125)	, vec(9214.97363, 15616.4209, 176.03125)	),
        array(vec(-880.74042, 8882.61426, -503.96875)	, vec(-1149.17725, 9365.29688, -463.96875)	),
        array(vec(1267.67456, 8193.58691, -503.96875)	, vec(1536.06018, 8320.36621, -463.96875)	),
        array(vec(1363.62097, 8070.15137, -503.96875)	, vec(1536.26038, 8320.80273, -463.96875)	),
        array(vec(-3136.85083, 3965.18994, -503.96875)	, vec(-3327.573, 3711.69189, -463.96875)	),
        array(vec(2055.76758, 8194.09473, -503.96875)	, vec(1534.42249, 8321.40332, -463.96875)),
        array(vec(2558.31885, 8190.73096, -503.96875)	, vec(2622.63696, 8319.68555, -463.96875)	),
        array(vec(4106.59521, 8451.79785, -503.96875)	, vec(4033.37793, 8322.50977, -463.96875)),
        array(vec(4863.8252, 8450.97656, -503.96875)	, vec(5376.00293, 8321.91309, -463.96875)	),
        array(vec(4106.12598, 8185.42188, -503.96875)	, vec(4031.57422, 8318.30859, -463.96875)	),
        array(vec(10500.7627, -10627.67383, -503.96875)	, vec(10431.10254, -10751.60156, -463.96875)	),
        array(vec(8945.87891, -10625.0498, -503.96875)	, vec(9024.13672, -10752.92383, -463.96875)	),
        array(vec(8709.12988, -10626.34668, -503.96875)	, vec(8257.44629, -10415.79687, -463.96875)	),
        array(vec(8705.15039, -10882.72168, -503.96875)	, vec(8321.9541, -11007.22949, -463.96875)	),
        array(vec(8957.20703, -10893.04492, -503.96875)	, vec(9026.23926, -10752.07227, -463.96875)	),
        array(vec(10512.46973, -10879.0957, -503.96875)	, vec(10431.8457, -10752.01465, -463.96875)	),
        array(vec(5919.7002, 8447.02148, -503.96875)	, vec(5376.2583, 8320.16797, -463.96875)	),
        array(vec(9031.4043, 15364.94336, 136.03125)	, vec(9215.99902, 15614.93066, 176.03125)	),
        array(vec(5520.93262, 11392.92676, 136.03125)	, vec(4994.3042, 11265.24609, 176.03125)	),
        array(vec(4451.94189, 11582.46973, 136.03125)	, vec(4992.43945, 11263.37695, 176.03125)	),
        array(vec(11529.41504, -12800.41504, -119.96874)	, vec(12047.13672, -12673.10645, -79.96875)	),
        array(vec(12594.53027, -12998.77344, -119.96875)	, vec(12048.42676, -12672.85254, -79.96877)	),
        array(vec(15378.76074, -10625.93848, -119.96875)	, vec(15614.61133, -10114.06445, -79.96875)	),
        array(vec(15574.74609, -9554.83887, -119.96875)	, vec(15617.80371, -10110.97852, -79.96875)	),
        array(vec(15570.02539, -527.99316, -119.96873)	, vec(15248.56055, 0.11395, -79.96875)	),
        array(vec(15372.03711, 537.96497, -119.96875)	, vec(15248.81445, 0.80911, -79.96875)	),
        array(vec(15373.42676, 4861.85742, -119.96873)	, vec(15250.23242, 4926.94336, -79.96875)	),
        array(vec(15371.6377, 6413.31836, -119.96873), vec(15249.69434, 6337.08252, -79.96876)	),
        array(vec(15374.04688, 9562.4082, -119.96875)	, vec(15501.87988, 10111.29395, -79.96877)	),
        array(vec(15372.06348, 10637.5625, -119.96875)	, vec(15503.32129, 10112.35645, -79.96875)	),
        array(vec(9731.68652, 15489.87598, 136.03125)	, vec(9216.66016, 15614.17969, 176.03125)	),
        array(vec(15180.2207, 9574.78027, -119.96874)	, vec(15503.5166, 10113.3252, -79.96874)	),
        array(vec(15123.37891, 7684.79688, -119.96873)	, vec(15248.46191, 7422.38672, -79.96875)	),
        array(vec(15007.18262, 7590.95996, -119.96876)	, vec(15247.73047, 7425.97461, -79.96875)	),
        array(vec(11023.62207, 4612.13232, -119.96875)	, vec(11289.59961, 4142.84229, -79.96875)	),
        array(vec(11147.9668, 3921.55127, -119.96875)	, vec(11287.49219, 4138.25342, -79.96875)	),
        array(vec(15002.31055, 1191.40356, -119.96877)	, vec(15249.23926, 1025.03491, -79.96875)	),
        array(vec(15129.39844, 1286.29028, -119.96875)	, vec(15246.38184, 1025.89575, -79.96875)	),
        array(vec(15117.61133, 4862.88135, -119.96875)	, vec(15246.78418, 4927.82031, -79.96875)	),
        array(vec(11020.41309, 3828.08325, -119.96875)	, vec(11289.77832, 4139.72803, -79.96876)	),
        array(vec(12388.62207, -11531.10742, -119.96875)	, vec(12561.12012, -11774.96289, -79.96875)	),
        array(vec(13091.69727, -11648.71191, -119.96873)	, vec(12559.74805, -11775.76367, -79.96873)	),
        array(vec(14976.26953, -10345.47363, -119.96875)	, vec(14880.24902, -10113.44434, -79.96875)	),
        array(vec(15113.8252, -9590.77148, -119.96873)	, vec(14880.60547, -10112.24609, -79.96877)	),
        array(vec(15120.20996, -9287.20996, -119.96876)	, vec(15245.87402, -9216.75586, -79.96874)	),
        array(vec(15118.41309, -7725.31201, -119.96876)	, vec(15247.7002, -7806.79932, -79.96875)	),
        array(vec(15121.18359, -2683.56104, -119.96873)	, vec(15248.2168, -2624.96436, -79.96876)	),
        array(vec(15120.01855, -1132.61243, -119.96877)	, vec(15246.65332, -1214.50513, -79.96875)),
        array(vec(15118.92676, 509.4285, -119.96874)	, vec(15247.94336, 1023.64441, -79.96875)	),
        array(vec(15373.70703, -556.70142, -119.96875)	, vec(15247.11719, 0.41348, -79.96875)	),
        array(vec(15377.97461, -1149.77576, -119.96875)	, vec(15248.68555, -1212.97058, -79.96875)	),
        array(vec(15373.12793, -2704.56738, -119.96875), vec(15249.78613, -2623.73437, -79.96875)	),
        array(vec(15374.14551, -7744.9165, -119.96875)	, vec(15248.64941, -7807.44043, -79.96875)	),
        array(vec(15376.4375, -9289.42871, -119.96875)	, vec(15250.02734, -9214.34863, -79.96874)	),
        array(vec(15378.04785, -9569.34082, -119.96873)	, vec(15615.71484, -10112.85059, -79.96874)	),
        array(vec(15119.96777, -10359.25488, -119.96875)	, vec(14881.90918, -10113.30566, -79.96875)),
        array(vec(12589.50488, -12806.43945, -119.96876)	, vec(12046.90723, -12671.30469, -79.96875)	),
        array(vec(15117.43066, 6407.93408, -119.96875)	, vec(15245.09863, 6334.41943, -79.96875)),
        array(vec(15124.19141, 6908.78516, -119.96875)	, vec(15248.9082, 7425.98584, -79.96875)	)
    )
    MaxIndex = SwitchLUT:count()
}
runOnTick(1) # consider reducing this, and only execute main code when pos changes every 10th of a sec...
#[if (holoCanCreate() & !holoEntity(1)) { # for debugging
    for(K = MaxIndex, 1, -1) { # for making the LUT
        local WayPos = SwitchLUT[K, array][1, vector]
        holoCreate(K, WayPos)
        holoColor(K, vec(0, 255, 0))
        holoScale(K, vec(3, 3, 3))
    }
}]#

Pos = entity():pos()
if (Pos != LastPos) {
    Index = 0 # reset index to enable searching
} 
LastPos = Pos # save for next execution

while (perf()) {
    Index++
    if (Index > MaxIndex) {break} # if search complete stop searching
    WaypointPos = SwitchLUT[Index , array][1, vector]
    if (WaypointPos:distance(Pos) < ProxDist) {
        EntryIndex = Index
        break # dont need to continue looping
    }
}

#EntryIndex = 1 # for development only
if (EntryIndex) {
    local IndexIsOdd = EntryIndex % 2
    if (IndexIsOdd) {
        ExitIndex = EntryIndex + 1
        Block = ExitIndex / 2 # for user info only
    } else {
        ExitIndex = EntryIndex - 1
        Block = EntryIndex / 2
    }
    EntrySwitch = SwitchLUT[EntryIndex , array][2, vector]
    ExitSwitch = SwitchLUT[ExitIndex, array][2, vector]
}
if (~ShiftEntrySwitch & ShiftEntrySwitch) {
    User:setPos(EntrySwitch + UserOffset)
    timer("useTimer", 1)
} elseif (~ShiftExitSwitch & ShiftExitSwitch) {
    User:setPos(ExitSwitch + UserOffset)
    timer("useTimer", 1)
}
if (clk("useTimer")) {
    PressUse = 1
} else {PressUse = 0}