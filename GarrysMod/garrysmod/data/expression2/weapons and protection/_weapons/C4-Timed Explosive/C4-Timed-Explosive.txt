@name C4
@inputs 
@outputs  
@persist [Time Defuse Detonate Explode Off DefT Index Brute PIndex Follow I2 II3 Radius Maxprops II2 Saving] 
@persist [Password Password2 Model Password3 Data Name LoadName]:string 
@persist [H FF Prop P E Ent Stick Attach]:entity [PPOS]:vector 
@persist [PropIndex Brute1 LoadData Bind]:array
@trigger 
interval(100)
runOnChat(1)
#variables + first
P = owner()
E = entity()
Chat = chatClk(P)
Chat2 = chatClk()
LAS = lastSaid():lower()
LASS = LAS:explode(" ")
LAS2 = LAS:explode(":")
LS = P:lastSaid():lower()
LSS = LS:explode(" ")
LS2 = LS:explode(":")
if (first()){
    Bind[1,string] = "p"
    Bind[2,string] = "o"
    Bind[3,string] = "i"
    Bind[4,string] = "l"
    Bind[5,string] = "k"
    Off = 1
    Radius = 1000
    Maxprops = 75
    Model = "models/props_phx/torpedo.mdl"
    Time = 15000
    PIndex = (Time/255)
    DefT = (Time/1000)
    DefT = (PIndex/DefT)
    DefT = DefT-0.5
    Password = "123"
    Password2 = "1234"
    Password3 = "12345"
    function hide(){
            hideChat(1)
            printColor(vec(0,0,255),"[Hidden]",vec(random(0,255),random(0,255),random(0,255)),+P:name(),vec(255,255,255),": "+LS)
    }
}
#/help
if(Chat&LS == "/help"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/model [model] - changes model of prop used to explode.")
    print("/radius [number] - changes explosion radius.")
    print("/maxprops [number] - changes max props used for explosion.")
    print("/time [number] - changes time for bomb to explode.")
    print("/help 2 - more help")
}
#/help 2
if(Chat&LS == "/help 2"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/password:[password] - changes password to detonate c4.")
    print("/password 2:[password] - changes password to defuse c4.")
    print("/password 3:[password] - changes password to disarm c4.")
    print("/help 3 for more help.")
}
#/help 3
if(Chat&LS == "/help 3"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/bind:plant [key] - changes bind to plant bomb.")
    print("/bind:disarm [key] - changes bind to disarm bomb.")
    print("/bind:detonate [key] - changes bind to detonate bomb.")
    print("/bind:defuse [key] - changes bind to defuse bomb.")
    print("/bind:attach [key] - changes bind to attach bomb.")
    print("/help 4 for more help.")
}
#/help 4
if(Chat&LS == "/help 4"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/detonate:[password] - detonates c4, requires user to be near c4")
    print("/disarm:[password] - disarm c4, requires user to be near c4")
    print("/defuse:[password] - defuses c4, requires user to be near c4")
    print("/attach - attaches c4 to what you're looking at.")
    print("/help 5 for more help.")
}
#/help 5
if(Chat&LS == "/help 5"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/force [detonate] - forces bomb to detonate, requires user to be near c4 and defuse time based on password length")
    print("/force [disarm] - forces bomb to disarm, requires user to be near c4 and defuse time based on password length")
    print("/force [defuse] - forces bomb to defuse, requires user to be near c4 and defuse time based on password length")
    print("/help 6 for more help.")
}
#/help 6
if(Chat&LS == "/help 6"){
    hide()
    print(_HUD_PRINTCENTER,"Help Printed In console.")
    print("/remote detonate - remotely detonates c4, no password required.")
    print("/remote disarm - remotely disarm c4, no password required.")
    print("/remote defuse - remotely defuses c4, no password required.")
    print("/settings - display settings.")
    print("/save [name] - saves settings to a txt file.")
    print("/load [name] - loads settings.")
}
#/model
if(Chat&LSS:string(1) == "/model"){
    hide()
    Model = LSS:string(2)
    print("Changed explosives to: "+Model)
}
#/radius
if(Chat&LSS:string(1) == "/radius"){
    hide()
    Radius = LSS:string(2):toNumber()
    print("Changed Explosion Radius to: "+Radius)
}
#/maxprops
if(Chat&LSS:string(1) == "/maxprops"){
    hide()
    Maxprops = LSS:string(2):toNumber()
    print("Changed max props spawned to: "+Maxprops)
}
#/password
if(Chat&LS2:string(1) == "/password"){
    hide()
    Password = LS2:string(2)
    print("Detonating Password Is Now: "+Password)
}
#/password2
if(Chat&LS2:string(1) == "/password 2"){
    hide()
    Password2 = LS2:string(2)
    print("Defusing Password Is Now: "+Password2)
}
#/password3
if(Chat&LS2:string(1) == "/password 3"){
    hide()
    Password3 = LS2:string(2)
    print("Disarming Password Is Now: "+Password3)
}
#/bind plant
if(Chat&LSS:string(1) == "/bind:plant"){
    hide()
    if(LSS:string(2):length()==1){
    Bind[1,string] = LSS:string(2)
    print("Changed planting bind to: "+Bind[1,string])
    }else{
    hint("Invalid Key!",10)
}
}
#/attach
if(Chat&LS == "/attach"){
    hide()
    if(P:aimEntity():isValid()){
        Attach = P:aimEntity()
        holoCreate(1)
        holoPos(1,P:pos())
        holoColor(1,vec(0,255,0))
        holoAng(1,ang(0,0,0))
        if(holoModelAny()){
            holoModel(1,"models/weapons/w_c4_planted.mdl")
    }
    H = holoEntity(1)
    }else{
    hint("Invalid Entity!",10)
}
}
if(changed(P:keyPressed(Bind[5,string]))&P:keyPressed(Bind[5,string])){
    if(P:aimEntity():isValid()){
        Attach = P:aimEntity()
        holoCreate(1)
        holoPos(1,P:pos())
        holoColor(1,vec(0,255,0))
        holoAng(1,ang(0,0,0))
        if(holoModelAny()){
            holoModel(1,"models/weapons/w_c4_planted.mdl")
    }
    H = holoEntity(1)
    }else{
    hint("Invalid Entity!",10)
}
}
#/bind disarm
if(Chat&LSS:string(1) == "/bind:disarm"){
    hide()
    if(LSS:string(2):length()==1){
        Bind[2,string] = LSS:string(2)
        print("Changed Disarm bind to: "+Bind[2,string])
    }else{
    hint("Invalid Key!",10)
}
}
#/suicide
if(Chat&LS == "/suicide"){
    hide()
    Follow = 1
    holoCreate(1)
    holoColor(1,vec(0,255,0))
    holoModel(1,"models/weapons/w_c4_planted.mdl")
    H = holoEntity(1)
}
if(Follow){
    holoPos(1,P:pos())
    holoAng(1,P:angles())
}
#/bind detonate
if(Chat&LSS:string(1) == "/bind:detonate"){
    hide()
    if(LSS:string(2):length()==1){
    Bind[3,string] = LSS:string(2)
    print("Changed Detonate bind to: "+Bind[3,string])
    }else{
    hint("Invalid Key!",10)
}
}

#/bind defuse
if(Chat&LSS:string(1) == "/bind:defuse"){
    hide()
    if(LSS:string(2):length()==1){
    Bind[4,string] = LSS:string(2)
    print("Changed Defuse bind to: "+Bind[4,string])
    }else{
    hint("Invalid Key!",10)
}
}

#/bind attach
if(Chat&LSS:string(1) == "/bind:attach"){
    hide()
    if(LSS:string(2):length()==1){
    Bind[5,string] = LSS:string(2)
    print("Changed Attach bind to: "+Bind[5,string])
    }else{
    hint("Invalid Key!",10)
}
}
#find players
if(!Off){
    findByClass("player")
    findSortByDistance(H:pos())
    FF = find()
}
#/settings
if(Chat&LS == "/settings"){
    hide()
    print("Model: "+Model)
    print("Radius: "+Radius)
    print("Maxprops: "+Maxprops)
    print("Explosion Time: "+Time)
    print("Detonate Password: "+Password)
    print("Defuse Password: "+Password2)
    print("Disarm Password: "+Password3)
    print("Plant Bind: " + Bind[1,string])
    print("Detonate Bind: " +Bind[3,string])
    print("Disarm Bind: " +Bind[2,string])
    print("Defuse Bind: " +Bind[4,string])
    print("Attach Bind: " +Bind[5,string])
}
#/save
if(Chat&LSS:string(1) == "/save"){
    hide()
    if(fileCanWrite()){
        Name = LSS:string(2)+".txt"
        Data = Model + " " + Radius:toString() + " " + Maxprops:toString() + " " + Password + " " + Password2 + " " + Password3 + " " + Bind[1,string] + " " + Bind[2,string] + " " + Bind[3,string] + " " + Bind[4,string] + " " + Time + " " + Bind[5,string]
        Saving = 1
    }else{
    hint("Cannot Write Files!",10)
}
}
if(Saving){
    fileWrite(">e2shared/C4-"+Name,Data)
    timer("Saved",1000)
}
if(clk("Saved")){
    Saving = 0
    hint("Saved "+Name+"!",10)
}
#/load
if(Chat&LSS:string(1) == "/load"){
    hide()
    if(fileCanLoad()){
        LoadName = LSS:string(2)+".txt"
        fileLoad(">e2shared/C4-"+LoadName)
        hint("Loading: "+LoadName+"...",10)
    }else{
    hint("Cannot Load Files!",10)
}
}
if(fileLoaded()&LoadName){
    hint("Loaded: "+LoadName+"!",10)
    LoadData = fileRead():explode(" ")
    Model = LoadData[1,string]
    Radius = LoadData[2,string]:toNumber()
    Maxprops = LoadData[3,string]:toNumber()
    Password = LoadData[4,string]
    Password2 = LoadData[5,string]
    Password3 = LoadData[6,string]
    Bind[1,string] = LoadData[7,string]
    Bind[2,string] = LoadData[8,string]
    Bind[3,string] = LoadData[9,string]
    Bind[4,string] = LoadData[10,string]
    Time = LoadData[11,string]:toNumber()
    Bind[5,string] = LoadData[12,string]
    LoadName = ""
}
#/time
if(Chat&LSS:string(1) == "/time"){
    hide()
    Time = LSS:string(2):toNumber()*1000
    hint("There will now be a "+(Time/1000)+" second delay until bomb explodes",10)
    PIndex = (Time/255)
    print(PIndex)
    DefT = (Time/1000)
    print(DefT)
    DefT = (PIndex/DefT)
    DefT = DefT-0.5
    print(DefT)
}
#/plant
if(Chat&LS == "/plant"){
    hide()
    Off = 1
    PPOS = P:pos()
    holoCreate(1)
    holoPos(1,P:pos())
    holoColor(1,vec(0,255,0))
    holoAng(1,ang(0,0,0))
    if(holoModelAny()){
        holoModel(1,"models/weapons/w_c4_planted.mdl")
    }
    H = holoEntity(1)
    findByClass("prop_*")
    findExcludePlayer(P)
    findSortByDistance(H:pos())
    if(find():pos():distance(H:pos()) < 150&!Attach){
        Stick = find()
}
    timer("On",100)
}
if(changed(P:keyPressed(Bind[1,string]))&P:keyPressed(Bind[1,string])){
    Off = 1
    PPOS = P:pos()
    holoCreate(1)
    holoPos(1,P:pos())
    holoColor(1,vec(0,255,0))
    holoAng(1,ang(0,0,0))
    if(holoModelAny()){
        holoModel(1,"models/weapons/w_c4_planted.mdl")
    }
    H = holoEntity(1)
    findInSphere(H:pos(),150)
    findByClass("prop_*")
    findSortByDistance(H:pos())
    if(find():pos():distance(H:pos()) < 150&!Attach){
        Stick = find()
}
    timer("On",100)
}
if(clk("On")){
    Off = 0
}
if(H&Stick&!Follow&!Attach){
    holoPos(1,Stick:pos())
    holoAng(1,Stick:angles())
}elseif(H&!Follow&Attach){
    Stick = noentity()
    holoPos(1,Attach:pos())
    holoAng(1,Attach:angles())
}
#/detonate
if(Chat2 & LAS2:string(1) == "/detonate"&LAS2:string(2) == Password & FF:pos():distance(H:pos()) < 50 & H){
    timer("Explode",Time)
    timer("Time",1000)
    holoColor(1,vec(0,0,255))
    timer("Detonate",100)
    Detonate = 0
    Explode = 1
    if(Follow){
        P:soundPlay(1,1,"siege/jihad.wav")
    }
}
if(clk("Time")){
    II2++
    II3 = II3+(II2*DefT)
    Explode = 1
    if(Index>30){
        Index++
    }else{
    Index = 1
}
    timer("Time",1000)
    H:soundPlay(Index,Index,"buttons/button17.wav")
    holoColor(1,vec(0+(II3),0,255-(II3)))
}
if(clk("Explode")){
    holoColor(1,vec(255,0,0))
    stoptimer("Time")
    Detonate = 1
}
if(clk("Detonate")){
    timer("Detonate",100)
    Prop = propSpawn(Model,Ent:pos(),ang(0,0,0),1)
    Prop:propNotSolid(1)
    Prop:setAlpha(0)
    PropIndex:pushEntity(Prop)
    Explode = 0 
    if(PropIndex:count()>=Maxprops){
        stoptimer("Detonate")
    }
}
    if(Detonate){
        I2++
        for (I = 1, PropIndex:count()){
            PropIndex[I,entity]:setPos(H:pos()+vec(random(-Radius,Radius),random(-Radius,Radius),random(0,Radius/2)))
            PropIndex[I,entity]:propBreak()
        }
        if(I2 >= PropIndex:count()){
            PropIndex:clear()
            Detonate = 0
            reset()
        }
    }
if(changed(P:keyPressed(Bind[3,string]))&P:keyPressed(Bind[3,string])&H){
    timer("Explode",Time)
    timer("Time",1000)
    holoColor(1,vec(0,0,255))
    timer("Detonate",100)
    Detonate = 0
    Explode = 1
    if(Follow){
        P:soundPlay(1,1,"siege/jihad.wav")
    }
}
#defuse
if(Chat2 & LAS2:string(1) == "/defuse"&LAS2:string(2) == Password2 & FF:pos():distance(H:pos()) < 50 & H){
    stopAllTimers()
    holoColor(1,vec(0,255,0))
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
}
if(changed(P:keyPressed(Bind[2,string]))&P:keyPressed(Bind[2,string])&H){
    stopAllTimers()
    holoColor(1,vec(0,255,0))
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
}
#disarm
if(Chat2 & LAS2:string(1) == "/disarm"&LAS2:string(2) == Password3 & FF:pos():distance(H:pos()) < 50 & H){
    stopAllTimers()
    holoDelete(1)
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
    Follow = 0
}
if(changed(P:keyPressed(Bind[4,string]))&P:keyPressed(Bind[4,string])&H){
    stopAllTimers()
    holoDelete(1)
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
    Follow = 0
}
#Staying while forcing to do stuff
if(Brute){
    if(FF:pos():distance(H:pos()) < 50){
        Brute = 1
    }else{
    Brute = 0
    stoptimer("Brute1")
    stoptimer("Brute2")
    stoptimer("Brute3")
    holoDelete(2)
    holoDelete(3)
    holoDelete(4)
}
}
if(holoEntity(2)){
    holoPos(2,H:pos()+vec(0,0,30))
    holoAng(2,H:angles())
}
if(holoEntity(3)){
    holoPos(3,H:pos()+vec(0,0,30))
    holoAng(3,H:angles())
}
if(holoEntity(4)){
    holoPos(4,H:pos()+vec(0,0,30))
    holoAng(4,H:angles())
}
if(!H & holoEntity(2) | !H & holoEntity(3) | !H & holoEntity(4)){
    holoDeleteAll()
}
#force detonate
if(Chat2 & LASS:string(1) == "/force"&LASS:string(2) == "detonate" & FF:pos():distance(H:pos()) < 50 & H){
    Brute1[1,number] = (2000+(10%Password:length()))*Password:length()
    holoCreate(2)
    holoColor(2,vec(255,255,0))
    holoModel(2,"models/alyx_emptool_prop.mdl")
    timer("Brute1",Brute1[1,number])
    Brute = 1
    if(Follow){
        P:soundPlay(1,1,"siege/jihad.wav")
    }
}
if(clk("Brute1")){
    timer("Explode",Time)
    timer("Time",1000)
    holoDelete(2)
    timer("Detonate",100)
    Detonate = 0
    Explode = 1
    Brute = 0
}
#force defuse
if(Chat2 & LASS:string(1) == "/force"&LASS:string(2) == "defuse" & FF:pos():distance(H:pos()) < 50 & H){
    Brute1[2,number] = (2000+(10%Password2:length()))*Password2:length()
    holoCreate(3)
    holoColor(3,vec(0,255,255))
    holoModel(3,"models/alyx_emptool_prop.mdl")
    timer("Brute2",Brute1[2,number])
    Brute = 1
}
if(clk("Brute2")){
    stopAllTimers()
    holoDelete(3)
    holoColor(1,vec(0,255,0))
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
    Brute = 0
}
#force disarm
if(Chat2 & LASS:string(1) == "/force"&LASS:string(2) == "disarm" & FF:pos():distance(H:pos()) < 50 & H){
    Brute1[3,number] = (2000+(10%Password3:length()))*Password3:length()
    holoCreate(4)
    holoColor(4,vec(255,0,255))
    holoModel(4,"models/alyx_emptool_prop.mdl")
    timer("Brute3",Brute1[3,number])
    Brute = 1
}
if(clk("Brute3")){
    stopAllTimers()
    holoDelete(4)
    holoDelete(1)
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
    Brute = 0
    Follow = 0
}
#stopforce
if(Chat2 & LSS:string(1) == "/stop" & FF:pos():distance(H:pos()) < 50 & H){
    stoptimer("Brute1")
    stoptimer("Brute2")
    stoptimer("Brute3")
    holoDelete(1)
    holoDelete(2)
    holoDelete(3)
}
#remote commands
#/remote detonate
if(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "detonate"&H){
    hide()
    timer("Explode",Time)
    timer("Time",1000)
    holoColor(1,vec(0,0,255))
    timer("Detonate",100)
    Detonate = 0
    Explode = 1
    if(Follow){
        P:soundPlay(1,1,"siege/jihad.wav")
    }
}elseif(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "defuse"&!H){
hide()
}
#/remote defuse
if(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "defuse"&H){
    hide()
    stopAllTimers()
    holoColor(1,vec(0,255,0))
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
}elseif(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "defuse"&!H){
hide()
}
#remote disarm
if(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "disarm"&H){
    hide()
    stopAllTimers()
    holoDelete(1)
    PropIndex:propDelete()
    PropIndex:clear()
    Detonate = 0
    Explode = 0
    Follow = 0
}elseif(Chat&LSS:string(1) == "/remote"&LSS:string(2) == "defuse"&!H){
hide()
} 