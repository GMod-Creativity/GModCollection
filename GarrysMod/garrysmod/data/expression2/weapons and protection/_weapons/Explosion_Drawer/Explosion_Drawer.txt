@name Explosion Drawer
@inputs 
@outputs 
@persist [P E]:entity Debug I [Props Holos]:array
@trigger 
                                                                                    ###################
                                                                                    # A S T H E T I C #
                                                                                    # M A D E         #
                                                                                    # B Y             #
                                                                                    # K O I T         #
                                                                                    # P R E S S       #
                                                                                    # H               #
                                                                                    # F O R           #
                                                                                    # H E L P         #
                                                                                    ###################
interval(100)
P = owner()
E = entity()
if(first()){
    E:setPos(vec(-328,13635,-7671))
    E:propNotSolid(1)
    E:setAlpha(0)
    E:propDraw(0)
}
if(P:keyAttack2()){
    timer("holocreate",100)
}

if(clk("holocreate")){
    I++
    holoCreate(I, P:aimPos())
    holoColor(I, vec(0,255,0),100)
    Holos:pushEntity(holoEntity(I))
    Prop = propSpawn("models/props_phx/cannonball_solid.mdl",Holos[I,entity]:pos(),ang(vec(0,0,0)),1)
    Prop:setAlpha(0)
    Prop:propNotSolid(1)
    Props:pushEntity(Prop)
}

if(P:keyWalk()){
    I = 0
    stoptimer("holocreate")
    holoDeleteAll()
    Holos:clear()
    for(I = 1, Props:count()){
        Props[I, entity]:propBreak()
    }
    Props:clear()
}
if(changed(P:keyPressed("h"))&P:keyPressed("h")){
    printColor(vec(255,0,0), "Help: ", vec(0,255,0), "Right click ", vec(255,255,255), "to draw. ", vec(0,255,0), "Walk ", vec(255,255,255), "to detonate." )
}
