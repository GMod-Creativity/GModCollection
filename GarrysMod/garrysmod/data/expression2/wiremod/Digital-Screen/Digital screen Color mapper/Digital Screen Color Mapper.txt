@name Digital screen Color mapper
@inputs DSin:wirelink
@outputs DS:wirelink [Pos Dir]:vector X Y CurrentMat:string Count Target Res Unknown:array Exist:table MATDEBUG T 
@persist Map Mats:table MatAr:array ID Running 
if(first())
{
    ###ADDING MATERIALS OPTION
    MATDEBUG = 0     ##if 1, outputs array of unknown materials
    RESOLUTION = 300  ##@@@RES
    ##########################
    
    runOnLast(1)
    
    entity():setAlpha(0)
    
    if(!->DSin)
    {
        if(entity():isWeldedTo():type() == "gmod_wire_digitalscreen")
        {
            #ifdef entity:wirelink()
               DS = entity():isWeldedTo():wirelink()
            #endif
        }
    }
    else
    {
        DS = DSin
    }
    
    runOnTick(1)
    function wirelink:initScreen(Res)
    {
        This[1048574] = 0 #Reset Screen and whatever was on it will be cleared.
        This[1048569] = 3 #Set color mode to 3
        This[1048575] = 1 #Apply changes
        This[1048572] = Res #Set new resolution on Y (Height)
        This[1048573] = Res #Set new resolution on X (Width)
    }   
    
    function wirelink:drawPixel(X,Y,Color:vector,Res)
    {
        This[X+Y*Res] = rgb2digi(Color,3)
    }
    
    function number array:contains(String:string)
    {
        Cont = 0
        for(X = 1,This:count())
        {
            if(This[X,string] == String)
            {
                Cont = 1
                return Cont
            }
        }
        return Cont
    }
    
    ID = 1
    
    Map = 31743
    
    Res = RESOLUTION
    DS:initScreen(Res)
    holoCreate(1)
    holoColor(1, vec(255,0,0))
    holoModel(1,"pyramid")
    holoAng(1, ang(-180,0,0))
    holoScale(1,vec(10))
    
    if(!MATDEBUG)
    {
     holoAlpha(1,0)   
    }
    
    ###I WAS TOO LAZY TO SAVE THESE MATERIALS INTO FILE, 
    ###SO I JUST COPY AND PASTE BUNCH OF GENERATED CODE TO THE CHIP
	function mat(Mat:string, Col:vector)         
    {
        Mats[Mat,vector] = Col
        MatAr[ID,string] = Mat
        ID++
    }
    
    #################MATS      <---- STUFF UNDER THIS IS GENERATED BY THE DEBUG OPTION. ONLY RGB VALUES ARE CHANGED BY HAND
    
##gm_flatgrass_abs_v3c
mat("CONCRETE/CONCRETEFLOOR023A", vec(200,200,150))
mat("CONCRETE/CONCRETEFLOOR009A_CONSTRUCT", vec(150))	
mat("GM_CONSTRUCT/FLATGRASS",  vec(20,120,0))
mat("PLASTER/PLASTERWALL030A", vec(180,180,120))
mat("PLASTER/PLASTERWALL030B", vec(180,180,120))
mat("METAL/METALWALL030A",  vec(80))	
mat("METAL/METALGRATE011A", vec(80))	
mat("METAL/METALWALL035A",  vec(80))	
mat("BUILDING_TEMPLATE/ROOF_TEMPLATE001A", vec(120))	
mat("maps/gm_flatgrass_abs_v3c/gm_construct/water_2368_512_-4576",    vec(0,0,120))	
mat("maps/gm_flatgrass_abs_v3c/gm_construct/water_-992_13248_-4512",  vec(0,0,120))	
mat("maps/gm_flatgrass_abs_v3c/gm_construct/water_13408_14464_-4512", vec(0,0,120))	
mat("maps/gm_flatgrass_abs_v3c/concrete/concretefloor019a_928_-1520_-4576",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/concrete/concretefloor019a_2368_512_-4576",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/concrete/concretefloor019a_2336_3264_-4576",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-1920_-1216_-3968",  vec(60))	   
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_8416_4256_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-3456_-1280_-3968",  vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-1888_-5568_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-3552_-96_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-3552_-96_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/normal_-1408_-4800_-3968",  vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_-10890_-11974_-2088",vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_-10272_-11552_-3968",vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_-4320_-11424_-3968", vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_2944_-15168_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_8416_8928_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_9056_13632_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/double_9024_15392_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/crosswalk_2336_-3104_-4576",vec(60))	    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/crosswalk_9056_13632_-3968",vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/crosswalk_-288_-2816_-4320",vec(60))	 
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/crosswalk_2336_4416_-3968", vec(60))	       
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_12224_-1440_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_9056_13632_-3968",    vec(60))	        
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-1888_-5568_-3968",   vec(60))    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-3456_-1280_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-1920_-1216_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-12576_1606_-3968",   vec(60))	    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-1408_-4800_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_8416_4256_-3968",     vec(60))	    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_6880_-3680_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-1440_2016_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_12640_5536_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-3520_3744_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_2336_-8512_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_8416_8928_-3968",     vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-10890_-11974_-2088", vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_2646_-11540_-2088",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-2176_-3712_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-4320_-11424_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_2944_-15168_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_2976_-15104_-4416",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_8416_-4032_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-3552_-96_-3968",     vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-3584_4608_-3968",    vec(60))	      
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_12384_4000_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-864_6752_-3968",     vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_8448_8896_-4384",     vec(60))	    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-12576_1696_-3968",   vec(60))	    
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-10777_-6776_-2088",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-7328_1568_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_12616_-272_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_7520_3360_-3968",     vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_8512_160_-3968",      vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_3856_-1192_-4576",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_2400_-6176_-3904",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-2848_1792_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/solid_-1440_-128_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-4320_-11424_-3968", vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2336_-3104_-4576",   vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-10272_-11552_-3968",vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2646_-11540_-2088",  vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2336_4416_-3968",    vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_8416_-4032_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-864_6752_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_928_-1520_-4576",    vec(60))
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2944_-15168_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2400_-6176_-3904",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_2368_512_-4576",     vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-288_1824_-4320",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_6880_-3680_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-256_-4768_-4320",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_5600_3552_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_8416_4256_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_3856_-1192_-4576",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_12616_-272_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-7328_1568_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_8416_8928_-3968",    vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-10777_-6776_-2088", vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-2176_-3712_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-1888_-5568_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-1408_-4800_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-1920_-1216_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-1440_-128_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-2848_1792_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_12384_4000_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_9056_13632_-3968",   vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_-1064_-6624_-3968",  vec(60))	
mat("maps/gm_flatgrass_abs_v3c/awesomebuild/roads/dashed_5408_-6112_-3968",   vec(60))	

##gm_mobenix_v3_final
mat("CONCRETE/CONCRETEWALL042B", vec(60))	
mat("CONCRETE/CONCRETEFLOOR006A", vec(60))	
mat("CONCRETE/CONCRETEFLOOR008A", vec(60))	
mat("CONCRETE/CONCRETEFLOOR009A", vec(60))	
mat("CONCRETE/CONCRETEFLOOR011A", vec(60))	
mat("CONCRETE/CONCRETEFLOOR016A", vec(60))
mat("CONCRETE/CONCRETEFLOOR027A", vec(60))	
mat("CONCRETE/CONCRETEFLOOR_BUNKER02A", vec(60))	
mat("CONCRETE/CONCRETEWALL_BUNKER04B", vec(60))	
mat("CONCRETE/CONCRETECEILING001A", vec(60))	
mat("CONCRETE/BRIDGE_CONCRETE_WORLD", vec(60))	
mat("METAL/BUNKER_METALWALL02A", vec(60))	
mat("METAL/METALWALL014A", vec(60))	
mat("METAL/METALFLOOR010A", vec(60))	
mat("GM_CONSTRUCT/GRASS-SAND", vec(100,200,50))	
mat("GM_ROCKSTER/GRASSSANDBLEND_XHIZORS", vec(50,150,50))
mat("WOOD/WOODFLOOR005A", vec(150,80,30))	
mat("DE_CBBLE/WOODCEILING01", vec(150,80,30))	
mat("maps/gm_mobenix_v3_final/gm_construct/wall_top_-50_-4835_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/nature/gm_mobenix_water_8412_12255_-54", vec(50,50,200))	
mat("maps/gm_mobenix_v3_final/nature/gm_mobenix_water_6506_457_331", vec(50,50,200))	
mat("maps/gm_mobenix_v3_final/nature/gm_mobenix_water_9933_5734_-131", vec(50,50,200))	
#mat("maps/gm_mobenix_v3_final/gm_construct/wall_top_-261_-7471_-70", vec(60))	
#mat("maps/gm_mobenix_v3_final/tile/tilefloor010a_-1352_3634_-29", vec(60))	
#mat("maps/gm_mobenix_v3_final/tile/tilefloor010a_-1628_3018_-26", vec(60))	
mat("maps/gm_mobenix_v3_final/metal/metalceiling005a_13445_101_-157", vec(60))	
#mat("maps/gm_mobenix_v3_final/concrete/blendroad_broken01_wvt_patch", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_11179_-9204_-170", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_7987_-5970_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_2884_-6225_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_9119_-8153_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_10609_-9805_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_5984_-4670_-32", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_9871_-10768_-146", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_-80_-8193_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor038c_-2425_-11223_-134", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_7987_-5970_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_6315_-4379_383", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor011a_c17_4618_9804_174", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_10971_-11467_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_-1683_-10160_468", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028c_9263_-3370_-66", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_7282_-5200_-193", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_11653_-9690_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028c_9933_-1884_-66", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_-3205_-8228_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_10971_-11467_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_11164_-10397_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor011a_c17_-261_-7471_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_8541_-9803_468", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_4604_-4856_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028c_9154_-4274_-66", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor011a_c17_1107_-6616_-155", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_2884_-6225_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_5857_-5200_-198", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_9871_-10768_-146", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor038c_-2620_-10401_-82", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_8541_-9803_468", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_10531_-10356_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_9119_-8153_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor019a_11217_-9941_-170", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_-3175_-4870_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor011a_c17_-50_-4835_-158", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_11164_-10397_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/concrete/concretefloor028a_c17_-3106_-7615_-70", vec(60))	
mat("maps/gm_mobenix_v3_final/metal/metalceiling005a_5218_-15597_-67", vec(60))	

    #####END OF MATS
    
    
    Running = 1
    
    rangerPersist(1)
    rangerHitWater(1)
    rangerHitEntities(0)
}


if(Running)
{
    if(owner():pos():distance(entity():pos()) < 100)
    {
        entity():setAlpha(255)
    }
    elseif(entity():getAlpha() != 0)
    {
        entity():setAlpha(0)
    }
    
    Pos = -vec(Map, Map, 0) / 2 + vec(X * Map / Res, Y * Map / Res, 0)
    Dir = vec(0,0,-1)
    
    RD = rangerOffset(300000, Pos, Dir)
      
    CurrentMat = RD:hitTexture()
    
    if(MATDEBUG)
    {
        holoPos(1, Pos + vec(0,0,100))
        
        if(!MatAr:contains(CurrentMat))
        {
            if(!Unknown:contains(CurrentMat))
            {
                Unknown:pushString("mat(\"" + CurrentMat + "\", vec(60))")
            }
            mat(CurrentMat, vec(255,50,255))
        }
    }
    
    Count = Exist:count()
    Target = Res^2
    
    if(Count >= Target)
    {
        if(MATDEBUG)
        {
            Res++
            Exist:clear()
            Count = 0
            DS:initScreen(Res)
        }
        else
        {
            Running = 0
            holoDelete(1)
            runOnTick(0)
        }
    }
    
    Exist[vec2(X,Y):toString(),number] = 1
    DS:drawPixel(Res - X,Y,Mats[CurrentMat,vector],Res) 

    while(Exist:exists(vec2(X,Y):toString()) & perf())   ###DONT CHECK PIXELS YOU ALREADY CHECKED
    {
        X = randint(1,Res)
        Y = randint(1,Res)
    }
}

if(last())
{
    print(Res - 1)
}