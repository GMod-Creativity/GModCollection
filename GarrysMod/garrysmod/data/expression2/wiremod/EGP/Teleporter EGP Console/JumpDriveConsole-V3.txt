@name JumpDriveConsole V3
@inputs EGP:wirelink User:entity
@outputs Jump JumpPos:vector
@persist X Y Z

if (Jump)
{
    Jump = !Jump
}

if (first())
{
    EGP:egpClear()
    #_Title_#
    EGP:egpRoundedBox(1, vec2(260,40), vec2(450, 60))
    EGP:egpColor(1, vec(20,20,20))
    EGP:egpTextLayout(2, "Jump Drive Console", vec2(60,10), vec2(1000,1000))
    EGP:egpColor(2, vec(255,255,255))
    EGP:egpSize(2, 50)
    
    #_BackgroundBox_#
    EGP:egpRoundedBox(3, vec2(256,300), vec2(480,400))
    EGP:egpColor(3, vec(20,20,20))
    
    #_XAxisBoxes_#
    
    EGP:egpRoundedBox(4, vec2(180,150), vec2(330,100))
    EGP:egpColor(4, vec(30,30,30))
    
    EGP:egpRoundedBox(5, vec2(70,150), vec2(60,40))
    EGP:egpColor(5, vec(0,255,0))
    EGP:egpTextLayout(6, "+ 1000", vec2(40,140), vec2(60,40))
    EGP:egpColor(6, vec(255,255,255))
    
    EGP:egpRoundedBox(7, vec2(140,150), vec2(60,40))
    EGP:egpColor(7, vec(255,0,0))
    EGP:egpTextLayout(8, "- 1000", vec2(115,140), vec2(60,40))
    EGP:egpColor(8, vec(255,255,255))
    
    EGP:egpRoundedBox(9, vec2(220,150), vec2(60,40))
    EGP:egpColor(9, vec(0,255,0))
    EGP:egpTextLayout(10, "+ 100", vec2(195,140), vec2(60,40))
    EGP:egpColor(10, vec(255,255,255))
    
    EGP:egpRoundedBox(11, vec2(300,150), vec2(60,40))
    EGP:egpColor(11, vec(255,0,0))
    EGP:egpTextLayout(12, "- 100", vec2(280,140), vec2(60,40))
    EGP:egpColor(12, vec(255,255,255))
    
    #_YAxisBoxes_#
    EGP:egpRoundedBox(13, vec2(180,250), vec2(330,100))
    EGP:egpColor(13, vec(50,50,50))
    
    EGP:egpRoundedBox(15, vec2(70,250), vec2(60,40))
    EGP:egpColor(15, vec(0,255,0))
    EGP:egpTextLayout(16, "+ 1000", vec2(40,240), vec2(60,40))
    EGP:egpColor(16, vec(255,255,255))
    
    EGP:egpRoundedBox(17, vec2(140,250), vec2(60,40))
    EGP:egpColor(17, vec(255,0,0))
    EGP:egpTextLayout(18, "- 1000", vec2(115,240), vec2(60,40))
    EGP:egpColor(18, vec(255,255,255))
    
    EGP:egpRoundedBox(19, vec2(220,250), vec2(60,40))
    EGP:egpColor(19, vec(0,255,0))
    EGP:egpTextLayout(20, "+ 100", vec2(195,240), vec2(60,40))
    EGP:egpColor(20, vec(255,255,255))
    
    EGP:egpRoundedBox(21, vec2(300,250), vec2(60,40))
    EGP:egpColor(21, vec(255,0,0))
    EGP:egpTextLayout(22, "- 100", vec2(280,240), vec2(60,40))
    EGP:egpColor(22, vec(255,255,255))
    
    #_ZAxisBoxes_#
    EGP:egpRoundedBox(23, vec2(180,350), vec2(330,100))
    EGP:egpColor(23, vec(30,30,30))
    
    EGP:egpRoundedBox(25, vec2(70,350), vec2(60,40))
    EGP:egpColor(25, vec(0,255,0))
    EGP:egpTextLayout(26, "+ 1000", vec2(40,340), vec2(60,40))
    EGP:egpColor(26, vec(255,255,255))
    
    EGP:egpRoundedBox(27, vec2(140,350), vec2(60,40))
    EGP:egpColor(27, vec(255,0,0))
    EGP:egpTextLayout(28, "- 1000", vec2(115,340), vec2(60,40))
    EGP:egpColor(28, vec(255,255,255))
    
    EGP:egpRoundedBox(29, vec2(220,350), vec2(60,40))
    EGP:egpColor(29, vec(0,255,0))
    EGP:egpTextLayout(30, "+ 100", vec2(195,340), vec2(60,40))
    EGP:egpColor(30, vec(255,255,255))
    
    EGP:egpRoundedBox(31, vec2(300,350), vec2(60,40))
    EGP:egpColor(31, vec(255,0,0))
    EGP:egpTextLayout(32, "- 100", vec2(280,340), vec2(60,40))
    EGP:egpColor(32, vec(255,255,255))
    
    #_BottomBackgroundBox_#
    EGP:egpRoundedBox(33, vec2(256,450), vec2(480,100))
    EGP:egpColor(33, vec(50,50,50))
    
    #_resetBoxAndText_#
    EGP:egpRoundedBoxOutline(34, vec2(120,450), vec2(200,90))
    EGP:egpColor(34, vec(20,20,20))
    EGP:egpSize(34, 10)
    EGP:egpTextLayout(35, "Reset", vec2(50,415), vec2(200,100))
    EGP:egpColor(35, vec(255,255,255))
    EGP:egpSize(35, 60)
    
    #_OrText_#
    EGP:egpTextLayout(36, "OR", vec2(225,425), vec2(100,100))
    EGP:egpColor(36, vec(255,255,255))
    EGP:egpSize(36, 50)
    
    #_JumpBoxAndText_#
    EGP:egpRoundedBoxOutline(37, vec2(395,450), vec2(200,90))
    EGP:egpColor(37, vec(20,20,20))
    EGP:egpSize(37, 10)
    EGP:egpTextLayout(38, "Jump", vec2(330,415), vec2(200,100))
    EGP:egpColor(38, vec(255,255,255))
    EGP:egpSize(38, 60)
}

if (~User & User) #Checks If You've Pressed 'E'
{
    local Pos = EGP:egpCursor(User)
    
    #_Boundaries_#
    
    MinCorner1 = EGP:egpPos(5) - EGP:egpSize(5)/2
    MaxCorner1 = EGP:egpPos(5) + EGP:egpSize(5)/2
    
    MinCorner2 = EGP:egpPos(7) - EGP:egpSize(7)/2
    MaxCorner2 = EGP:egpPos(7) + EGP:egpSize(7)/2
    
    MinCorner3 = EGP:egpPos(9) - EGP:egpSize(9)/2
    MaxCorner3 = EGP:egpPos(9) + EGP:egpSize(9)/2
    
    MinCorner4 = EGP:egpPos(11) - EGP:egpSize(11)/2
    MaxCorner4 = EGP:egpPos(11) + EGP:egpSize(11)/2
    
    MinCorner5 = EGP:egpPos(15) - EGP:egpSize(15)/2
    MaxCorner5 = EGP:egpPos(15) + EGP:egpSize(15)/2
    
    MinCorner6 = EGP:egpPos(17) - EGP:egpSize(17)/2
    MaxCorner6 = EGP:egpPos(17) + EGP:egpSize(17)/2
    
    MinCorner7 = EGP:egpPos(19) - EGP:egpSize(19)/2
    MaxCorner7 = EGP:egpPos(19) + EGP:egpSize(19)/2
    
    MinCorner8 = EGP:egpPos(21) - EGP:egpSize(21)/2
    MaxCorner8 = EGP:egpPos(21) + EGP:egpSize(21)/2
    
    MinCorner9 = EGP:egpPos(25) - EGP:egpSize(25)/2
    MaxCorner9 = EGP:egpPos(25) + EGP:egpSize(25)/2
    
    MinCorner10 = EGP:egpPos(27) - EGP:egpSize(27)/2
    MaxCorner10 = EGP:egpPos(27) + EGP:egpSize(27)/2
    
    MinCorner11 = EGP:egpPos(29) - EGP:egpSize(29)/2
    MaxCorner11 = EGP:egpPos(29) + EGP:egpSize(29)/2
    
    MinCorner12 = EGP:egpPos(31) - EGP:egpSize(31)/2
    MaxCorner12 = EGP:egpPos(31) + EGP:egpSize(31)/2
    
    MinCorner13 = EGP:egpPos(34) - EGP:egpSize(34)/2
    MaxCorner13 = EGP:egpPos(34) + EGP:egpSize(34)/2
    
    MinCorner14 = EGP:egpPos(37) - EGP:egpSize(37)/2
    MaxCorner14 = EGP:egpPos(37) + EGP:egpSize(37)/2
    
    #_Checks If you're Cursor is inside the button
    if (inrange(Pos, MinCorner1, MaxCorner1))
    {
        soundPlay(4,0,"buttons/button24.wav")
        X = X + 1000
    }
    if (inrange(Pos, MinCorner2, MaxCorner2))
    {
        soundPlay(4,0,"buttons/button24.wav")
        X = X - 1000
    }
    if (inrange(Pos, MinCorner3, MaxCorner3))
    {
        soundPlay(4,0,"buttons/button24.wav")
        X = X + 100
    }
    if (inrange(Pos, MinCorner4, MaxCorner4))
    {
        soundPlay(4,0,"buttons/button24.wav")
        X = X - 100
    }
    if (inrange(Pos, MinCorner5, MaxCorner5))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Y = Y + 1000
    }
    if (inrange(Pos, MinCorner6, MaxCorner6))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Y = Y - 1000
    }
    if (inrange(Pos, MinCorner7, MaxCorner7))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Y = Y + 100
    }
    if (inrange(Pos, MinCorner8, MaxCorner8))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Y = Y - 100
    }
    if (inrange(Pos, MinCorner9, MaxCorner9))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Z = Z + 1000
    }
    if (inrange(Pos, MinCorner10, MaxCorner10))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Z = Z - 1000
    }
    if (inrange(Pos, MinCorner11, MaxCorner11))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Z = Z + 100
    }
    if (inrange(Pos, MinCorner12, MaxCorner12))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Z = Z - 100
    }
    if (inrange(Pos, MinCorner13, MaxCorner13))
    {
        soundPlay(4,0,"buttons/button24.wav")
        X = 0
        Y = 0
        Z = 0
    }
    if (inrange(Pos, MinCorner14, MaxCorner14))
    {
        soundPlay(4,0,"buttons/button24.wav")
        Jump = 1
    }
}

EGP:egpTextLayout(39, "X: "+X, vec2(350,130), vec2(200,100))
EGP:egpSize(39, 40)
EGP:egpColor(39, vec(255,255,255))
 
EGP:egpTextLayout(40, "Y: "+Y, vec2(350,230), vec2(200,100))
EGP:egpSize(40, 40)
EGP:egpColor(40, vec(255,255,255))

EGP:egpTextLayout(41, "Z: "+Z, vec2(350,330), vec2(200,100))
EGP:egpSize(41, 40)
EGP:egpColor(41, vec(255,255,255))

JumpPos = vec(X,Y,Z)