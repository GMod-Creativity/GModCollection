@name Armor
@inputs P:entity
@outputs 
@persist E:entity O:entity Ply:array Maxplayers
@trigger 

interval(50)

if(dupefinished()){reset()}
if(first()){E=entity(),O=owner()}

findByClass("player")
findExcludePlayer(owner())
Ply = findToArray()

Maxplayers = Ply:count()
#print(Maxplayers)

if(Maxplayers >=1){
if((Ply[1,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[2,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[3,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[4,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[5,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[6,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[7,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[8,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[9,entity]:aimPos() - owner():pos()):length() < 150|
(Ply[10,entity]:aimPos() - owner():pos()):length() < 150){P:propNotSolid(0),P:setAlpha(50)}
else{P:propNotSolid(1),P:setAlpha(0)}
if(O:keyAttack1()){P:propNotSolid(1),P:setAlpha(0)}
holoPos(1,O:pos())
}
P:setPos(O:pos()+vec(0,0,0))
P:propFreeze(1)
P:setAng(ang(0,O:eyeAngles():yaw(),0))
