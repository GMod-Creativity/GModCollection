@name Carrier+Interceptor
@inputs Gun_1:entity  Gun_2:entity Gun_3:entity Gun_4:entity
@outputs 
@persist Carrier_Replenish_Percent Carrier_Target:entity Carrier_Distance_to_Target Interceptor_Prop:array Target:entity Offset_Per_Interceptor Ang I Tick
@persist Gun_Per_Loop:entity Gun_1:entity Gun_2:entity Gun_3:entity Gun_4:entity
@trigger 
interval(50)
if(first()){
Carrier_Replenish_Percent = 0
Gun_Count = 0
Target=owner()
Tick=0
#Holo will be target pos of interceptor

holoCreate(1)
holoCreate(2)
holoCreate(3)
holoCreate(4)

holoAng(2,holoEntity(2):toWorld(ang(0,90,0)))
holoAng(3,holoEntity(3):toWorld(ang(0,180,0)))
holoAng(4,holoEntity(4):toWorld(ang(0,270,0)))

#E2 is carrier, all guns are linked to interceptor props
#max_interceptors = number of linked guns
#interceptor_body[i] is a propspawn of an explosive


}
Tick+=1
Tick = Tick % 4
if(changed(Gun_1)||changed(Gun_2)||changed(Gun_3)||changed(Gun_4)){
    print("Guns Changed")
    Gun_Count=0
    if(Gun_1:model()!=""){
        Gun_Count+=1
    }
    if(Gun_2:model()!=""){
        Gun_Count+=1
    }
    if(Gun_3:model()!=""){
        Gun_Count+=1
    }
    if(Gun_4:model()!=""){
        Gun_Count+=1
    }
    
}
#How fast the interceptors circle the target
Ang=15
Offset_Per_Interceptor = 360/Gun_Count
holoPos(1,Target:toWorld(vec(0,0,250)))
holoAng(1,holoEntity(1):toWorld(ang(0,Ang,0)))
holoPos(2,Target:toWorld(vec(0,0,250)))
holoAng(2,holoEntity(2):toWorld(ang(0,Ang,0)))
holoPos(3,Target:toWorld(vec(0,0,250)))
holoAng(3,holoEntity(3):toWorld(ang(0,Ang,0)))
holoPos(4,Target:toWorld(vec(0,0,250)))
holoAng(4,holoEntity(4):toWorld(ang(0,Ang,0)))
I=1

if(I==1){
Gun_Per_Loop = Gun_1
}
if(I==2){
Gun_Per_Loop = Gun_2
}
if(I==3){
Gun_Per_Loop = Gun_3
}
if(I==4){
Gun_Per_Loop = Gun_4
}
#if(Tick<=1){
#Gun_1:setAng(holoEntity(1):toWorld(ang(0,Offset_Per_Interceptor*1,0)))
Gun_1:setPos(holoEntity(1):toWorld(vec(150,0,0)))
Gun_1:setAng(((Target:shootPos()-Gun_1:pos()):toAngle()))
Gun_2:setPos(holoEntity(2):toWorld(vec(150,0,0)))
Gun_2:setAng(((Target:shootPos()-Gun_2:pos()):toAngle()))
#}
#if(Tick>1){
Gun_3:setPos(holoEntity(3):toWorld(vec(150,0,0)))
Gun_3:setAng(((Target:shootPos()-Gun_3:pos()):toAngle()))
Gun_4:setPos(holoEntity(4):toWorld(vec(150,0,0)))
Gun_4:setAng(((Target:shootPos()-Gun_4:pos()):toAngle()))
#}


#Interceptor

#fly to person
#circle around
#fire at person
#return to ship or get shot down


#Carrier

#fly in range of target
#send out interceptors
#replenish destroyed interceptors
#recall interceptors when out of range or order halted

