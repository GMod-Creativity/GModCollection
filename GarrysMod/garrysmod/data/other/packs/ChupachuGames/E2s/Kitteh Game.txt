
### ### ### ### ### ###
### Made By Perli55 ###
### ### ### ### ### ###
 
@name Kitteh Game
@inputs EGP:wirelink Pod:wirelink 
@outputs Room:string Pos:vector2 T N Obj:array Col:vector 
@outputs C:array Cc:array Ac Dc Sc Wc A D W Ang 
@persist G:gtable Max Rooms:table
if (duped()) {reset()}
if (first()) {
    G=gTable("Cat",1)
    Rooms=G["Rooms",table]
    if (!G["Rooms",table]) {hint("Please Spawn The Preperations Chip First!",9),selfDestruct()}
    
    EGP:egpClear()
    
    EGP:egpBox(12,vec2(256,256),vec2(512,512))
    EGP:egpColor(12,vec(140,140,140))
    
    for (A=1,10) {
        T++
        EGP:egpBox(T,vec2(),vec2())
    }
    T=0
    
    EGP:egpCircle(11,vec2(256,256),vec2(32,32))
    EGP:egpMaterial(11,"matsys_regressiontest/background")
    
    Max=egpMaxUmsgPerSecond()-5
    Room="[1,1]"
    Pos=vec2(256,256)
}
interval(1000/Max)

if (Pod["A",number]&!Pod["D",number]) {A=1} else {A=0}
if (!Pod["A",number]&Pod["D",number]) {D=1} else {D=0}
if (Pod["W",number]|Pod["Space",number]) {W=1} else {W=0}

if (!W|Wc>14|!Sc) {
    Sc=0
    for (V=1,N) {
        T++
        if (Cc[T,vector4]:z()&inrange(Pos+vec2(0,32),C[T*2-1,vector2],C[T*2,vector2])) {Sc=1}
    }
    T=0
    if (!Sc) {Pos+=vec2(0,8),if (Wc) {Wc=0}}
}

if (Wc<15&W&Sc) {
    Wc++
    Pos+=vec2(0,-8)
    for (V=1,N) {
        T++
        if (Cc[T,vector4]:w()&inrange(Pos+vec2(0,-32),C[T*2-1,vector2],C[T*2,vector2])) {Wc=16}
    }
    T=0
}
    

if (A) {
    if (Sc&!Wc) {Ang+=14,EGP:egpAngle(11,Ang)} else {Ang+=8,EGP:egpAngle(11,Ang)}
    Ac=0
    for (V=1,N) {
        T++
        if (Cc[T,vector4]:x()&inrange(Pos+vec2(-32,0),C[T*2-1,vector2],C[T*2,vector2])) {Ac=1}
    }
    T=0
    if (!Ac) {Pos+=vec2(-8,0)}
}

elseif (D) {
    if (Sc&!Wc) {Ang-=14,EGP:egpAngle(11,Ang)} else {Ang-=8,EGP:egpAngle(11,Ang)}
    Dc=0
    for (V=1,N) {
        T++
        if (Cc[T,vector4]:y()&inrange(Pos+vec2(32,0),C[T*2-1,vector2],C[T*2,vector2])) {Dc=1}
    }
    T=0
    if (!Dc) {Pos+=vec2(8,0)}
}

if (Pos:y()<0) {Pos=Pos:setY(512),Room=Room:sub(1,3)+(Room[4]:toNumber()-1):toString()+Room[5]}
elseif (Pos:y()>512) {Pos=Pos:setY(0),Room=Room:sub(1,3)+(Room[4]:toNumber()+1):toString()+Room[5]}
if (Pos:x()<0) {Pos=Pos:setX(512),Room=Room[1]+(Room[2]:toNumber()-1):toString()+Room:sub(3)}
elseif (Pos:x()>512) {Pos=Pos:setX(0),Room=Room[1]+(Room[2]:toNumber()+1):toString()+Room:sub(3)}

if (changed(Pos)) {EGP:egpPos(11,Pos)}

if (changed(Room)) {
    if (Room[2]:toNumber()<1) {Room=Room[1]+"5"+Room:sub(3)}
    elseif (Room[2]:toNumber()>5) {Room=Room[1]+"1"+Room:sub(3)}
    if (Room[4]:toNumber()<1) {Room=Room:sub(1,3)+"5"+Room[5]}
    elseif (Room[4]:toNumber()>5) {Room=Room:sub(1,3)+"1"+Room[5]}
    N=Rooms[Room,normal]
    Cc=Rooms["c"+Room,array]
    C=array()
    #Obj=array()
    for (V=1,N) {
        T++
        Obj=Rooms[T:toString()+Room,array]
        EGP:egpPos(T,Obj[1,vector2])
        EGP:egpSize(T,Obj[2,vector2])
        Col=Obj[3,vector]
        if (Col) {
            if (EGP:egpColor(T)!=Col) {EGP:egpColor(T,Col)}
            if (EGP:egpMaterial(T)) {EGP:egpMaterial(T,"")}
        } else {
            EGP:egpMaterial(T,Obj[3,string])
            if (EGP:egpColor(T)!=vec(255,255,255)) {EGP:egpColor(T,vec(255,255,255))}
        }
        C:pushVector2(Obj[1,vector2]+-Obj[2,vector2]/2)
        C:pushVector2(Obj[1,vector2]+Obj[2,vector2]/2)
    }
    T=0
    for (V=1,10-N) {
        T++
        if (EGP:egpSize(T+N)) {EGP:egpSize(T+N,vec2())}
        if (EGP:egpMaterial(T+N)) {EGP:egpMaterial(T+N,"")}
    }
    T=0
}

if (changed(EGP:entity())&EGP:entity()) {reset()}
