@name MortarPredictor
@inputs E:entity
@outputs 
@persist Pos Deg Dist Neg
@trigger 

interval(100)

holoCreate(1)
holoPos(1,entity():toWorld(vec(((E:angles():pitch()+(E:angles():pitch()*Neg))*(85.75)-1200),0,0)))
holoModel(1,"hqcylinder")
holoScale(1,vec(15,15,0.1))
holoAng(1,ang())



#E=entity():isConstrainedTo()
hint((E:angles():pitch()):toString(),5)

#print((holoEntity(1):pos() - E:pos()):length())

#E:setAng(ang(84+180,0,0))

if(E:angles():pitch() < -44){Neg=10}
else{Neg=1}

if(Deg==-45)
{Dist=3200}
if(Deg==-90)
{Dist=5300}

sqrt(81)
A=1
B=1
C=1

vec((-B+sqrt((B*B) - ((4*A)*C)))/2*A)

