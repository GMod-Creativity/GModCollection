@name Nuke
@inputs Rad1:entity Rad2:entity Rad3:entity Rad4:entity Rad5:entity
@outputs Rad
@persist P:entity E:entity Set For 
@trigger 

interval(100)
if(first()){
    E=entity()
holoCreate(1)
holoPos(1,E:pos()+vec(0,0,50))
holoAng(1,E:angles()+ang(0,0+Set,0))
lightCreate(5)
lightPos(5,E:pos()+vec(0,0,50))
lightDistance(5,100000000*1000000)
lightBrightness(5,1000000*1000000)

lightCreate(2)
lightPos(2,E:pos()+vec(0,0,100))
lightDistance(2,100000000*1000000)
lightBrightness(2,1000000*1000000)

lightCreate(3)
lightPos(3,E:pos()+vec(0,0,150))
lightDistance(3,100000000*1000000)
lightBrightness(3,1000000*1000000)

lightCreate(4)
lightPos(4,E:pos()+vec(0,0,2000))
lightDistance(4,100000000*1000000)
lightBrightness(4,1000000*1000000)

Set=0
For=100
timer("destructstart",100)
}
if(clk("destructstart")&For<5000){P=propSpawn("models/props_phx/cannonball_solid.mdl",holoEntity(1):toWorld(vec(For,0,0)),1),For=For+15,Set=Set+27,timer("destructstart",250)}
P:propBreak()

holoAng(1,ang(0,Set,0))

if(For>2000){Rad=1}

Rad1:setPos(E:pos()+vec(0,0,50))
Rad2:setPos(E:pos()+vec(50,0,50))
Rad3:setPos(E:pos()+vec(-50,0,50))
Rad4:setPos(E:pos()+vec(0,50,50))
Rad5:setPos(E:pos()+vec(0,-50,50))
