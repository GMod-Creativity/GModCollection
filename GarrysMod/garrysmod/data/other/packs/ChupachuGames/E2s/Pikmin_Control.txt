@name Pikmin Control
@persist 
@inputs Pikmin:entity RedPikmin:entity YellowPikmin:entity BluePikmin:entity
@outputs B:entity Ang:angle 
@model models/hunter/blocks/cube025x025x025.mdl
#Pikmin 1
interval(150)
B:propBreak()

if(duped()|first()){reset()}
RChippos=RedPikmin:pos()
YChippos=YellowPikmin:pos()
findByClass("player")
findExcludePlayer("Chupachu")
Target=owner()#findClosest(RedPikmin:pos())
Target2=findClosest(owner():aimPos())
RedPikmin:setAlpha(0)
if(first()|clk()){
    timer("boot",2000)
holoCreate(1)
holoParent(1,5)
holoParent(1,4)
holoParent(1,3)
holoParent(1,2)
holoParent(1,6)
holoPos(1,RedPikmin:toWorld(vec(0,0,0)))
holoModel(1,"models/sprops/misc/fittings/cred_12_6_tall.mdl")
holoMaterial(1,"models/debug/debugwhite")
holoScale(1,vec(0.4))
holoColor(1,vec(255,0,0))
holoCreate(11)
holoParent(11,5)
holoParent(11,4)
holoParent(11,3)
holoParent(11,2)
holoParent(11,6)
holoParent(11,RedPikmin)
holoPos(11,RedPikmin:toWorld(vec(0,0,-3.8)))
holoAng(11,RedPikmin:angles()+ang(180,0,0))
holoModel(11,"models/sprops/cylinders/size_4/cylinder_9x6.mdl")
holoMaterial(11,"models/debug/debugwhite")
holoScale(11,vec(0.52))
holoColor(11,vec(255,0,0))

holoAng(1,RedPikmin:angles())
holoParent(1,RedPikmin)
holoCreate(2)
holoParent(2,5)
holoParent(2,4)
holoParent(2,3)
holoParent(2,6)
holoParent(2,1)
holoModel(2,"models/props_phx/misc/potato.mdl")
holoMaterial(2,"models/debug/debugwhite")
holoScale(2,vec(2))
holoPos(2,RedPikmin:toWorld(vec(2,-0,8))) #0.3,-2.3,8
holoAng(2,RedPikmin:angles()+ang(0,90,0))
holoColor(2,vec(255,0,0))
holoParent(2,RedPikmin)
holoCreate(3)
holoParent(3,5)
holoParent(3,4)
holoParent(3,6)
holoParent(3,2)
holoParent(3,1)
holoParent(3,RedPikmin)
holoPos(3,RedPikmin:toWorld(vec(4.0,2,10)))
holoAng(3,RedPikmin:angles()+ang(90,90,0))
holoScale(3,vec(0.5))
holoMaterial(3,"models/debug/debugwhite")
holoModel(3,"models/props_phx/misc/potato.mdl")
holoParent(3,1)
holoParent(3,RedPikmin)
holoCreate(4)
holoParent(4,5)
holoParent(4,6)
holoParent(4,3)
holoParent(4,2)
holoParent(4,1)
holoParent(4,RedPikmin)
holoPos(4,RedPikmin:toWorld(vec(4.5,2,10)))
holoAng(4,RedPikmin:angles()+ang(90,90,0))
holoScale(4,vec(0.23))
holoMaterial(4,"models/debug/debugwhite")
holoModel(4,"models/props_phx/misc/potato.mdl")
holoColor(4,vec(0,0,0))
holoMaterial(4,"pheonix_storms/black_chrome")
holoParent(4,RedPikmin)
holoCreate(5)
holoParent(5,6)
holoParent(5,4)
holoParent(5,3)
holoParent(5,2)
holoParent(5,1)
holoParent(5,RedPikmin)
holoPos(5,RedPikmin:toWorld(vec(3.9,-2,10)))
holoAng(5,RedPikmin:angles()+ang(90,90,0))
holoScale(5,vec(0.5))
holoMaterial(5,"models/debug/debugwhite")
holoModel(5,"models/props_phx/misc/potato.mdl")
holoParent(5,RedPikmin)
holoCreate(6)
holoParent(6,5)
holoParent(6,4)
holoParent(6,3)
holoParent(6,2)
holoParent(6,1)
holoParent(6,RedPikmin)
holoPos(6,RedPikmin:toWorld(vec(4.5,-2,10)))
holoAng(6,RedPikmin:angles()+ang(90,90,0))
holoScale(6,vec(0.23))
holoMaterial(6,"models/debug/debugwhite")
holoModel(6,"models/props_phx/misc/potato.mdl")
holoColor(6,vec(0,0,0))
holoMaterial(6,"pheonix_storms/black_chrome")
holoParent(6,RedPikmin)
holoCreate(7)
holoModel(7,"models/sprops/misc/fittings/bend_long_90_1_5.mdl")
holoColor(7,vec(255,0,0))
holoMaterial(7,"models/debug/debugwhite")
holoAng(7,RedPikmin:angles()+ang(-90,90,0))
holoPos(7,RedPikmin:toWorld(vec(0,1.5,14.5)))
holoScale(7,vec(1.3))
holoParent(7,RedPikmin)
holoCreate(8)
holoModel(8,"models/sprops/misc/domes/size_0/dome_3x3.mdl")
holoAng(8,RedPikmin:angles()+ang(90,270,0))
holoPos(8,RedPikmin:toWorld(vec(0,6.5,15.9)))
holoColor(8,vec(0,255,0))
holoScale(8,vec(0.7))
holoParent(8,RedPikmin)
holoCreate(14)
holoModel(14,"models/sprops/misc/domes/size_1/dome_12x6.mdl")
holoAng(14,RedPikmin:angles()+ang(90,90,0))
holoPos(14,RedPikmin:toWorld(vec(0,6.5,15.9)))
holoColor(14,vec(255,0,0))
holoScale(14,vec(0.2))
holoParent(14,RedPikmin)
holoMaterial(14,"sprops/textures/sprops_cfiber2")
holoCreate(9)
holoModel(9,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(9,RedPikmin)
holoAng(9,RedPikmin:angles()+ang(vec(160,90,0)))
holoPos(9,RedPikmin:toWorld(vec(0,-3.7,-1.7)))
holoScale(9,vec(0.5))
holoColor(9,vec(255,0,0))
holoMaterial(9,"models/debug/debugwhite")
holoCreate(10)
holoModel(10,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(10,RedPikmin)
holoAng(10,RedPikmin:angles()+ang(vec(-200,-90,0)))
holoPos(10,RedPikmin:toWorld(vec(0,3.7,-1.7)))
holoScale(10,vec(0.5))
holoColor(10,vec(255,0,0))
holoMaterial(10,"models/debug/debugwhite")
holoCreate(12)
holoModel(12,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(12,RedPikmin)
holoAng(12,RedPikmin:angles()+ang(vec(0,0,0)))
holoPos(12,RedPikmin:toWorld(vec(-1,1,-6)))
holoScale(12,vec(0.5))
holoColor(12,vec(255,0,0))
holoMaterial(12,"models/debug/debugwhite")
holoCreate(13)
holoModel(13,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(13,RedPikmin)
holoAng(13,RedPikmin:angles()+ang(vec(0,0,0)))
holoPos(13,RedPikmin:toWorld(vec(-1,-1,-6)))
holoScale(13,vec(0.5))
holoColor(13,vec(255,0,0))
holoMaterial(13,"models/debug/debugwhite")
holoCreate(19)
holoModel(19,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(19,RedPikmin)
holoAng(19,RedPikmin:angles()+ang(vec(0,0,-45)))
holoPos(19,RedPikmin:toWorld(vec(0,-2,0)))
holoScale(19,vec(0.4))
holoColor(19,vec(255,0,0))
holoMaterial(19,"models/debug/debugwhite")
holoCreate(20)
holoModel(20,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(20,RedPikmin)
holoAng(20,RedPikmin:angles()+ang(vec(0,0,45)))
holoPos(20,RedPikmin:toWorld(vec(0,2,0)))
holoScale(20,vec(0.4))
holoColor(20,vec(255,0,0))
holoMaterial(20,"models/debug/debugwhite")
holoCreate(21)
holoModel(21,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(21,RedPikmin)
holoAng(21,RedPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(21,RedPikmin:toWorld(vec(0,3.8,15.9)))
holoScale(21,vec(0.67))
holoColor(21,vec(255,0,0))
holoMaterial(21,"models/debug/debugwhite")
holoCreate(22)
holoModel(22,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(22,RedPikmin)
holoAng(22,RedPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(22,RedPikmin:toWorld(vec(1.6,6.5,15.9)))
holoScale(22,vec(0.67))
holoColor(22,vec(255,255,255))
holoMaterial(22,"models/debug/debugwhite")
holoCreate(23)
holoModel(23,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(23,RedPikmin)
holoAng(23,RedPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(23,RedPikmin:toWorld(vec(-1.6,6.5,15.9)))
holoScale(23,vec(0.67))
holoColor(23,vec(255,255,255))
holoMaterial(23,"models/debug/debugwhite")
holoCreate(24)
holoModel(24,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(24,RedPikmin)
holoAng(24,RedPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(24,RedPikmin:toWorld(vec(0,6.5,17.6)))
holoScale(24,vec(0.67))
holoColor(24,vec(255,255,255))
holoMaterial(24,"models/debug/debugwhite")
holoCreate(25)
holoModel(25,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(25,RedPikmin)
holoAng(25,RedPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(25,RedPikmin:toWorld(vec(0,6.5,13.9)))
holoScale(25,vec(0.67))
holoColor(25,vec(255,255,255))
holoMaterial(25,"models/debug/debugwhite")
holoCreate(26)
holoModel(26,"models/sprops/misc/domes/size_0/dome_3x6.mdl")
holoParent(26,RedPikmin)
holoAng(26,RedPikmin:angles()+ang(vec(90,0,0)))
holoPos(26,RedPikmin:toWorld(vec(3,0.3,7.7)))
holoScale(26,vec(0.7))
holoColor(26,vec(255,0,0))
holoMaterial(26,"models/debug/debugwhite")
#"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl"
}

#holoScale(1,vec(2,2,2))
#holoColor(1,vec(20,100,255))
#The colour follows the order of Red,Green,Blue.
#Vector can either be for scaling or colouring and RedPikminTC.
#For scaling: (Length, Breadth, Height)
#holoMaterial(1,"")
#holoPos(1,Chippos+vec(0,0,-30))
#holoModel(1,"models/props_wasteland/light_spotlight01_lamp.mdl")

#runOnTick(1)

RedPikmin:setMass(50)
if ((RedPikmin:pos()-Target:pos()):length()>200&BluePikmin:model()=="models/hunter/blocks/cube025x025x025.mdl"){RedPikmin:applyForce(((RedPikmin:pos()-RedPikmin:pos())*3-RedPikmin:vel())*RedPikmin:mass()),lightColor(111,vec(0,0,0))}
if ((RedPikmin:pos()-Target:pos()):length()>200&BluePikmin:model()==""&YellowPikmin:model()=="models/hunter/blocks/cube025x025x025.mdl"){RedPikmin:applyForce(((BluePikmin:pos()#[+vec(150,0,-50)]#-RedPikmin:pos())*3-RedPikmin:vel())*RedPikmin:mass()),lightColor(111,vec(0,0,0))}
if ((RedPikmin:pos()-Target:pos()):length()<55){applyForce((RedPikmin:pos()-RedPikmin:pos())*3-RedPikmin:vel()*RedPikmin:mass())}
P = RedPikmin:elevation(Target:pos()+vec(-50,0,0))
Y = RedPikmin:bearing(Target:pos())
R = RedPikmin:angles():roll()
Ang = (-ang(P,Y,R)*100)
if(Target:isOnGround()){RedPikmin:applyAngForce(Ang + $Ang*5),lightRemove(1)}

if((RedPikmin:pos()-Target:pos()):length()>1000){RedPikmin:applyAngForce(Target2:angles() - RedPikmin:angles()*5)}

if(Target:isOnGround()==0){RedPikmin:applyAngForce(Target2:angles() - RedPikmin:angles()*5)}

if((RedPikmin:pos()-Target:pos()):length()>1000){RedPikmin:applyForce((RedPikmin:pos()-RedPikmin:pos())*3-RedPikmin:vel()*RedPikmin:mass())
        lightCreate(111)
    lightParent(111,RedPikmin)
    lightColor(111,vec(255,0,0))
    lightBrightness(111,5)
    lightDistance(111,5)}

if(Target:isOnGround()==0){RedPikmin:applyForce((RedPikmin:pos()-RedPikmin:pos())*3-RedPikmin:vel()*RedPikmin:mass())}

if(RedPikmin:isUnderWater()){RedPikmin:applyForce((RedPikmin:pos()-RedPikmin:pos()+vec(0,0,-10))*3-RedPikmin:vel()*RedPikmin:mass()),timer("drowning",3000)}
if(clk("Rdrowning")){soundPlay(1,100,"ambient/water_splash1.wav"),timer("drown",7000)}
if(clk("Rdrown")&RedPikmin:isUnderWater()){holoDeleteAll(),soundStop(1,100),RedPikmin:soundPlay(1,2000,"pikmin/pikmin_die.wav"),timer("dead",500)}
    if(clk("Rdead")){RedPikmin:propBreak()}

if(Target:keyAttack2()&Target:isCrouch()==0){RedPikmin:applyForce(((Target2:pos()-RedPikmin:pos())*3-RedPikmin:vel())*RedPikmin:mass()),Fight=1}
if(Target:keyAttack2()&Target:isCrouch()){RedPikmin:applyForce(((Target:aimPos()-RedPikmin:pos())*3-RedPikmin:vel())*RedPikmin:mass()),Fight=1}


if(owner():keyAttack2()==0){Fight=0}
if(Fight&(RedPikmin:pos()-Target2:pos()):length()<50){B:propBreak(),timer("Rhit",750)}
if(clk("Rhit")){B=propSpawn("models/props_junk/gascan001a.mdl",RedPikmin:pos(),1)}
if(Target2:keyAttack1()&changed(Target2:keyAttack1())&Target2:aimEntity()==RedPikmin&(RedPikmin:pos()-Target2:pos()):length() < 100){RedPikmin:soundPlay(1,100,""),timer("death",1000)}
if(clk("Rdeath")){RedPikmin:propBreak()}


#Yellow Pikmin

YellowPikmin:setAlpha(0)
if(clk("boot")|first()){
holoCreate(100)
holoParent(100,500)
holoParent(100,400)
holoParent(100,300)
holoParent(100,200)
holoParent(100,600)
holoPos(100,YellowPikmin:toWorld(vec(0,0,0)))
holoModel(100,"models/sprops/misc/fittings/cred_12_6_tall.mdl")
holoMaterial(100,"models/debug/debugwhite")
holoScale(100,vec(0.4))
holoColor(100,vec(255,255,0))
holoCreate(1100)
holoParent(1100,500)
holoParent(1100,400)
holoParent(1100,300)
holoParent(1100,200)
holoParent(1100,600)
holoParent(1100,YellowPikmin)
holoPos(1100,YellowPikmin:toWorld(vec(0,0,-3.8)))
holoAng(1100,YellowPikmin:angles()+ang(180,0,0))
holoModel(1100,"models/sprops/cylinders/size_4/cylinder_9x6.mdl")
holoMaterial(1100,"models/debug/debugwhite")
holoScale(1100,vec(0.52))
holoColor(1100,vec(255,255,0))

holoAng(100,YellowPikmin:angles())
holoParent(100,YellowPikmin)
holoCreate(200)
holoParent(200,500)
holoParent(200,400)
holoParent(200,300)
holoParent(200,600)
holoParent(200,100)
holoModel(200,"models/props_phx/misc/potato.mdl")
holoMaterial(200,"models/debug/debugwhite")
holoScale(200,vec(2))
holoPos(200,YellowPikmin:toWorld(vec(2,-0,8))) #0.3,-2.3,8
holoAng(200,YellowPikmin:angles()+ang(0,90,0))
holoColor(200,vec(255,255,0))
holoParent(200,YellowPikmin)
holoCreate(300)
holoParent(3,5)
holoParent(3,4)
holoParent(3,6)
holoParent(3,2)
holoParent(3,1)
holoParent(300,YellowPikmin)
holoPos(300,YellowPikmin:toWorld(vec(4.0,2,10)))
holoAng(300,YellowPikmin:angles()+ang(90,90,0))
holoScale(300,vec(0.5))
holoMaterial(300,"models/debug/debugwhite")
holoModel(300,"models/props_phx/misc/potato.mdl")
holoParent(300,1)
holoParent(300,YellowPikmin)
holoCreate(400)
holoParent(400,5)
holoParent(400,6)
holoParent(400,3)
holoParent(400,2)
holoParent(400,1)
holoParent(400,YellowPikmin)
holoPos(400,YellowPikmin:toWorld(vec(4.5,2,10)))
holoAng(400,YellowPikmin:angles()+ang(90,90,0))
holoScale(400,vec(0.23))
holoMaterial(400,"models/debug/debugwhite")
holoModel(400,"models/props_phx/misc/potato.mdl")
holoColor(400,vec(0,0,0))
holoMaterial(400,"pheonix_storms/black_chrome")
holoParent(400,YellowPikmin)
holoCreate(500)
holoParent(5,6)
holoParent(5,4)
holoParent(5,3)
holoParent(5,2)
holoParent(5,1)
holoParent(500,YellowPikmin)
holoPos(500,YellowPikmin:toWorld(vec(3.9,-2,10)))
holoAng(500,YellowPikmin:angles()+ang(90,90,0))
holoScale(500,vec(0.5))
holoMaterial(500,"models/debug/debugwhite")
holoModel(500,"models/props_phx/misc/potato.mdl")
holoParent(500,YellowPikmin)
holoCreate(600)
holoParent(6,5)
holoParent(6,4)
holoParent(6,3)
holoParent(6,2)
holoParent(6,1)
holoParent(600,YellowPikmin)
holoPos(600,YellowPikmin:toWorld(vec(4.5,-2,10)))
holoAng(600,YellowPikmin:angles()+ang(90,90,0))
holoScale(600,vec(0.23))
holoMaterial(600,"models/debug/debugwhite")
holoModel(600,"models/props_phx/misc/potato.mdl")
holoColor(600,vec(0,0,0))
holoMaterial(600,"pheonix_storms/black_chrome")
holoParent(600,YellowPikmin)
holoCreate(700)
holoModel(700,"models/sprops/misc/fittings/bend_long_90_1_5.mdl")
holoColor(700,vec(255,255,0))
holoMaterial(700,"models/debug/debugwhite")
holoAng(700,YellowPikmin:angles()+ang(-90,90,0))
holoPos(700,YellowPikmin:toWorld(vec(0,1.5,14.5)))
holoScale(700,vec(1.3))
holoParent(700,YellowPikmin)
holoCreate(800)
holoModel(800,"models/sprops/misc/domes/size_0/dome_3x3.mdl")
holoAng(800,YellowPikmin:angles()+ang(90,270,0))
holoPos(800,YellowPikmin:toWorld(vec(0,6.5,15.9)))
holoColor(800,vec(255,255,0))
holoScale(800,vec(0.7))
holoParent(800,YellowPikmin)
holoCreate(1400)
holoModel(1400,"models/sprops/misc/domes/size_1/dome_12x6.mdl")
holoAng(1400,YellowPikmin:angles()+ang(90,90,0))
holoPos(1400,YellowPikmin:toWorld(vec(0,6.5,15.9)))
holoColor(1400,vec(255,255,0))
holoScale(1400,vec(0.2))
holoParent(1400,YellowPikmin)
holoMaterial(1400,"sprops/textures/sprops_cfiber2")
holoCreate(900)
holoModel(900,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(900,YellowPikmin)
holoAng(900,YellowPikmin:angles()+ang(vec(160,90,0)))
holoPos(900,YellowPikmin:toWorld(vec(0,-3.7,-1.7)))
holoScale(900,vec(0.5))
holoColor(900,vec(255,255,0))
holoMaterial(900,"models/debug/debugwhite")
holoCreate(1000)
holoModel(1000,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(1000,YellowPikmin)
holoAng(1000,YellowPikmin:angles()+ang(vec(-200,-90,0)))
holoPos(1000,YellowPikmin:toWorld(vec(0,3.7,-1.7)))
holoScale(1000,vec(0.5))
holoColor(1000,vec(255,255,0))
holoMaterial(1000,"models/debug/debugwhite")
holoCreate(1200)
holoModel(1200,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(1200,YellowPikmin)
holoAng(1200,YellowPikmin:angles()+ang(vec(0,0,0)))
holoPos(1200,YellowPikmin:toWorld(vec(-1,1,-6)))
holoScale(1200,vec(0.5))
holoColor(1200,vec(255,255,0))
holoMaterial(1200,"models/debug/debugwhite")
holoCreate(1300)
holoModel(1300,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(1300,YellowPikmin)
holoAng(1300,YellowPikmin:angles()+ang(vec(0,0,0)))
holoPos(1300,YellowPikmin:toWorld(vec(-1,-1,-6)))
holoScale(1300,vec(0.5))
holoColor(1300,vec(255,255,0))
holoMaterial(1300,"models/debug/debugwhite")
holoCreate(1900)
holoModel(1900,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(1900,YellowPikmin)
holoAng(1900,YellowPikmin:angles()+ang(vec(0,0,-45)))
holoPos(1900,YellowPikmin:toWorld(vec(0,-2,0)))
holoScale(1900,vec(0.4))
holoColor(1900,vec(255,255,0))
holoMaterial(1900,"models/debug/debugwhite")
holoCreate(2000)
holoModel(2000,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(2000,YellowPikmin)
holoAng(2000,YellowPikmin:angles()+ang(vec(0,0,45)))
holoPos(2000,YellowPikmin:toWorld(vec(0,2,0)))
holoScale(2000,vec(0.4))
holoColor(2000,vec(255,255,0))
holoMaterial(2000,"models/debug/debugwhite")
holoCreate(2100)
holoModel(2100,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(2100,YellowPikmin)
holoAng(2100,YellowPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(2100,YellowPikmin:toWorld(vec(0,3.8,15.9)))
holoScale(2100,vec(0.67))
holoColor(2100,vec(255,255,0))
holoMaterial(2100,"models/debug/debugwhite")
holoCreate(2200)
holoModel(2200,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(2200,YellowPikmin)
holoAng(2200,YellowPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(2200,YellowPikmin:toWorld(vec(1.6,6.5,15.9)))
holoScale(2200,vec(0.67))
holoColor(2200,vec(255,255,255))
holoMaterial(2200,"models/debug/debugwhite")
holoCreate(2300)
holoModel(2300,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(2300,YellowPikmin)
holoAng(2300,YellowPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(2300,YellowPikmin:toWorld(vec(-1.6,6.5,15.9)))
holoScale(2300,vec(0.67))
holoColor(2300,vec(255,255,255))
holoMaterial(2300,"models/debug/debugwhite")
holoCreate(2400)
holoModel(2400,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(2400,YellowPikmin)
holoAng(2400,YellowPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(2400,YellowPikmin:toWorld(vec(0,6.5,17.6)))
holoScale(2400,vec(0.67))
holoColor(2400,vec(255,255,255))
holoMaterial(2400,"models/debug/debugwhite")
holoCreate(2500)
holoModel(2500,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(2500,YellowPikmin)
holoAng(2500,YellowPikmin:angles()+ang(vec(-90,-90,0)))
holoPos(2500,YellowPikmin:toWorld(vec(0,6.5,13.9)))
holoScale(2500,vec(0.67))
holoColor(2500,vec(255,255,255))
holoMaterial(2500,"models/debug/debugwhite")
holoCreate(1500)
holoModel(1500,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(1500,YellowPikmin)
holoAng(1500,YellowPikmin:angles()+ang(vec(-2,90,180)))
holoPos(1500,YellowPikmin:toWorld(vec(-1.2,5,8.8)))
holoScale(1500,vec(0.9))
holoColor(1500,vec(255,255,0))
holoMaterial(1500,"models/debug/debugwhite")
holoCreate(1600)
holoModel(1600,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(1600,YellowPikmin)
holoAng(1600,YellowPikmin:angles()+ang(vec(-2,-90,180)))
holoPos(1600,YellowPikmin:toWorld(vec(-1.2,-5,8.8)))
holoScale(1600,vec(0.9))
holoColor(1600,vec(255,255,0))
holoMaterial(1600,"models/debug/debugwhite")
holoCreate(1700)
holoModel(1700,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(1700,YellowPikmin)
holoAng(1700,YellowPikmin:angles()+ang(vec(-3,90,180)))
holoPos(1700,YellowPikmin:toWorld(vec(-0.9,5,8.8)))
holoScale(1700,vec(0.7))
holoColor(1700,vec(150,150,0))
holoMaterial(1700,"models/debug/debugwhite")
holoCreate(1800)
holoModel(1800,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(1800,YellowPikmin)
holoAng(1800,YellowPikmin:angles()+ang(vec(-3,-90,180)))
holoPos(1800,YellowPikmin:toWorld(vec(-0.9,-5,8.8)))
holoScale(1800,vec(0.7))
holoColor(1800,vec(150,150,0))
holoMaterial(1800,"models/debug/debugwhite")

#"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl"

}
#holoScale(1,vec(2,2,2))
#holoColor(1,vec(20,100,255))
#The colour follows the order of Red,Green,Blue.
#Vector can either be for scaling or colouring and ETC.
#For scaling: (Length, Breadth, Height)
#holoMaterial(1,"")
#holoPos(1,Chippos+vec(0,0,-30))
#holoModel(1,"models/props_wasteland/light_spotlight01_lamp.mdl")

#runOnTick(1)

YellowPikmin:setMass(50)
if ((YellowPikmin:pos()-owner():pos()):length()>200){
applyForce(((Target:pos()-YellowPikmin:pos()+vec(0,0,5))*2-YellowPikmin:vel())*YellowPikmin:mass()),lightColor(111,vec(0,0,0))}
if(YellowPikmin:isUnderWater()){YellowPikmin:applyForce((YellowPikmin:pos()-YellowPikmin:pos()+vec(0,0,-10))*3-YellowPikmin:vel()*YellowPikmin:mass()),timer("Ydrowning",3000)}
if(clk("Ydrowning")){YellowPikmin:soundPlay(1,100,"ambient/water_splash1.wav"),timer("drown",7000)}
if(clk("Ydrown")&YellowPikmin:isUnderWater()){holoDeleteAll(),soundStop(1,100),YellowPikmin:soundPlay(1,2000,"pikmin/pikmin_die.wav"),timer("Ydead",500)}
    if(clk("Ydead")){YellowPikmin:propBreak()}
    if(YellowPikmin:isOnFire()){YellowPikmin:applyForce((YellowPikmin:pos()-YellowPikmin:pos()+vec(10,0,-10))*3-YellowPikmin:vel()*YellowPikmin:mass()),timer("Yfire",3000)}
    if(clk("Yfire")){holoDeleteAll(),soundStop(1,100),YellowPikmin:soundPlay(1,2000,"pikmin/pikmin_die.wav"),timer("Ydead",500)}
    if(clk("Ydead")){YellowPikmin:propBreak()}



if(owner():keyAttack2()&Target:isCrouch()==0){YellowPikmin:applyForce(((Target2:pos()-YellowPikmin:pos())*5-YellowPikmin:vel())*YellowPikmin:mass())
    Fight=1}
if(Target:keyAttack2()&Target:isCrouch()){YellowPikmin:applyForce(((Target:aimPos()-YellowPikmin:pos())*3-YellowPikmin:vel())*YellowPikmin:mass()),Fight=1}
if(owner():keyAttack2()==0){Fight=0}
if(Fight&(YellowPikmin:pos()-Target2:pos()):length()<50){B:propBreak(),timer("Hit",750)}
if(clk("YHit")){B=propSpawn("models/props_junk/gascan001a.mdl",YellowPikmin:pos(),1)}
if(Target2:keyAttack1()&changed(Target2:keyAttack1())&Target2:aimEntity()==YellowPikmin&(YellowPikmin:pos()-Target2:pos()):length() < 100){YellowPikmin:soundPlay(1,100,""),timer("Ydead",1000)}
if(clk("Ydead")){YellowPikmin:propBreak()}
