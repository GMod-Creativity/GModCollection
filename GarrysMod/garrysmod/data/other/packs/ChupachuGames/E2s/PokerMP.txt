@name PokerMP
@inputs EGP:wirelink EGP2:wirelink Pod:entity Pod2:entity
@outputs 
@persist Fold Call Blinds Call2 Fold2 Wallet Wallet2 Hand Winner Turn Card1:string Card2:string Card3:string Card4:string Pot Combo Lock Lock2 Add2 Add1
@trigger 

interval(100)
if(first()){
    Combo=1
    Winner=0
    Wallet=10000
    Wallet2=10000
EGP:egpBox(1,vec2(),vec2(1024,300))
EGP2:egpBox(1,vec2(),vec2(1024,300))
EGP:egpColor(1,vec(200,100,50))
EGP2:egpColor(1,vec(50,100,200))
EGP:egpBox(2,vec2(0,150+724/4),vec2(1024,724/2))
EGP:egpColor(2,vec(150,190,150))
EGP2:egpBox(2,vec2(0,150+724/4),vec2(1024,724/2))
EGP2:egpColor(2,vec(150,190,150))}
EGP:egpText(3,"Wallet: "+Wallet,vec2(200,50))
EGP:egpColor(3,vec(200,255,200))
EGP2:egpText(3,"Wallet: "+Wallet2,vec2(200,50))
EGP2:egpColor(3,vec(200,255,200))
EGP:egpColor(4,vec(150,150,150))
EGP:egpColor(5,vec(150,150,150))
EGP2:egpColor(4,vec(150,150,150))
EGP2:egpColor(5,vec(150,150,150))
if(first()){Call=20,Blinds=500,Fold=0,Fold2=0,Call2=0,Hand=1}
Call=clamp(Call,1,20)

if(changed(Pod:driver():keyRight())&Pod:driver():keyRight()){Call=Call-1}
if(changed(Pod:driver():keyLeft())&Pod:driver():keyLeft()){Call=Call+1}
if(Hand&changed(Hand)){
    if(Blinds<Wallet&Blinds<Wallet2){
    
Hand=0,Pot=1000,Wallet=Wallet-500,Wallet2=Wallet2-500,Turn=1}
if(Blinds>Wallet){Winner=2},if(Blinds>Wallet2){Winner=1}}

if(changed(Turn==1)&Turn==1){Combo=1,Rnd1=round(random(1,13)),Rnd2=round(random(1,13)),Rnd3=round(random(1,13)),Rnd4=round(random(1,13)),EGP:egpBox(4,vec2(1024/3,1024/4),vec2(100,150)),EGP:egpBox(5,vec2(1024/6,1024/4),vec2(100,150)),EGP2:egpBox(4,vec2(1024/3,1024/4),vec2(100,150)),EGP2:egpBox(5,vec2(1024/6,1024/4),vec2(100,150))}

if(Rnd1==1){Card1="A"}
if(Rnd1>=2&Rnd1<=10){Card1=Rnd1:toString()}
if(Rnd1==11){Card1="J"}
if(Rnd1==12){Card1="Q"}
if(Rnd1==13){Card1="K"}

if(Rnd2==1){Card2="A"}
if(Rnd2>=2&Rnd2<=10){Card2=Rnd2:toString()}
if(Rnd2==11){Card2="J"}
if(Rnd2==12){Card2="Q"}
if(Rnd2==13){Card2="K"}

if(Rnd3==1){Card3="A"}
if(Rnd3>=2&Rnd3<=10){Card3=Rnd3:toString()}
if(Rnd3==11){Card3="J"}
if(Rnd3==12){Card3="Q"}
if(Rnd3==13){Card3="K"}

if(Rnd4==1){Card4="A"}
if(Rnd4>=2&Rnd4<=10){Card4=Rnd4:toString()}
if(Rnd4==11){Card4="J"}
if(Rnd4==12){Card4="Q"}
if(Rnd4==13){Card4="K"}
EGP:egpText(7,Card1,vec2(1024/3.175,1024/4))
EGP:egpSize(7,50)

EGP2:egpText(7,Card3,vec2(1024/3.175,1024/4))
EGP2:egpSize(7,50)

EGP:egpText(8,Card2,vec2(1024/6.0,1024/4))
EGP:egpSize(8,50)

EGP2:egpText(8,Card4,vec2(1024/6.0,1024/4))
EGP2:egpSize(8,50)

EGP:egpText(9,"Pot: "+Pot,vec2((255/3)*2,512/1.15))
EGP:egpSize(9,50)

EGP2:egpText(9,"Pot: "+Pot,vec2((255/3)*2,512/1.15))
EGP2:egpSize(9,50)

if(changed(Turn)){Lock=0,Lock2=0,Call=20}

if(!Lock&Pod:driver():keyJump()&changed(Pod:driver():keyJump())){Lock=1,Wallet=Wallet-(Wallet/Call),Pot=Pot+Add1}
if(!Lock2&Pod2:driver():keyJump()&changed(Pod2:driver():keyJump())){Lock2=1,Wallet2=Add2,Pot=Add2}
if(Lock){EGP:egpColor(2,vec(255,100,100))}
if(!Lock){EGP:egpColor(2,vec(150,190,150))}
if(Lock2){EGP2:egpColor(2,vec(255,100,100))}
if(!Lock2){EGP2:egpColor(2,vec(150,190,150))}
#4 of a kind
#full house
#straight
#3 of a kind
#2 pair
#higher pairs
if(Lock&Lock2&Turn!=5){Turn=Turn+1,Lock=0,Lock2=0}

