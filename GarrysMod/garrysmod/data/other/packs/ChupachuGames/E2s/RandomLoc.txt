@name RandomLoc
@inputs Item:entity
@outputs 
@persist T:entity P:entity 
@trigger 

interval(100)
findByClass("player")
findIncludePlayer(owner())
T=findClosest(entity():pos())
if(first()){Item:setPos(holoEntity(round(random(1,6))):pos()+vec(0,0,20))
timer("shuffle",5000)}

holoCreate(1)
holoPos(1,entity():toWorld(vec(0,200,0)))

holoCreate(2)
holoPos(2,entity():toWorld(vec(0,-200,0)))

holoCreate(3)
holoPos(3,entity():toWorld(vec(-200,200,0)))

holoCreate(4)
holoPos(4,entity():toWorld(vec(-200,-200,0)))

holoCreate(5)
holoPos(5,entity():toWorld(vec(400,200,0)))

holoCreate(6)
holoPos(6,entity():toWorld(vec(400,-200,0)))

holoCreate(20)
holoPos(20,entity():toWorld(vec(0,0,0)))
holoScale(20,vec(20,23.4,1))
holoColor(20,vec(75,75,75))

holoCreate(21)
holoPos(21,entity():toWorld(vec(0,200,0)))
holoScale(21,vec(40,10,1))
holoColor(21,vec(50,50,50))

holoCreate(22)
holoPos(22,entity():toWorld(vec(0,-200,0)))
holoScale(22,vec(40,10,1))
holoColor(22,vec(50,50,50))

holoCreate(23)
holoPos(23,entity():toWorld(vec(360,0,0)))
holoScale(23,vec(20,43.4,1))
holoColor(23,vec(75,25,75))

holoCreate(24)
holoPos(24,entity():toWorld(vec(180,0,0)))
holoScale(24,vec(10,23.4,15))
holoColor(24,vec(70,70,70))

holoCreate(25)
holoPos(25,entity():toWorld(vec(-180,0,0)))
holoScale(25,vec(10,23.4,15))
holoColor(25,vec(50,50,50))

holoCreate(26)
holoPos(26,entity():toWorld(vec(70,0,100)))
holoScale(26,vec(200,200,1))
holoColor(26,vec(50,50,50))

holoCreate(27)
holoPos(27,entity():toWorld(vec(50,-140,15)))
holoScale(27,vec(5,1,13))
holoColor(27,vec(50,50,50))

holoCreate(28)
holoPos(28,entity():toWorld(vec(90,-140,15)))
holoScale(28,vec(5,1,13))
holoColor(28,vec(50,50,50))

holoCreate(29)
holoPos(29,entity():toWorld(vec(50,140,15)))
holoScale(29,vec(5,1,13))
holoColor(29,vec(50,50,50))

holoCreate(30)
holoPos(30,entity():toWorld(vec(90,140,15)))
holoScale(30,vec(5,1,13))
holoColor(30,vec(50,50,50))

holoCreate(31)
holoPos(31,entity():toWorld(vec(-50,-140,15)))
holoScale(31,vec(5,1,13))
holoColor(31,vec(50,50,50))

holoCreate(32)
holoPos(32,entity():toWorld(vec(-90,-140,15)))
holoScale(32,vec(5,1,13))
holoColor(32,vec(50,50,50))

holoCreate(33)
holoPos(33,entity():toWorld(vec(-50,140,15)))
holoScale(33,vec(5,1,13))
holoColor(33,vec(50,50,50))

holoCreate(34)
holoPos(34,entity():toWorld(vec(-90,140,15)))
holoScale(34,vec(5,1,13))
holoColor(34,vec(50,50,50))

holoCreate(70)
holoPos(70,entity():toWorld(vec(0,-140,15)))
holoScale(70,vec(5,1,13))
holoMaterial(70,"phoenix_storms/stripes")

holoCreate(69)
holoModel(69,"models/player/zombie_fast.mdl")
holoAnim(69,"ACT_IDLE")
holoPos(69,Item:pos()+vec(0,0,-15))
holoAng(69,(T:pos() - holoEntity(69):pos()):toAngle())
holoColor(69,vec(0))
Item:setAlpha(0)
Item:propFreeze(1)

holoCreate(70)
holoPos(70,entity():toWorld(vec(0,-140,15)))
holoScale(70,vec(5,1,13))
holoMaterial(70,"phoenix_storms/stripes")

holoCreate(71)
holoPos(71,entity():toWorld(vec(0,140,15)))
holoScale(71,vec(5,1,13))
holoMaterial(71,"phoenix_storms/stripes")

if(clk("shuffle")){Item:setPos(holoEntity(round(random(1,6))):pos()+vec(0,0,20))
    timer("shuffle",5000)
}

if(changed((T:pos() - holoEntity(69):pos()):length() < 130)&(T:pos() - holoEntity(69):pos()):length() < 130){T:soundPlay(1888,100,"vo/npc/male01/pain0"+round(random(1,7))+".wav")}
if((T:pos() - holoEntity(70):pos()):length() < 90){Door1=1}
else{Door1=0}
if((T:pos() - holoEntity(71):pos()):length() < 90){Door2=1}
else{Door2=0}

if(Door1){holoAlpha(70,255)}
else{holoAlpha(70,25)}

if(Door2){holoAlpha(71,255)}
else{holoAlpha(71,25)}

if((Item:pos() - holoEntity(70):pos()):length() < 190&!Door1){timer("death1",2000)}
if((Item:pos() - holoEntity(71):pos()):length() < 190&!Door2){timer("death2",2000)}
if(Door1|!T:isAlive()){stoptimer("death1")}
if(Door2|!T:isAlive()){stoptimer("death2")}

if(clk("death1")&(T:pos() - entity():pos()):length() < 170){P=propSpawn("models/props_phx/cannonball_solid.mdl",entity():pos()+vec(0,0,50),1),P:propBreak()}
if(clk("death2")&(T:pos() - entity():pos()):length() < 170){P=propSpawn("models/props_phx/cannonball_solid.mdl",entity():pos()+vec(0,0,50),1),P:propBreak()}
if((T:pos() - entity():pos()):length() < 170){stoptimer("death1"),stoptimer("death2"),P:propBreak()}
