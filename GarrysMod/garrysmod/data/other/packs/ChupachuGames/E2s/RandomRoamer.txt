@name RandomRoamer
@inputs 
@outputs 
@persist Mod Ranger:ranger P:entity T:entity
@trigger 

interval(100)

findByClass("player")
T=findClosest(entity():pos())

if(first()){holoCreate(1),P=propSpawn("models/props_borealis/bluebarrel001.mdl",holoEntity(1):pos(),holoEntity(1):angles(),1)
holoModel(1,"models/humans/group01/male_07.mdl")}
if((holoEntity(1):pos() - holoEntity(2):pos()):length() < 40){holoAnim(1,"ACT_IDLE")}

P:setPos(holoEntity(1):toWorld(vec(0,0,40)))

if(first()){holoCreate(2),holoPos(2,entity():pos()+vec(round(random(-400,400)),round(random(-400,400)),0))}


if(P:model()!=""){
if(changed((entity():pos() - holoEntity(2):pos()):length() > 40)&(entity():pos() - holoEntity(2):pos()):length() > 40){holoAnim(1,"ACT_WALK")}

entity():setAng((entity():pos() - holoEntity(2):pos()):toAngle()+ang(0,180,0))
holoAng(1,entity():angles())

if((entity():pos() - holoEntity(2):pos()):length() > 40&(Ranger:position() - entity():pos()):length() > 40){entity():setPos(entity():toWorld(vec(10*Mod,0,0)))}
holoPos(1,entity():toWorld(vec(0,0,0)))

if((entity():pos() - holoEntity(2):pos()):length() < 40){holoPos(2,entity():pos()+vec(round(random(-400,400)),round(random(-400,400)),0))}

Ranger=rangerOffset(400,entity():pos(),entity():forward())
holoCreate(3)
holoPos(3,Ranger:position())


if((Ranger:position() - entity():pos()):length() < 40){holoPos(2,entity():pos()+vec(round(random(-400,400)),round(random(-400,400)),0)),entity():setAng(entity():angles()+ang(0,0,0))}

if((Ranger:position() - entity():pos()):length() < 40){Mod=0,holoPos(2,entity():pos()+vec(round(random(-400,400)),round(random(-400,400)),0)),entity():setAng(ang(0,round(random(0,360)),0))}
if((Ranger:position() - entity():pos()):length() < 70){Mod=0.5}
if((Ranger:position() - entity():pos()):length() < 100){Mod=0.8}
if((Ranger:position() - entity():pos()):length() < 200){Mod=1}
if((Ranger:position() - entity():pos()):length() > 300){Mod=1.3}

holoAlpha(2,0)
holoAlpha(3,0)

P:setAlpha(0)
entity():setAlpha(0)
#entity():propNotSolid(1)
entity():propFreeze(1)
}
if(changed(P:model())&P:model()==""){holoModel(1,"models/player/group01/male_07.mdl"),holoAnim(1,"ACT_GMOD_DEATH"),timer("death",1000),entity():soundPlay(1,300,"vo/npc/male01/pain0"+round(random(1,9))+".wav")}
if(clk("death")){selfDestruct()}


if((T:pos() - entity():pos()):length() < 100){P:propDelete()}
