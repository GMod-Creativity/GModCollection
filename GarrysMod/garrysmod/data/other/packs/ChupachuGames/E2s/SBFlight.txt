@name SBFlight
@inputs Seat:entity E:entity
@outputs Active Forward Back Left Right Freeze Lock Space Shift
@persist Driver:entity T:vector
@trigger 
Lock=1
Seat=entity():isConstrainedTo()
interval(100)
holoCreate(1)
holoPos(1,Driver:shootPos())
holoAng(1,Driver:eyeAngles())
holoAlpha(1,10)
if(Seat:driver()==Seat:driver())
{
Driver=Seat:driver()
Active=1
Freeze=0
if(!Driver:keyWalk()){
if(Driver:keyForward())
{
Forward=1
T=E:toWorld(vec(-1,0,0))
}else{Forward=0}
if(Driver:keyBack())
{
Back=1
T=E:toWorld(vec(1,0,0))
}else{Back=0}
if(Driver:keyLeft())
{
Left=1
T=E:toWorld(vec(0,-1,0))
}else{Left=0}
if(Driver:keyRight())
{
Right=1
T=E:toWorld(vec(0,1,0))
}
else{Right=0}
if(Driver:keyJump())
{
Space=1
T=E:toWorld(vec(0,0,-1))
}
if(Driver:keySprint())
{
Shift=1
T=E:toWorld(vec(0,0,1))
}}
else{
    
 if(Driver:keyForward())
{
#E:applyForce((E:pos() - E:toWorld(vec(-1,0,0)))*100*E:mass())
T=E:toWorld(vec(-1,0,0))
}else{Forward=0}
if(Driver:keyBack())
{
#E:applyForce((E:pos() - E:toWorld(vec(1,0,0)))*100*E:mass())
T=E:toWorld(vec(1,0,0))
}else{Back=0}
if(Driver:keyLeft())
{
#E:applyForce((E:pos() - E:toWorld(vec(0,-1,0)))*100*E:mass())
T=E:toWorld(vec(0,-1,0))
}else{Left=0}
if(Driver:keyRight())
{
#E:applyForce((E:pos() - E:toWorld(vec(0,1,0)))*100*E:mass())
T=E:toWorld(vec(0,1,0))
}
else{Right=0}
if(Driver:keyJump())
{
#E:applyForce((E:pos() - E:toWorld(vec(0,0,-1)))*100*E:mass())
T=E:toWorld(vec(0,0,-1))
}
if(Driver:keySprint())
{
#E:applyForce((E:pos() - E:toWorld(vec(0,0,1)))*100*E:mass())
T=E:toWorld(vec(0,0,1))
}   
    
    
    
    
}
if(Driver:keyWalk()){
Pitch=E:elevation(T)
Yaw=E:bearing(T)
Roll=E:angles():roll()

Ang=(-ang(Pitch,Yaw,Roll)*E:mass()*3)
 
E:applyAngForce(Ang + $Ang * 10)
}
}
else{Active=1,Freeze=1}
