@name Securitron MK2 Release
@inputs Gun:entity Selected S:entity H:entity P1:entity
@outputs Fire Sec:entity Arm:entity  Active
@persist RangerForward:ranger P:entity Ranger2:ranger P1:entity Model:string
@trigger 
@model models/props_wasteland/light_spotlight01_lamp.mdl
interval(30)

#[

###TUTORIAL###

I know it looks like a lot, but once you get it down, it's pretty quick.

Firstly, spawn a blue barrel and a turret.

Wire H:entity to the barrel.

Wire Fire to Fire.

Wire Gun:entity to the gun.

Now it is fully working for stage 1 protection.

Stage 2: the manager.

Spawn the Manager E2

Wire Sec1 to Sec

Wire Sec1Arm to Arm

Wire Selected to Sel1

Do this for all 3

Wire S on all entities to the seat

Stage 3:  Camera Work.

Spawn a Camera Controller.

Link the pod to the chair.

Wire Activated to Activated.

Wire Position to Campos.

Wire Angle to Camang.

Enjoy! :D



]#

entity():setAlpha(0)

findByClass("player")
findExcludePlayer("brady")
findExcludePlayer("Ptw")
findExcludePlayer("Moox")
findExcludePlayer("Solid")
#findExcludePlayer(owner())
T=findClosest(entity():pos())
Y=entity():bearing(T:pos())
if((T:weapon():type()=="weapon_physgun"|T:weapon():type()=="gmod_tool"|T:weapon():type()=="none"|T:weapon():type()=="gmod_camera"|T:weapon():type()==""|!T:isAlive())){Aim=0}
else{Aim=1}
if(T:type()=="npc_zombie"){Aim=1}
if(Gun:model()!=""&Aim==1&!Selected&H:model()==Model){Fire=1,entity():setAng((T:pos() - entity():pos()):toAngle()),holoAng(22,(holoEntity(22):pos() - T:shootPos()):toAngle()+ang(-200,0,0))}

H:setPos(entity():toWorld(vec(0,0,100)))

if(first()|dupefinished()){
    Model = "models/props_phx/cannonball_solid.mdl"
    Active=1
    Sec=entity()
    entity():setAng(ang(0,0,0))
holoCreate(1),holoPos(1,entity():toWorld( vec(0,0,20))),holoScale(1,vec(1.4)),holoModel(1,"models/props_vehicles/carparts_wheel01a.mdl")
holoCreate(2),holoPos(2,entity():toWorld( vec(0,6.5,20))),holoScale(2,vec(0.14,0.14,0.6)),holoAng(2,entity():angles()+ang(90,90,0)),holoModel(2,"models/props_phx/construct/metal_angle360.mdl")
holoCreate(3),holoPos(3,entity():toWorld( vec(0,-8.5,20))),holoScale(3,vec(0.14,0.14,0.6)),holoAng(3,entity():angles()+ang(90,90,0)),holoModel(3,"models/props_phx/construct/metal_angle360.mdl")
holoCreate(4),holoPos(4,entity():toWorld( vec(0,6.5,35))),holoAng(4,entity():angles()+ang(0,0,90)),holoScale(4,vec(0.25,0.2,0.2)),holoModel(4,"models/hunter/plates/plate1x3.mdl")
holoCreate(5),holoPos(5,entity():toWorld( vec(0,-7,35))),holoAng(5,entity():angles()+ang(0,0,90)),holoScale(5,vec(0.25,0.2,0.2)),holoModel(5,"models/hunter/plates/plate1x3.mdl")
holoCreate(6),holoPos(6,entity():toWorld( vec(0,-0.15,50))),holoAng(6,entity():angles()+ang(0,0,0)),holoScale(6,vec(0.25,0.1,0.6)),holoModel(6,"models/hunter/plates/plate1x3.mdl")
holoCreate(7),holoPos(7,entity():toWorld( vec(0,0,55))),holoScale(7,vec(0.4,0.7,0.4)),holoModel(7,"models/props_vehicles/carparts_wheel01a.mdl")
holoCreate(8),holoPos(8,entity():toWorld( vec(0,0,66.4))),holoScale(8,vec(0.6,0.6,4.7)),holoModel(8,"models/props_phx/construct/metal_angle360.mdl"),holoMaterial(8,"models/props_combine/metal_combinebridge001")
holoCreate(9),holoPos(9,entity():toWorld( vec(0,0,59))),holoScale(9,vec(0.5,0.5,3)),holoModel(9,"models/props_phx/construct/metal_angle360.mdl"),holoMaterial(9,"models/props_canal/metalwall005b")
holoCreate(10),holoPos(10,entity():toWorld( vec(0,0,110))),holoScale(10,vec(1.6,1.6,1.6)),holoModel(10,"models/hunter/blocks/cube075x075x075.mdl"),holoMaterial(10,"models/props_combine/metal_combinebridge001")
holoCreate(11),holoPos(11,entity():toWorld( vec(22,0,100))),holoAng(11,entity():angles()+ang(15,0,0)),holoScale(11,vec(2,2.6,2)),holoModel(11,"models/props_lab/monitor01b.mdl")
holoCreate(12),holoPos(12,entity():toWorld( vec(0,47,125))),holoScale(12,vec(1.2,1.2,1.2)),holoModel(12,"models/hunter/blocks/cube075x075x075.mdl"),holoMaterial(12,"models/props_combine/metal_combinebridge001")
holoCreate(13),holoPos(13,entity():toWorld( vec(0,-47,125))),holoScale(13,vec(1.2,1.2,1.2)),holoModel(13,"models/hunter/blocks/cube075x075x075.mdl"),holoMaterial(13,"models/props_combine/metal_combinebridge001")
holoCreate(14),holoPos(14,entity():toWorld( vec(29,12,125))),holoAng(14,entity():angles()+ang(90,0,0)),holoScale(14,vec(1.2,1.2,1.2)),holoModel(14,"models/cheeze/wires/speaker.mdl"),holoMaterial(14,"models/props_lab/door_klab01")
holoCreate(15),holoPos(15,entity():toWorld( vec(28,-12,125))),holoAng(15,entity():angles()+ang(90,0,0)),holoScale(15,vec(1.2,1.2,1.2)),holoModel(15,"models/jaanus/wiretool/wiretool_controlchip.mdl"),holoMaterial(15,"models/props_lab/door_klab01")
holoCreate(16),holoPos(16,entity():toWorld( vec(0,-50,80))),holoAng(16,entity():angles()+ang(90,0,0)),holoScale(16,vec(1,1,1)),holoModel(16,"models/Mechanics/roboticslarge/a2.mdl"),holoMaterial(16,"models/props_lab/door_klab01")
holoCreate(17),holoPos(17,entity():toWorld( vec(0,50,80))),holoAng(17,entity():angles()+ang(90,0,0)),holoScale(17,vec(1,1,1)),holoModel(17,"models/Mechanics/roboticslarge/a1.mdl"),holoMaterial(17,"models/props_lab/door_klab01")
holoCreate(18),holoPos(18,entity():toWorld( vec(0,-36,25))),holoAng(18,entity():angles()+ang(0,0,-75)),holoScale(18,vec(0.15,0.2,0.2)),holoModel(18,"models/hunter/plates/plate1x2.mdl"),holoMaterial(18,"models/props_lab/door_klab01")
holoCreate(19),holoPos(19,entity():toWorld( vec(0,-40.5,9.5))),holoAng(19,entity():angles()+ang(0,0,-135)),holoScale(19,vec(0.15,0.2,0.2)),holoModel(19,"models/hunter/plates/plate1x2.mdl"),holoMaterial(19,"models/props_lab/door_klab01")
holoCreate(20),holoPos(20,entity():toWorld( vec(0,-64.5,25))),holoAng(20,entity():angles()+ang(0,0,-105)),holoScale(20,vec(0.15,0.2,0.2)),holoModel(20,"models/hunter/plates/plate1x2.mdl"),holoMaterial(20,"models/props_lab/door_klab01")
holoCreate(21),holoPos(21,entity():toWorld( vec(0,-60.5,9.5))),holoAng(21,entity():angles()+ang(0,0,-45)),holoScale(21,vec(0.15,0.2,0.2)),holoModel(21,"models/hunter/plates/plate1x2.mdl"),holoMaterial(21,"models/props_lab/door_klab01")
holoCreate(22),holoPos(22,holoEntity(17):toWorld( vec(0,0,-30))),holoAng(22,holoEntity(17):angles()+ang(90,0,0)),holoScale(22,vec(0.9,0.9,0.9)),holoModel(22,"models/XQM/Rails/trackball_1.mdl"),holoMaterial(22,"models/props_lab/door_klab01")
holoCreate(23),holoPos(23,holoEntity(22):toWorld( vec(30,0,-10))),holoAng(23,holoEntity(22):angles()+ang(20,0,0)),holoScale(23,vec(1,1,1)),holoModel(23,"models/Mechanics/roboticslarge/a1.mdl"),holoMaterial(23,"models/props_lab/door_klab01")
Gun:setPos(holoEntity(23):toWorld( vec(30,0,-10)))
Gun:setAng(holoEntity(23):angles()+ang(180,0,0))
#Gun:parentTo(holoEntity(23))
}
holoParent(1,entity())
holoParent(2,entity())
holoParent(3,entity())
holoParent(4,entity())
holoParent(5,entity())
holoParent(6,entity())
holoParent(7,entity())
holoParent(8,entity())
holoParent(9,entity())
holoParent(10,entity())
holoParent(11,entity())
holoParent(12,entity())
holoParent(13,entity())
holoParent(14,entity())
holoParent(15,entity())
holoParent(16,entity())
holoParent(17,entity())
holoParent(18,entity())
holoParent(19,entity())
holoParent(20,entity())
holoParent(21,entity())
if(!Aim){Fire=0,holoPos(22,holoEntity(17):toWorld( vec(-20,0,-90))),holoAng(22,entity():angles())}
#else{holoPos(22,holoEntity(17):toWorld( vec(20,0,0)))}
holoParent(23,holoEntity(22))
holoPos(22,holoEntity(17):toWorld( vec(20,0,0)))
if(changed(Gun:model())&Gun:model()!=""){entity():setAng(ang(0,0,0)),reset()}
Gun:setPos(holoEntity(23):toWorld(vec(-30,0,0)))
Gun:setAng(holoEntity(23):toWorld( ang(180,0,0)))

if(Selected&H:model()!=""){
    if(S:driver():keySprint()){Sprint=1.5}
    else{Sprint=1}
    if(S:driver():keyForward()&(RangerForward:position() - entity():pos()):length() > 60){holoAng(1,ang(holoEntity(1):angles():pitch()+10,holoEntity(1):angles():yaw(),holoEntity(1):angles():roll())),entity():setPos(entity():toWorld(vec(15*Sprint,0,0)))}
    
    if(S:driver():keyAttack2()){holoAng(22,S:driver():eyeAngles()+ang(-20,0,0)),P:setAng(S:driver():eyeAngles())}
    else{holoAng(22,(holoEntity(22):pos() - T:shootPos()):toAngle()+ang(-200,0,0))
entity():setAng(ang(0,S:driver():eyeAngles():yaw(),0))}
    if(S:driver():keyAttack1()){Fire=1,timer("missile",3000)}
    else{Fire=0,stoptimer("missile"),P:propBreak()}
    
    Gun:setPos(holoEntity(23):toWorld(vec(-30,0,0)))
Gun:setAng(holoEntity(23):toWorld( ang(180,0,0)))
}
Arm=holoEntity(23)

holoCreate(69)

RangerDown = rangerOffset(80, entity():pos(),entity():pos()+vec(0,0,-1200)) 

RangerForward = rangerOffset(80, entity():pos()+vec(0,0,50),entity():forward())

holoPos(69,RangerForward:position())
if(H:model()==Model){
if((entity():pos() - RangerDown:position()):length() < 3){entity():setPos(entity():pos()+vec(0,0,9))}
if((entity():pos() - RangerDown:position()):length() > 70){entity():setPos(entity():pos()+vec(0,0,-60))}
if((entity():pos() - RangerDown:position()):length() > 20&(entity():pos() - RangerDown:position()):length() < 50){entity():setPos(entity():pos()+vec(0,0,-10))}

#entity():propFreeze(1)

if(holoEntity(1):angles():pitch() > 359){holoAng(1,ang(0,holoEntity(1):angles():yaw(),holoEntity(1):angles():roll()))}



if(!Selected&!Fire){P:propNotSolid(0),stoptimer("missile")}
if(!Selected&Fire){P:propNotSolid(0),timer("missile",3000),P:setAng((P:pos() - T:pos()):toAngle()+ang(0,0,0))}
if(Selected&S:driver():keyAttack2()&Fire){P:propNotSolid(1),timer("missile",3000),P:setAng(S:driver():eyeAngles())}
}
holoAlpha(69,0)

if(H:model()==""){Fire=0,Aim=0,entity():propFreeze(0),stoptimer("missile"),P:propBreak()}
if(changed(H:model())&H:model()==Model){entity():propFreeze(1),entity():setAng(ang(0,0,0))}

if(!S:driver():keyAttack2()){P:propNotSolid(0)}

H:setAng(entity():angles()+ang(0,0,0))
H:propFreeze(1)
H:setMass(40)
H:setAlpha(0)

if(clk("missile")){
#[
    stoptimer("missile")
P:propBreak()
    P=propSpawn("models/props_phx/oildrum001_explosive.mdl",holoEntity(201):pos(),entity():angles()+ang(0,180,0),1)
holoCreate(188)
holoPos(188,T:shootPos())
holoAlpha(188,0)



P:setPos(P:toWorld(vec(10,0,0)))
Ranger3=rangerOffset(1000,P:pos(),P:forward())
holoCreate(200)
holoPos(200,Ranger3:position())
holoAlpha(200,0)
#if((Ranger3:pos() - P:pos()):length() < 200){P:propBreak()}
P:propNotSolid(0)
P:propFreeze(0)
]#
    }

holoCreate(201)
holoPos(201,entity():toWorld(vec(100,-70,130)))

RangerGun=rangerOffset(1500,Gun:pos(),Gun:forward())
rangerFilter(P)
holoCreate(200)
holoPos(200,RangerGun:position())
holoVisible(200,players(),0)
holoVisible(200,owner(),1)
#if((Ranger3:position() - P:pos()):length() < 10){P:propBreak()}
if((T:pos()-P:pos()):length()<80){P:propBreak()}

if(S:driver():keyAttack2()|!Selected){P:setAng((P:pos() - T:pos()):toAngle()+ang(0,0,0))}
P:setPos(P:toWorld(vec(-140,0,0)))
if(((P:pos() - T:pos()):length() < 80&!Selected)|((P:pos() - T:pos()):length() < 80&S:driver():keyAttack1()&Selected)){P:propBreak()}
if((P:pos() - RangerGun:position()):length() < 80&Selected&S:driver():keyAttack2()&S:driver():keyAttack1()){P:propBreak()}

holoCreate(1337)
holoModel(1337,"models/props_phx/mk-82.mdl")
holoPos(1337,P:pos())
holoAng(1337,P:angles()+ang(-10,180,0))
holoScale(1337,vec(0.5,1.25,1.25))

P:setAlpha(0)

holoAlpha(200,0)
holoAlpha(201,0)

#if((T:pos() - entity():pos()):length() > 500&!Selected){stoptimer("Missile"),P:propBreak()}
if(Selected&S:driver():keyAttack2()&Fire){P:propNotSolid(1),timer("missile",5000),P:setAng((S:driver():eyeAngles()+ang(0,0,0)) - P:angles()),P:setPos(P:toWorld(vec(0,0,30)))}
else{P:setAng((P:pos() - T:pos()):toAngle()+ang(0,0,0))}
if(!Fire){P:propBreak()}
if((RangerGun:position() - T:pos()):length() > 250){stoptimer("missile"),P:propBreak()}
#[if(H:model()!=""){stoptimer("repairing"),stoptimer("done")}
if(changed(H:model())&H:model()==""){timer("repairing",15000),soundPlay(1,100,"fvox/automedic_on.wav")}

if(clk("repairing")){timer("done",2000),soundPlay(1,100,"ambient/energy/powerdown2.wav")}
if(clk("done")){soundPlay(1,100,"ambient/energy/weld1.wav"),P1=propSpawn("models/props_phx/cannonball_solid.mdl",entity():toWorld(vec(0,0,100)),1)}

H:setPos(entity():toWorld(vec(0,0,100)))
H:setAng(entity():angles()+ang(0,0,0))
H:propFreeze(1)
H:setMass(40)
H:setAlpha(0)
P1=H
H=P1
]#
