@name SpiderTank
@inputs Gun:entity Debugmode [Leg1 Leg2 Leg3 Leg4 Leg5 Leg6 Seat]:entity 
@outputs Fire
@persist  Forward Leg:array I Beginstrut:array Bezprogress:array  Legspot:array Formerpos:array Legrelative:array R:ranger Width Sprint Driver:entity
@trigger 
@model models/sprops/rectangles/size_2_5/rect_18x18x3.mdl
if(first()|dupefinished()){
    Debugmode=0
    #Leg1=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    #Leg2=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    #Leg3=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    #Leg4=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    #Leg5=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    #Leg6=propSpawn("models/sprops/rectangles/size_4/rect_36x48x3.mdl",entity():pos(),0)
    
    holoCreate(20)
    holoModel(20,"hqsphere")
    holoColor(20,vec(250,50,50))
    holoAlpha(20,75)
    Width=100
    Legspot[1,vector]=vec(Width,Width,0) 
    Legspot[2,vector]=vec(0,Width,0) 
    Legspot[3,vector]=vec(-Width,Width,0) 
    Legspot[4,vector]=vec(Width,-Width,0) 
    Legspot[5,vector]=vec(0,-Width,0) 
    Legspot[6,vector]=vec(-Width,-Width,0) 
    
    for (Num=1,12){
        holoCreate(Num)
        if(Num<7){
        Leg[Num,entity]=holoEntity(Num)
    }
    if(Num>6){
        holoPos(Num,entity():toWorld(vec(0,0,80)+Legspot[(Num-6),vector]))
        holoAng(Num,entity():angles()+ang(90,0,0))
        holoParent(Num,entity())
    }
    }   
    Legspot[1,vector]=vec(Width,Width,0) 
    Legspot[2,vector]=vec(0,Width,0) 
    Legspot[3,vector]=vec(-Width,Width,0) 
    Legspot[4,vector]=vec(Width,-Width,0) 
    Legspot[5,vector]=vec(0,-Width,0) 
    Legspot[6,vector]=vec(-Width,-Width,0) 
    holoPos(1,entity():toWorld(Legspot[1,vector]))
    holoPos(2,entity():toWorld(Legspot[2,vector]))
    holoPos(3,entity():toWorld(Legspot[3,vector]))
    holoPos(4,entity():toWorld(Legspot[4,vector]))
    holoPos(5,entity():toWorld(Legspot[5,vector]))
    holoPos(6,entity():toWorld(Legspot[6,vector]))
    
    #Leg[1,entity]=holoEntity(1)
    
    
    }

interval(100)

holoPos(20,rangerOffset(1000,Gun:pos(),Gun:forward()):position())
Gun:setPos(entity():toWorld(vec(50,0,75)))
if(changed(Seat)|changed(Seat:driver())){
Driver=Seat:driver()
}
Gun:setAng(Driver:eyeAngles())
if(Driver:keyAttack1()){Fire=1}
elseif(Fire==1){Fire=0}

#Seatpos=vec((entity():toWorld(vec(0))):x(),Legspot[2,vector]:y(),(entity():toWorld(vec(0,0,65))):z())
Seat:setPos(entity():toWorld(vec(0,0,65)))
Seat:setAng(entity():toWorld(ang(0,-90,0)))
if(!Seat:isFrozen()){
Seat:propFreeze(1)
}
if(changed(Leg1:model())){
 Leg1:setMass(14000)   
}
if(changed(Leg2:model())){
 Leg2:setMass(14000)   
    
}
if(changed(Leg3:model())){
 Leg3:setMass(14000)   
    
}
if(changed(Leg4:model())){
 Leg4:setMass(14000)   
    
}
if(changed(Leg5:model())){
 Leg5:setMass(14000)   
    
}
if(changed(Leg6:model())){
 Leg6:setMass(14000)   
    
}

#if(Driver:model()!=""){

if(Driver:keySprint()){
 Sprint=2   
    
}
elseif(Sprint!=1){Sprint=1}
if(!Driver:keyBack()){
if(Driver:keyForward()){
    Forward=1
    }
    else{Forward=0}
}
if(!Driver:keyForward()){
if(Driver:keyBack()){
    Forward=-0.8
    }
    else{Forward=0}
}


    #if(rangerOffset(1000,entity():pos()+vec(0,0,100),entity():forward()):distance()>120){
entity():setPos(entity():toWorld(vec(Forward*Sprint*25,0,0)))#}
    #entity():applyForce((entity():toWorld(vec(1,0,0))-entity():pos())*70*Sprint*Forward*entity():mass())
if(Driver:model()!=""){
    if(Driver:keyLeft()){
        if(Driver:keyRight()){
    Turn=0}
        else{
            #if(rangerOffset(50,holoEntity(1):toWorld(vec(0,0,10)),holoEntity(1):toWorld(vec(0,-1,10))):distance()>40){
    Turn=5}#}
    }
    if(Driver:keyRight()){
        if(Driver:keyLeft()){
    Turn=0}
        else{
        Turn=-5}
    }
    if(!Driver:keyLeft()&!Driver:keyRight()){
    Turn=0}
    
    
entity():setAng(ang(entity():angles():pitch(),entity():toWorld(ang(0)):yaw()+Turn,entity():angles():roll()))
#entity():isWeldedTo():applyAngForce((owner():eyeAngles()-entity():angles())*1000)
}
#Seat:setAng(entity():toWorld(ang(0,-90,0)))
#}


Legrelative[1,vector]=entity():toWorld(vec(Width,Width,80))
Legrelative[2,vector]=entity():toWorld(vec(0,Width,80)) 
Legrelative[3,vector]=entity():toWorld(vec(-Width,Width,80)) 
Legrelative[4,vector]=entity():toWorld(vec(Width,-Width,80)) 
Legrelative[5,vector]=entity():toWorld(vec(0,-Width,80))
Legrelative[6,vector]=entity():toWorld(vec(-Width,-Width,80))

#holoCreate(7)
#holoPos(7,entity():toWorld(vec(0,0,100)))
#print(Bezprogress)

for(I=1,6){

if(Debugmode==0){
holoVisible(I,players(),0)   
holoVisible(I+6,players(),0)  
    
}
else{
holoVisible(I,players(),1)
holoVisible(I+6,players(),1)   
}

if(holoEntity(I):angles()!=entity():angles()+ang(90,0,0)){
holoAng(I,entity():angles()+ang(90,0,0))}

rangerFilter(Leg1)
rangerFilter(Leg2)
rangerFilter(Leg3)
rangerFilter(Leg4)
rangerFilter(Leg5)
rangerFilter(Leg6)
R=rangerOffset(100,Legrelative[I,vector],Legrelative[I,vector]-vec(0,0,1))
Legspot[I,vector]=rangerOffset(200,holoEntity(I+6):toWorld(vec()),holoEntity(I+6):forward()):position()
#Legspot[I,vector]=Legrelative[I,vector]
if((Leg[I,entity]:toWorld(vec(0))-Legspot[I,vector]):length()>=20&Beginstrut[I,number]==0){
    Formerpos[I,vector]=Leg[I,entity]:pos()
    Beginstrut[I,number]=1
    Bezprogress[I,number]=0
    }
    
    if(Beginstrut[I,number]==1){
        holoPos(I,bezier(Formerpos[I,vector],holoEntity(I):pos()+(Legspot[I,vector]-holoEntity(I):pos())+vec(0,0,70),Legspot[I,vector]+vec(0,0,5),Bezprogress[I,number]))
        if(Bezprogress[I,number]>=1){
            Beginstrut[I,number]=0
            Bezprogress[I,number]=0
            holoEntity(I+6):soundPlay((5000)+I,30*Sprint,"npc/strider/strider_step"+randint(3)+".wav")
            
        }
        else{
        Bezprogress[I,number]=Bezprogress[I,number]+((randint(3)+4)/25)
    }
        
    }

}
#[
if((Leg1:pos()-holoEntity(1):pos()):length()>90){Leg1:setPos(holoEntity(1):pos()+vec(0,0,20))}
if((Leg2:pos()-holoEntity(2):pos()):length()>90){Leg2:setPos(holoEntity(2):pos()+vec(0,0,20))}
if((Leg3:pos()-holoEntity(3):pos()):length()>90){Leg3:setPos(holoEntity(3):pos()+vec(0,0,20))}
if((Leg4:pos()-holoEntity(4):pos()):length()>90){Leg4:setPos(holoEntity(4):pos()+vec(0,0,20))}
if((Leg5:pos()-holoEntity(5):pos()):length()>90){Leg5:setPos(holoEntity(5):pos()+vec(0,0,20))}
if((Leg6:pos()-holoEntity(6):pos()):length()>90){Leg6:setPos(holoEntity(6):pos()+vec(0,0,20))}
]#
Leg1:applyForce((holoEntity(1):pos()-Leg1:pos())*7*(Leg1:mass()/24)*(((holoEntity(1):pos()-Leg1:pos())):length()/5))
Leg1:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))

Leg2:applyForce((holoEntity(2):pos()-Leg2:pos())*7*(Leg2:mass()/24)*(((holoEntity(2):pos()-Leg2:pos())):length()/5))
Leg2:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))

Leg3:applyForce((holoEntity(3):pos()-Leg3:pos())*7*(Leg3:mass()/24)*(((holoEntity(3):pos()-Leg3:pos())):length()/5))
Leg3:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))

Leg4:applyForce((holoEntity(4):pos()-Leg4:pos())*7*(Leg4:mass()/24)*(((holoEntity(4):pos()-Leg4:pos())):length()/5))
Leg4:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))

Leg5:applyForce((holoEntity(5):pos()-Leg5:pos())*7*(Leg5:mass()/24)*(((holoEntity(5):pos()-Leg5:pos())):length()/5))
Leg5:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))

Leg6:applyForce((holoEntity(6):pos()-Leg6:pos())*7*(Leg6:mass()/24)*(((holoEntity(6):pos()-Leg6:pos())):length()/5))
Leg6:setAng(ang(entity():angles():pitch(),entity():angles():yaw(),entity():angles():roll()))




