@name Yellow Pikmin Flower Owner
@persist B:entity 
@inputs
@outputs Ang:angle E:entity 
@model models/hunter/blocks/cube025x025x025.mdl
#Pikmin 1
runOnTick(1)
E = entity()
B:propBreak()
if(duped()){reset()}
Chippos=E:pos()
findByClass("player")
findExcludePlayer("Chupachu")
Target=owner()#findClosest(E:pos())
Target2=findClosest(owner():aimPos())
E:setAlpha(0)
if(first()){
holoCreate(1)
holoParent(1,5)
holoParent(1,4)
holoParent(1,3)
holoParent(1,2)
holoParent(1,6)
holoPos(1,entity():toWorld(vec(0,0,0)))
holoModel(1,"models/sprops/misc/fittings/cred_12_6_tall.mdl")
holoMaterial(1,"models/debug/debugwhite")
holoScale(1,vec(0.4))
holoColor(1,vec(255,255,0))
holoCreate(11)
holoParent(11,5)
holoParent(11,4)
holoParent(11,3)
holoParent(11,2)
holoParent(11,6)
holoParent(11,E)
holoPos(11,entity():toWorld(vec(0,0,-3.8)))
holoAng(11,E:angles()+ang(180,0,0))
holoModel(11,"models/sprops/cylinders/size_4/cylinder_9x6.mdl")
holoMaterial(11,"models/debug/debugwhite")
holoScale(11,vec(0.52))
holoColor(11,vec(255,255,0))

holoAng(1,E:angles())
holoParent(1,E)
holoCreate(2)
holoParent(2,5)
holoParent(2,4)
holoParent(2,3)
holoParent(2,6)
holoParent(2,1)
holoModel(2,"models/props_phx/misc/potato.mdl")
holoMaterial(2,"models/debug/debugwhite")
holoScale(2,vec(2))
holoPos(2,entity():toWorld(vec(2,-0,8))) #0.3,-2.3,8
holoAng(2,E:angles()+ang(0,90,0))
holoColor(2,vec(255,255,0))
holoParent(2,E)
holoCreate(3)
holoParent(3,5)
holoParent(3,4)
holoParent(3,6)
holoParent(3,2)
holoParent(3,1)
holoParent(3,E)
holoPos(3,entity():toWorld(vec(4.0,2,10)))
holoAng(3,E:angles()+ang(90,90,0))
holoScale(3,vec(0.5))
holoMaterial(3,"models/debug/debugwhite")
holoModel(3,"models/props_phx/misc/potato.mdl")
holoParent(3,1)
holoParent(3,E)
holoCreate(4)
holoParent(4,5)
holoParent(4,6)
holoParent(4,3)
holoParent(4,2)
holoParent(4,1)
holoParent(4,E)
holoPos(4,entity():toWorld(vec(4.5,2,10)))
holoAng(4,E:angles()+ang(90,90,0))
holoScale(4,vec(0.23))
holoMaterial(4,"models/debug/debugwhite")
holoModel(4,"models/props_phx/misc/potato.mdl")
holoColor(4,vec(0,0,0))
holoMaterial(4,"pheonix_storms/black_chrome")
holoParent(4,E)
holoCreate(5)
holoParent(5,6)
holoParent(5,4)
holoParent(5,3)
holoParent(5,2)
holoParent(5,1)
holoParent(5,E)
holoPos(5,entity():toWorld(vec(3.9,-2,10)))
holoAng(5,E:angles()+ang(90,90,0))
holoScale(5,vec(0.5))
holoMaterial(5,"models/debug/debugwhite")
holoModel(5,"models/props_phx/misc/potato.mdl")
holoParent(5,E)
holoCreate(6)
holoParent(6,5)
holoParent(6,4)
holoParent(6,3)
holoParent(6,2)
holoParent(6,1)
holoParent(6,E)
holoPos(6,entity():toWorld(vec(4.5,-2,10)))
holoAng(6,E:angles()+ang(90,90,0))
holoScale(6,vec(0.23))
holoMaterial(6,"models/debug/debugwhite")
holoModel(6,"models/props_phx/misc/potato.mdl")
holoColor(6,vec(0,0,0))
holoMaterial(6,"pheonix_storms/black_chrome")
holoParent(6,E)
holoCreate(7)
holoModel(7,"models/sprops/misc/fittings/bend_long_90_1_5.mdl")
holoColor(7,vec(255,255,0))
holoMaterial(7,"models/debug/debugwhite")
holoAng(7,E:angles()+ang(-90,90,0))
holoPos(7,entity():toWorld(vec(0,1.5,14.5)))
holoScale(7,vec(1.3))
holoParent(7,E)
holoCreate(8)
holoModel(8,"models/sprops/misc/domes/size_0/dome_3x3.mdl")
holoAng(8,E:angles()+ang(90,270,0))
holoPos(8,entity():toWorld(vec(0,6.5,15.9)))
holoColor(8,vec(255,255,0))
holoScale(8,vec(0.7))
holoParent(8,E)
holoCreate(14)
holoModel(14,"models/sprops/misc/domes/size_1/dome_12x6.mdl")
holoAng(14,E:angles()+ang(90,90,0))
holoPos(14,entity():toWorld(vec(0,6.5,15.9)))
holoColor(14,vec(255,255,0))
holoScale(14,vec(0.2))
holoParent(14,E)
holoMaterial(14,"sprops/textures/sprops_cfiber2")
holoCreate(9)
holoModel(9,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(9,E)
holoAng(9,E:angles()+ang(vec(160,90,0)))
holoPos(9,entity():toWorld(vec(0,-3.7,-1.7)))
holoScale(9,vec(0.5))
holoColor(9,vec(255,255,0))
holoMaterial(9,"models/debug/debugwhite")
holoCreate(10)
holoModel(10,"models/sprops/misc/fittings/y_fitting_1_5_to_1_5.mdl")
holoParent(10,E)
holoAng(10,E:angles()+ang(vec(-200,-90,0)))
holoPos(10,entity():toWorld(vec(0,3.7,-1.7)))
holoScale(10,vec(0.5))
holoColor(10,vec(255,255,0))
holoMaterial(10,"models/debug/debugwhite")
holoCreate(12)
holoModel(12,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(12,E)
holoAng(12,E:angles()+ang(vec(0,0,0)))
holoPos(12,entity():toWorld(vec(-1,1,-6)))
holoScale(12,vec(0.5))
holoColor(12,vec(255,255,0))
holoMaterial(12,"models/debug/debugwhite")
holoCreate(13)
holoModel(13,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(13,E)
holoAng(13,E:angles()+ang(vec(0,0,0)))
holoPos(13,entity():toWorld(vec(-1,-1,-6)))
holoScale(13,vec(0.5))
holoColor(13,vec(255,255,0))
holoMaterial(13,"models/debug/debugwhite")
holoCreate(19)
holoModel(19,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(19,E)
holoAng(19,E:angles()+ang(vec(0,0,-45)))
holoPos(19,entity():toWorld(vec(0,-2,0)))
holoScale(19,vec(0.4))
holoColor(19,vec(255,255,0))
holoMaterial(19,"models/debug/debugwhite")
holoCreate(20)
holoModel(20,"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoParent(20,E)
holoAng(20,E:angles()+ang(vec(0,0,45)))
holoPos(20,entity():toWorld(vec(0,2,0)))
holoScale(20,vec(0.4))
holoColor(20,vec(255,255,0))
holoMaterial(20,"models/debug/debugwhite")
holoCreate(21)
holoModel(21,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(21,E)
holoAng(21,E:angles()+ang(vec(-90,-90,0)))
holoPos(21,entity():toWorld(vec(0,3.8,15.9)))
holoScale(21,vec(0.67))
holoColor(21,vec(255,255,0))
holoMaterial(21,"models/debug/debugwhite")
holoCreate(22)
holoModel(22,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(22,E)
holoAng(22,E:angles()+ang(vec(-90,-90,0)))
holoPos(22,entity():toWorld(vec(1.6,6.5,15.9)))
holoScale(22,vec(0.67))
holoColor(22,vec(255,255,255))
holoMaterial(22,"models/debug/debugwhite")
holoCreate(23)
holoModel(23,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(23,E)
holoAng(23,E:angles()+ang(vec(-90,-90,0)))
holoPos(23,entity():toWorld(vec(-1.6,6.5,15.9)))
holoScale(23,vec(0.67))
holoColor(23,vec(255,255,255))
holoMaterial(23,"models/debug/debugwhite")
holoCreate(24)
holoModel(24,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(24,E)
holoAng(24,E:angles()+ang(vec(-90,-90,0)))
holoPos(24,entity():toWorld(vec(0,6.5,17.6)))
holoScale(24,vec(0.67))
holoColor(24,vec(255,255,255))
holoMaterial(24,"models/debug/debugwhite")
holoCreate(25)
holoModel(25,"models/sprops/misc/domes/size_0/dome_3x1_5.mdl")
holoParent(25,E)
holoAng(25,E:angles()+ang(vec(-90,-90,0)))
holoPos(25,entity():toWorld(vec(0,6.5,13.9)))
holoScale(25,vec(0.67))
holoColor(25,vec(255,255,255))
holoMaterial(25,"models/debug/debugwhite")
holoCreate(15)
holoModel(15,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(15,E)
holoAng(15,E:angles()+ang(vec(-2,90,180)))
holoPos(15,entity():toWorld(vec(-1.2,5,8.8)))
holoScale(15,vec(0.9))
holoColor(15,vec(255,255,0))
holoMaterial(15,"models/debug/debugwhite")
holoCreate(16)
holoModel(16,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(16,E)
holoAng(16,E:angles()+ang(vec(-2,-90,180)))
holoPos(16,entity():toWorld(vec(-1.2,-5,8.8)))
holoScale(16,vec(0.9))
holoColor(16,vec(255,255,0))
holoMaterial(16,"models/debug/debugwhite")
holoCreate(17)
holoModel(17,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(17,E)
holoAng(17,E:angles()+ang(vec(-3,90,180)))
holoPos(17,entity():toWorld(vec(-0.9,5,8.8)))
holoScale(17,vec(0.7))
holoColor(17,vec(150,150,0))
holoMaterial(17,"models/debug/debugwhite")
holoCreate(18)
holoModel(18,"models/sprops/geometry/t_qdisc_12.mdl")
holoParent(18,E)
holoAng(18,E:angles()+ang(vec(-3,-90,180)))
holoPos(18,entity():toWorld(vec(-0.9,-5,8.8)))
holoScale(18,vec(0.7))
holoColor(18,vec(150,150,0))
holoMaterial(18,"models/debug/debugwhite")

#"models/sprops/cylinders/size_1/cylinder_1_5x12.mdl"

}
#holoScale(1,vec(2,2,2))
#holoColor(1,vec(20,100,255))
#The colour follows the order of Red,Green,Blue.
#Vector can either be for scaling or colouring and ETC.
#For scaling: (Length, Breadth, Height)
#holoMaterial(1,"")
#holoPos(1,Chippos+vec(0,0,-30))
#holoModel(1,"models/props_wasteland/light_spotlight01_lamp.mdl")

#runOnTick(1)

E:setMass(50)
if ((E:pos()-owner():pos()):length()>200){
applyForce(((Target:pos()-E:pos()+vec(0,0,5))*2-E:vel())*E:mass()),lightColor(111,vec(0,0,0))}
if(Target:isUnderWater()){
applyForce(((Target:pos()-E:pos()+vec(0,0,5))*2-E:vel())*E:mass())}
if ((E:pos()-Target:pos()):length()<55){applyForce((E:pos()-E:pos())*3-E:vel()*E:mass())}
P = E:elevation(Target:pos()+vec(-50,0,0))
Y = E:bearing(Target:pos())
R = E:angles():roll()
Ang = (-ang(P,Y,R)*100)
if(Target:isOnGround()){E:applyAngForce(Ang + $Ang*5)}
if(Target:isUnderWater()){E:applyAngForce(Ang + $Ang*5)}

if((E:pos()-owner():pos()):length()>1000){E:applyAngForce(Target2:angles() - E:angles()*5)}

if(Target:isOnGround()==0){E:applyAngForce(Target2:angles() - E:angles()*5)}

if((E:pos()-owner():pos()):length()>1000){E:applyForce((E:pos()-E:pos())*3-E:vel()*E:mass())
    lightCreate(111)
    lightParent(111,E)
    lightColor(111,vec(255,255,0))
    lightBrightness(111,5)
    lightDistance(111,5)
    }

if(Target:isOnGround()==0){E:applyForce((E:pos()-E:pos())*3-E:vel()*E:mass())}
if(E:isUnderWater()){E:applyForce((E:pos()-E:pos()+vec(0,0,-10))*3-E:vel()*E:mass()),timer("drowning",3000)}
if(clk("drowning")){soundPlay(1,100,"ambient/water_splash1.wav"),timer("drown",7000)}
if(clk("drown")&E:isUnderWater()){holoDeleteAll(),soundStop(1,100),soundPlay(1,2000,"pikmin/pikmin_die.wav"),timer("dead",500)}
    if(clk("dead")){selfDestruct()}
    if(E:isOnFire()){E:applyForce((E:pos()-E:pos()+vec(10,0,-10))*3-E:vel()*E:mass()),timer("fire",3000)}
    if(clk("fire")){holoDeleteAll(),soundStop(1,100),soundPlay(1,2000,"pikmin/pikmin_die.wav"),timer("dead",500)}
    if(clk("dead")){selfDestruct()}



if(owner():keyAttack2()&Target:isCrouch()==0){applyForce(((Target2:pos()-E:pos())*5-E:vel())*E:mass())
    Fight=1}
if(Target:keyAttack2()&Target:isCrouch()){applyForce(((Target:aimPos()-E:pos())*3-E:vel())*E:mass()),Fight=1}
if(owner():keyAttack2()==0){Fight=0}
if(Fight&(E:pos()-Target2:pos()):length()<50){B:propBreak(),timer("Hit",750)}
if(clk("Hit")){B=propSpawn("models/props_junk/gascan001a.mdl",E:pos(),1)}
if(Target2:keyAttack1()&changed(Target2:keyAttack1())&Target2:aimEntity()==entity()&(entity():pos()-Target2:pos()):length() < 100){entity():soundPlay(1,100,""),timer("death",1000)}
if(clk("death")){selfDestruct()}
