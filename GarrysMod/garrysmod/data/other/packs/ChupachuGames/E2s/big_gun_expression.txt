@name Big Gun Expression
@inputs Enable EntId Plus Minus Eight
@outputs Forcer Fire1 Fire2 MulL MulT MulR MulB L:vector T:vector B:vector R:vector H_en H_rad H_mag J_en J_rad J_mag
@persist HovDist OwnerLoaded This:entity Owner:entity LstBear LstElev LstRoll LstPos:vector
if( first() )
{
    This = entity()
    Owner = This:owner()
    interval( 25 )
    OwnerLoaded = 0
    HovDist = 50
}
if( clk() )
{
    interval( 25 )
    
    if( Enable )
    {
        if( !OwnerLoaded  )
        {
            if( EntId > 0 )
            {
                Owner = entity(EntId)
                OwnerLoaded = 1
            }
        } else {
            if( Plus )
            {
                HovDist = HovDist + 5
            }
            if( Minus )
            {
                HovDist = HovDist - 5
            }
            Forcer = 0
            if( Eight )
            {
                Forcer = -100
            }
        
            if( Owner:isCrouch() )
            {
                Fire1 = !Fire1
                Fire2 = !Fire1
            }else{
                Fire1 = 0
                Fire2 = 0
            }
            SS = 4
            H_en = 1
            H_rad = 200
            H_mag = 100
            L = vec(0,0,0)
            R = vec(0,0,0)
            T = vec(0,0,0)
            B = vec(0,0,0)
            DesBear = Owner:eye():toAngle():yaw()
            DesElev = Owner:eye():toAngle():pitch()
            ErrBear = angnorm( This:forward():toAngle():yaw() - Owner:eye():toAngle():yaw() )
            ErrElev = angnorm( This:forward():toAngle():pitch() - Owner:eye():toAngle():pitch() )
            ErrRoll = This:angles():roll()
            DifRoll = ErrRoll - LstRoll
            DifElev = ErrElev - LstElev
            DifBear = ErrBear - LstBear
            LstRoll = ErrRoll
            LstBear = ErrBear
            LstElev = ErrElev
            
            L = L - (1*ErrBear+3*DifBear)*SS*This:forward()
            R = R + (1*ErrBear+3*DifBear)*SS*This:forward()
            
            T = T + (1*ErrElev+5*DifElev)*SS*This:forward()
            B = B - (1*ErrElev+5*DifElev)*SS*This:forward()
            
            L = L + (1*ErrRoll+3*DifRoll)*1.5*This:up()
            R = R - (1*ErrRoll+3*DifRoll)*1.5*This:up()
            
            DesPos = Owner:shootPos() + HovDist * Owner:eye()
            ErrPos = This:pos() - DesPos
            DifPos = ErrPos - LstPos
            LstPos = ErrPos
            
            L = L + (0.1*SS*ErrPos+1.5*SS*DifPos)
            R = R + (0.1*SS*ErrPos+1.5*SS*DifPos)
            T = T + (0.1*SS*ErrPos+1.5*SS*DifPos)
            B = B + (0.1*SS*ErrPos+1.5*SS*DifPos)
    
            MulL = L:length()
            MulT = T:length()
            MulR = R:length()
            MulB = B:length()
        }
    }else{
        OwnerLoaded = 0
        H_en = 1
        L = vec(0,0,0)
        R = vec(0,0,0)
        T = vec(0,0,0)
        B = vec(0,0,0)
    }
    
}
