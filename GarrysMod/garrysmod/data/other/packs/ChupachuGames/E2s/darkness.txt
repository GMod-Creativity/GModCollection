@name Darkness
@inputs 
@outputs Extrail EnergySphereDelay Winger2 M ZDefault Winger WingerEvolution Winger2Evolution EnergySphere:entity Shield:entity ShieldDelay PermamentAim:vector
@persist IsCrowbar
@trigger 
#M - Index of the hologram
interval(50)
if (duped()) {selfDestruct()}
if (first()) {ZDefault = 55
    owner():setMaterial("models/wireframe")
    owner():setColor(0,0,0)
#BladeMain
holoCreate(1)
holoModel(1,"cube")
holoScale(1,+vec(0.5,0.05,3))
holoColor(1,vec(0,0,0))
holoAng(1,owner():attachmentAng("anim_attachment_RH"))
holoPos(1,owner():attachmentPos("anim_attachment_RH"))
holoParentAttachment(1,owner(),"anim_attachment_RH")
holoMaterial(1,"models/wireframe")
holoPos(1,holoEntity(1):toWorld(vec(0,0,23)))
holoAng(1,holoEntity(1):toWorld(ang(0,0,0)))
#Bar
holoCreate(2)
holoModel(2,"cube")
holoScale(2,+vec(0.8,0.2,0.2))
holoColor(2,vec(0,0,0))
holoAng(2,owner():attachmentAng("anim_attachment_RH"))
holoPos(2,owner():attachmentPos("anim_attachment_RH"))
holoParentAttachment(2,owner(),"anim_attachment_RH")
holoMaterial(2,"models/wireframe")
holoPos(2,holoEntity(2):toWorld(vec(0,0,5)))
holoAng(2,holoEntity(2):toWorld(ang(0,0,0)))
#Handle
holoCreate(3)
holoModel(3,"hqcylinder2")
holoScale(3,+vec(0.1,0.1,0.8))
holoColor(3,vec(0,0,0))
holoAng(3,owner():attachmentAng("anim_attachment_RH"))
holoPos(3,owner():attachmentPos("anim_attachment_RH"))
holoParentAttachment(3,owner(),"anim_attachment_RH")
holoMaterial(3,"models/wireframe")
holoPos(3,holoEntity(3):toWorld(vec(0,0,1.2)))
holoAng(3,holoEntity(3):toWorld(ang(0,0,0)))
#BladeTop
holoCreate(4)
holoModel(4,"prism")
holoScale(4,+vec(0.5,0.05,0.5))
holoColor(4,vec(0,0,0))
holoAng(4,owner():attachmentAng("anim_attachment_RH"))
holoPos(4,owner():attachmentPos("anim_attachment_RH"))
holoParentAttachment(4,owner(),"anim_attachment_RH")
holoMaterial(4,"models/wireframe")
holoPos(4,holoEntity(4):toWorld(vec(0,0,43.9)))
holoAng(4,holoEntity(4):toWorld(ang(0,0,0)))
#Ex-trailer
holoCreate(5):setTrails(0,0,0,"trails/smoke",vec(0, 0, 0), 255)
holoScale(5, vec(0,0,0))
for (M=10, 30, 1) 
    {
    holoCreate(M):setTrails(1,20,1,"trails/smoke",vec(0, 0, 0), 255)
    holoScale(M, vec(0,0,0))   
     }
}
if(owner():weapon():type()=="weapon_crowbar"){
if (!WingerEvolution) {Winger-=5} else {Winger+=5} if (Winger<-4) {WingerEvolution=1} elseif (Winger>=0) {WingerEvolution=0}
for (M=10, 30, 1) 
{
    if (Winger>=0) {
    if ((M%10)<=4) {ZDefault+=Winger*(M%10)*1.25}
    if ((M%10)>4) {ZDefault+=Winger*(11-(M%10))}
} else{
    if ((M%10)<=4) {ZDefault+=Winger*(M%10)*1.25 ZDefault*=((Winger2)/45)}
    if ((M%10)>4) {ZDefault+=Winger*(11-(M%10)) ZDefault*=((Winger2)/45)}
}
    if (M<20&M>9) {holoPos(M, owner():pos()+vec(5*(M%10)*Winger2/30,0,(M%10)*(4-abs(4-(M%10)))+ZDefault):rotate(owner():angles():pitch(),owner():angles():yaw()+Winger2*2+180,owner():angles():roll()))}
    if (M<30&M>19) {holoPos(M, owner():pos()+vec(5*(M%10)*Winger2/30,0,(M%10)*(4-abs(4-(M%10)))+ZDefault):rotate(owner():angles():pitch(),owner():angles():yaw()-Winger2*2-180,owner():angles():roll()))}
    ZDefault=55
}
if (!owner():isOnGround()) {
if (Winger2>44) {Winger2Evolution = 0} if (Winger2<11) {Winger2Evolution = 1}
if (Winger2Evolution) {Winger2++} else {Winger2--}
} else {Winger2=20}
if (EnergySphereDelay==25) {hint("25", 1)} if (EnergySphereDelay==50) {hint("50", 1)} if (EnergySphereDelay==75) {hint("75", 1)} if (EnergySphereDelay==100) {hint("100", 1)} if (EnergySphereDelay==125) {hint("125", 1)} if (EnergySphereDelay==150) {hint("150", 1)} if (EnergySphereDelay==175) {hint("175", 1)} if (EnergySphereDelay==200) {hint("200", 1)} if (EnergySphereDelay==225) {hint("225", 1)} if (EnergySphereDelay==250) {hint("EX!", 1)}
if (owner():keyReload()&EnergySphereDelay>50) {
    EnergySphere:propBreak()
    PermamentAim = owner():aimPos()
    if (EnergySphereDelay<250) {
    EnergySphere = propSpawn("models/props_phx/ball.mdl", owner():shootPos()+((owner():aimPos()-owner():pos())/(owner():pos()-owner():aimPos()):length())*50, 0)
} else {
    EnergySphere = propSpawn("models/props_phx/cannonball.mdl", owner():shootPos()+((owner():aimPos()-owner():pos())/(owner():pos()-owner():aimPos()):length())*50, 0)
    Extrail = 1
}

    EnergySphere:setMass(50000)
    EnergySphere:setTrails(100,100,1,"trails/smoke",vec(0, 0, 0), 255)
    EnergySphere:setMaterial("models/wireframe")
    EnergySphereDelay = 0
}
if (EnergySphereDelay>249) {
holoEntity(5):setTrails(1,10,1,"trails/smoke",vec(0, 0, 0), 255)
holoPos(5, owner():pos()+vec(100-(random(200)),100-(random(200)),100-(random(200))))
}
if (Extrail) {
    holoPos(5, EnergySphere:pos()+vec(100-(random(200)),100-(random(200)),100-(random(200))))
} elseif (!Extrail) {holoEntity(5):setTrails(0,0,0,"trails/smoke",vec(0, 0, 0), 255)}
if (owner():keyUse()&ShieldDelay>25) {
      Shield=propSpawn("models/props_phx/construct/plastic/plastic_angle_360.mdl", owner():shootPos()+((owner():aimPos()-owner():shootPos())/(owner():shootPos()-owner():aimPos()):length())*100,(owner():shootPos()-owner():aimPos()):toAngle()+ang(90,0,0), 1)
      Shield:setMaterial("models/wireframe")
      Shield:setColor(0,0,0)
ShieldDelay = 0
}
if (ShieldDelay>23) {Shield:propBreak()}
EnergySphere:applyForce(((PermamentAim-EnergySphere:pos())*10-EnergySphere:vel())*EnergySphere:mass())
if ((EnergySphere:pos()-PermamentAim):length()<45) {
    EnergySphere:propBreak() 
    Extrail = 0
}
EnergySphereDelay++
ShieldDelay++
}
if(owner():weapon():type()=="weapon_crowbar" & !IsCrowbar){ #owner():weapon():type()=="weapon_crowbar|
    IsCrowbar = 1
    owner():weapon():setAlpha(0)
    holoAlpha(1,255)
    holoAlpha(2,255)
    holoAlpha(3,255)
    holoAlpha(4,255)
}

elseif(owner():weapon():type()!="weapon_crowbar" & IsCrowbar) {
    IsCrowbar = 0
    holoAlpha(1,0)
    holoAlpha(2,0)
    holoAlpha(3,0)
    holoAlpha(4,0)
}