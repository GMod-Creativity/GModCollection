
### ### ### ### ### ###
### Made By Perli55 ###
### ### ### ### ### ###
 
@name Tic-Tac-Toe
@inputs Pod1:wirelink Pod2:wirelink
@outputs Base:wirelink X Y Cur Set:array W T Ti First Ang
@outputs 
@model models/props_c17/FurnitureTable002a.mdl
interval(10)
if (duped()) {reset()}
if (first()) {
    print(4,"Wire Me To 2 Advanced Pod Controllers Which Are Marked To 2 Chairs")
    holoCreate(1,entity():pos()+vec(0,0,26),vec(3,5,1.4),entity():angles(),vec(255,255,255),"prism")
    holoCreate(2,entity():pos()+vec(0,0,56),vec(1.5,5.05,5),entity():angles())
    holoCreate(3,entity():pos()+vec(0,0,92),vec(1.49,5,1),entity():angles(),vec(255,255,255),"prism")
    holoCreate(4,entity():pos()+vec(9.18,0,56),vec(4.3,4.3,4.3),entity():angles()+ang(270,180,0),vec(255,255,255),"plane")
    holoCreate(5,entity():pos()+vec(-9.18,0,56),vec(4.3,4.3,4.3),entity():angles()+ang(0,90,270),vec(255,255,255),"plane")
    holoCreate(6,entity():pos()+vec(-9,0,47),vec(0.1,4.3,0.1),entity():angles()+ang(45,0,0)) 
    holoCreate(7,entity():pos()+vec(-9,0,65),vec(0.1,4.3,0.1),entity():angles()+ang(45,0,0)) 
    holoCreate(8,entity():pos()+vec(-9,-9,56),vec(0.1,4.3,0.1),entity():angles()+ang(0,45,90)) 
    holoCreate(9,entity():pos()+vec(-9,9,56),vec(0.1,4.3,0.1),entity():angles()+ang(0,45,90)) 
    holoCreate(10,entity():pos()+vec(-10,0,56),vec(0.8,0.8,0.8),entity():angles()+ang(270,0,0),vec(0,255,0),"pyramid") 
    holoCreate(11,entity():pos()+vec(-9,18,74),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(12,entity():pos()+vec(-9,0,74),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(13,entity():pos()+vec(-9,-18,74),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(14,entity():pos()+vec(-9,18,56),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(15,entity():pos()+vec(-9,0,56),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(16,entity():pos()+vec(-9,-18,56),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(17,entity():pos()+vec(-9,18,38),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(18,entity():pos()+vec(-9,0,38),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(19,entity():pos()+vec(-9,-18,38),vec(0.6,1,1),entity():angles(),vec(),"hqsphere") 
    holoCreate(20,entity():pos()+vec(-9,0,56),vec(0.3,0.3,4.7),entity():angles()+ang(),vec(0,255,0),"cylinder")
    holoMaterial(1,"models/xqm/coastertrack/special_station")
    holoMaterial(2,"models/xqm/cinderblock_tex")
    holoMaterial(3,"models/xqm/coastertrack/special_station") 
    holoMaterial(4,"models/effects/portalrift_sheet")
    holoMaterial(5,"models/props/cs_office/screen")#"models/props_canal/canalmap_sheet")
    holoMaterial(6,"phoenix_storms/bluemetal")
    holoMaterial(7,"phoenix_storms/bluemetal")
    holoMaterial(8,"phoenix_storms/bluemetal")
    holoMaterial(9,"phoenix_storms/bluemetal")
    holoMaterial(10,"models/xqm/lightlinesgb")
    holoParent(1,entity())
    holoParent(2,entity())
    holoParent(3,entity())
    holoParent(4,entity())
    holoParent(5,entity())
    holoParent(6,entity())
    holoParent(7,entity())
    holoParent(8,entity())
    holoParent(9,entity())
    holoParent(11,entity())
    holoParent(12,entity())
    holoParent(13,entity())
    holoParent(14,entity())
    holoParent(15,entity())
    holoParent(16,entity())
    holoParent(17,entity())
    holoParent(18,entity())
    holoParent(19,entity())
    holoEntity(10):setTrails(2,15,1.3,"trails/lol",vec(0,255,0),255)
    holoAlpha(11,0),holoAlpha(12,0),holoAlpha(13,0),holoAlpha(14,0),holoAlpha(15,0),holoAlpha(16,0)
    holoAlpha(17,0),holoAlpha(18,0),holoAlpha(19,0),holoAlpha(20,0)
    Set=array(-1,-2,-3,-4,-5,-6,-7,-8,-9)
    First=random(-1,1)
    }
if (changed(Pod1)|changed(Pod2)&First>0) {Base=Pod1}
if (changed(Pod1)|changed(Pod2)&First>1) {Base=Pod2}
if (changed(Pod2:entity("Entity"):driver())&!first()) {Pod2:entity("Entity"):hintDriver("Use W,A,S,D To Move And Mouse1 To Select",5)}
    elseif (changed(Pod1:entity("Entity"):driver())&!first()) {Pod1:entity("Entity"):hintDriver("Use W,A,S,D To Move And Mouse1 To Select",5)}
if (changed(Base:number("W"))&Y!=1&Base:number("W")) {Y++}
if (changed(Base:number("S"))&Y!=-1&Base:number("S")) {Y--}
if (changed(Base:number("A"))&X!=1&Base:number("A")) {X++}
if (changed(Base:number("D"))&X!=-1&Base:number("D")) {X--}
if (changed(W==1)&!first()) {Col=vec(0,0,255),Pod1:entity("Entity"):hintDriver("You Win :)",7)
    Pod2:entity("Entity"):hintDriver("You Lose :(",4)} 
elseif (changed(W==2)&!first()) {Col=vec(255,0,0),Pod2:entity("Entity"):hintDriver("You Win :)",7)
    Pod1:entity("Entity"):hintDriver("You Lose :(",4)} 
elseif (!W&Base:number("Mouse1")&Base==Pod1&Set:number(Cur)<1) 
        {Base=Pod2,Pod2:entity("Entity"):hintDriver("Your Turn Is Now!",2.4)
        holoAlpha(Cur+10,255),holoColor(Cur+10,vec(0,0,255)),Set:remove(Cur),Set:insertNumber(Cur,1)} 
elseif (!W&Base:number("Mouse1")&Base==Pod2&Set:number(Cur)<1) 
    {Base=Pod1,Pod1:entity("Entity"):hintDriver("Your Turn Is Now!",2.4)
    holoAlpha(Cur+10,255),holoColor(Cur+10,vec(255,0,0)),Set:remove(Cur),Set:insertNumber(Cur,2)}
if (X==-1&Y==-1) {Cur=9} elseif (X==-1&Y==0) {Cur=6} elseif (X==-1&Y==1) {Cur=3} elseif 
 (X==0&Y==-1) {Cur=8} elseif (X==0&Y==0) {Cur=5} elseif (X==0&Y==1) {Cur=2} elseif 
 (X==1&Y==-1) {Cur=7} elseif (X==1&Y==0) {Cur=4} elseif (X==1&Y==1) {Cur=1}
if (!W) {holoPos(10,entity():pos()+vec(-13,0,56)+vec(0,X*18,Y*18))}
if (Set:number(1)==Set:number(2)&Set:number(2)==Set:number(3)) {W=Set:number(1),holoAng(20,ang(0,0,90)),holoPos(20,entity():pos()+vec(-9,0,74)),holoAlpha(20,255)}
elseif (Set:number(4)==Set:number(5)&Set:number(5)==Set:number(6)) {W=Set:number(4),holoAng(20,ang(0,0,90)),holoAlpha(20,255)}
elseif (Set:number(7)==Set:number(8)&Set:number(8)==Set:number(9)) {W=Set:number(7),holoAng(20,ang(0,0,90)),holoPos(20,entity():pos()+vec(-9,0,38)),holoAlpha(20,255)}
elseif (Set:number(1)==Set:number(4)&Set:number(4)==Set:number(7)) {W=Set:number(1),holoPos(20,entity():pos()+vec(-9,18,56)),holoAlpha(20,255)}
elseif (Set:number(2)==Set:number(5)&Set:number(5)==Set:number(8)) {W=Set:number(2),holoAlpha(20,255)}
elseif (Set:number(3)==Set:number(6)&Set:number(6)==Set:number(9)) {W=Set:number(3),holoPos(20,entity():pos()+vec(-9,-18,56)),holoAlpha(20,255)}
elseif (Set:number(1)==Set:number(5)&Set:number(5)==Set:number(9)) {W=Set:number(1),holoScale(20,vec(0.3,0.3,6)),holoAng(20,ang(0,0,-45)),holoAlpha(20,255)}
elseif (Set:number(3)==Set:number(5)&Set:number(5)==Set:number(7)) {W=Set:number(3),holoScale(20,vec(0.3,0.3,6)),holoAng(20,ang(0,0,45)),holoAlpha(20,255)}
if (W) {T++}
if (!W&changed(Set:sum()==13)&!first()|!W&changed(Set:sum()==14)&!first()) {Pod1:entity("Entity"):hintDriver("It's a Tie",7)
    Pod2:entity("Entity"):hintDriver("It's a Tie",7)}
if (Set:sum()==13|Set:sum()==15) {Ti++}
if (T>150|Ti>60) {reset()}
