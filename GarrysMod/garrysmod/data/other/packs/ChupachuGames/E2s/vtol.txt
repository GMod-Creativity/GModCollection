@name MiniVtolMovementsDone
@inputs [E1 E2 E3]:entity Pod:wirelink
@outputs T1 T2 T3
@persist E:entity [A1 A2 A3]:angle P1 P R R1 Pitch Yaw Roll
runOnTick(1)

E = entity():isWeldedTo()

W = Pod["W",number]
A = Pod["A",number]
S = Pod["S",number]
D = Pod["D",number]
Sp = Pod["Space",number]
Sh = Pod["Shift",number]


A1 = ang(Pitch+(D-A)*45,Yaw,Roll)
A2 = ang(Pitch+(A-D)*45,Yaw,Roll)
A3 = ang(Pitch,Yaw,Roll)

    T1=-E:velL():z()+315+P1*3-R1+E:velL():y()/10+E:velL():x()/10+(W-S)*50+(D-A)*20+(Sp-Sh)*150
    T2=-E:velL():z()+315+P1*3+R1-E:velL():y()/10+E:velL():x()/10+(W-S)*50+(A-D)*20+(Sp-Sh)*150
    T3=-E:velL():z()+315-P1*3-E:velL():x()/10+(W-S)*50+(Sp-Sh)*150
    
    P=E:angles():pitch()*2
    P1=(P+$P*50)
    
    R=E:angles():roll()*2
    R1=(R+$R*5)
    
    V1 = E1:toLocal(rotationVector(quat(A1)/quat(E1))+E1:pos())
    E1:applyTorque((200*V1 - 25*E1:angVelVector())*E1:inertia())

    V2 = E2:toLocal(rotationVector(quat(A2)/quat(E2))+E2:pos())
    E2:applyTorque((200*V2 - 25*E2:angVelVector())*E2:inertia())

    V3 = E3:toLocal(rotationVector(quat(A3)/quat(E3))+E3:pos())
    E3:applyTorque((200*V3- 25*E3:angVelVector())*E3:inertia())
    
Pitch = E:angles():pitch()-E:velL():x()/10-P1/5+(W-S)*45
Yaw = E:angles():yaw()
Roll = E:angles():roll()

if(Pitch>45){Pitch=45}
if(Pitch<-45){Pitch=-45}