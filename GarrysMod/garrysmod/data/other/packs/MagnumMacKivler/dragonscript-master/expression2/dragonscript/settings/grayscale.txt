@name dragonscript/settings/grayscale
@persist #Whatever you need for custom cosmetic code to work!
function cosmeticAdd(){} 
function cosmeticSet(){}
function number cosmeticGet(){}
function cosmeticGetBone(){}
function cosmeticSetBone(){}
function cosmeticManipulate(){}
function cosmeticParent(){}
function cosmeticPos(){}
function cosmeticAng(){}
function cosmeticScale(){}
function cosmeticMaterial(){}
function cosmeticColor(){}
function cosmeticAlpha(){}
function cosmeticModel(){}
function cosmeticSkin(){}
function cosmeticClip(){}
function cosmeticSubMaterial(){}
function cosmeticBodyGroup(){}
function cosmeticDelete(){}
function number cosmeticFudge(){}
#include "dragonscript/cosmeticlib"
SettingsVersion = "2.2.0" #Don't touch this
    
#--Config Start!--
Prefix = "" #Additional name text that comes before the actual name, ignored by chat/search. Add spaces or newlines (\n) here.
Name = "Grayscale Sikseff" #What is the name of your dragon? This is used for chat and search functions.
Suffix = "\nThe Default Dragon" #Additional name text that comes after the actual name, ignored by chat/search. Add spaces or newlines (\n) here.

Sex = 0 #0 for Male, 1 for Female
Scale = 1 #Scale factor: 1 for Adult.
Baby = 0 #Adjusts eye and body scale. 0 = Adult, 1 = Baby Eyes + Baby Scale (0.5), 2 = Baby Eyes (Set Scale Normally).

ColorBody = vec(255,255,255) #The color of the dragon's body
ColorWings = vec(143,143,143) #The color of the dragon's wings
Material = "sprops/textures/sprops_metal5" #The material used for the dragon's skin
BlushMat = Material #The material used for the dragon's rosy cheeks

ColorEye = vec(255) #The color of the "whites" of the eyes (the sclera)
ColorEyeLid = ColorBody*0.75 #The color for the dragon's eyelids. Normally a slightly darkened copy of the body color.
ColorPupil = vec(0,0,0) #The color of the pupils, best with black, works with some other colors
MatEye = "debug/debugdrawflat" #The material for the dragon's eyes (sclera).
MatEyeLid = Material #The material for the dragon's eyelids. Normally a copy of the skin material.
MatPupil = MatEye #The material for the dragon's pupils.

#You can put any custom code you like into this function. It runs every time the chip executes for any reason.
function void customConfigCode(){
}

#If you find that you have too many cosmetics, and that your dragon now tick quotas, you can use these functions to fix that.
#You just need to put your cosmetic code inside of these function blocks, and set their CosDelay variable to 1. (i.e CosDelay1 = 1)
#Don't just leave them at 1, it makes the dragon take longer to spawn.

CosDelay1 = 0
function void cosmeticDelay1(){
}
CosDelay2 = 0
function void cosmeticDelay2(){
}
CosDelay3 = 0
function void cosmeticDelay3(){
}



#[

----Cosmetic Guide----

Basic usage:

You can use these functions to add a cosmetic:
cosmeticAdd(Bone string | Bodypart string)
cosmeticAdd(Bone String | Bodypart String, Model String, Scale Vector, Position Vector, Angle Ang, Material String, Skin Number, Color Vector, Alpha Number)

As an example:
cosmeticAdd("Body")
cosmeticAdd("Head","models/player/items/engineer/veteran_hat.mdl",vec(1.4),vec(-3,0,1.3),ang(-7,0,0),"",0,vec(255),255)

You can find a list of bones/bodyparts/attachment points below.

You can them manipulate/change these cosmetics with a bunch of the functions below.
You only need to put them below the last cosmetic you've made or set.

Example, recreating the cosmetic from above:
cosmeticAdd("Head")
cosmeticModel("models/player/items/engineer/veteran_hat.mdl")
cosmeticScale(vec(1.4))
cosmeticPos(vec(-3,0,1.3)
cosmeticAng(ang(-7,0,0))

Advanced Usage:

You can select the base holograms the dragon generates (such as the eyes, body, legs, etc) using the cosmeticSet functions.
cosmeticSet(Bodypart String)

Example:
cosmeticSet("Body")

You can then manipulate them just like any other cosmetic like shown above.

Very Scary Advanced Usage:

You can reparent the selected cosmetics, delete them, or even select the skeleton holograms of the dragon.

Example, which will delete the visible body of the dragon:
cosmeticSet("Body")
cosmeticDelete()

Example that will certainly cause complete chaos with the animations:
cosmeticSetBone("Body")
cosmeticParent("Head")

----Functions----

-----
Adds a new cosmetic with the specified parameters.
These functions return 0 if failed to add. Otherwise, they return the current HoloID.
The Bone/Bodypart argument takes from the list below - that is the holo on the dragon they parent to.
-----
function number cosmeticAdd(Bone:string | Bodypart:string,Model:string,Scale:vector,Pos:vector,Ang:angle,Mat:string,Skin:number,Color:vector,Alpha:number)
function number cosmeticAdd(Bone:string | Bodypart:string) | The resulting holo will be a generic cube - use the below functions to change it.
function number cosmeticAdd(HoloID:number) | You can add a cosmetic based off a specific HoloID - this is dangerous but allowed.

----
Sets the current cosmetic to something else - such as a body holo! This allows you to edit them.
Bodypart set functions return 0 if they failed. The bone set funtions return -1 instead (due to 0 being a body holo).
Otherwise, they return they return the HoloID of the bone/bodypart.
----
function number cosmeticSet(Bodypart:string) | Sets the current cosmetic to a bodypart of the dragon.
function number cosmeticSetBone(Bone:string) | Sets the current cosmetic to a bone on the dragon. This can cause chaos.
function number cosmeticSet(HoloID:number) | Lets you select a SPECIFIC hologram ID.

---- Sets the parent of the currently selected cosmetics.
function void cosmeticParent(Bone:string | Bodypart:string)
function void cosmeticParent(HoloID:number)

---- Manipulates the currently selected cosmetic, like the model, color, etc.
function void cosmeticManipulate(Model:string,Scale:vector,Pos:vector,Ang:angle,Mat:string,Skin:number,Color:vector,Alpha:number)
function void cosmeticPos(Pos:vector)
function void cosmeticAng(Ang:angle)
function void cosmeticScale(Scale:vector)
function void cosmeticMaterial(Material:string)
function void cosmeticColor(Color:vector)
function void cosmeticColor(Color:vector4)
function void cosmeticAlpha(Alpha:number)
function void cosmeticModel(Model:string)
function void cosmeticSkin(Skin:number)
function void cosmeticClip(Pos:vector,Axis:vector)
function void cosmeticSubMaterial(Index:number,Material:string)
function void cosmeticBodyGroup(Group:number, Sel:number)

---- Deletes the currently selected cosmetic. Much more useful for body holos and the like.
function void cosmeticDelete()

----Bones and Bodyparts List----

Bone List:
    Body
    Neck
    Head
    LeftPupil
    RightPupil
    LeftShoulder
    LeftElbow
    LeftFrontFoot
    RightShoulder
    RightElbow
    RightFrontFoot
    LeftHip
    LeftKnee
    LeftRearFoot
    RightHip
    RightKnee
    RightRearFoot
    Tail | Tail Bone
    Tail1 | Tail Segment 1
    Tail2 | Tail Segment 2
    Tail3 | Tail Segment 3
    Tail4 | Tail Segment 4
    LeftWingJoint
    LeftHand1
    LeftHand2
    LeftHand3
    RightWingJoint
    RightHand1
    RightHand2
    RightHand3
    Lantern
    
Body List:

    Body
    Neck
    NeckCone
    
    HeadMain
    Cheeks | Cheek
    Snout | Nose
    LeftTooth
    RightTooth
    LeftBrow
    RightBrow
    LeftNostril
    RightNostril
    LeftHorn
    RightHorn
    
    LeftEye
    LeftEyeLid
    LeftPupil
    LeftEyeLashL
    LeftEyelashM
    LeftEyeLastR
    
    RightEye
    RightEyeLid
    RightPupil
    RightEyelashL
    RightEyelashM
    RightEyelashR
    
    Jaw | Lip
    Tongue
    LeftLowerTooth
    RightLowerTooth
    
    LeftShoulder
    RightShoulder
    
    LeftHumerus
    RightHumerus
    LeftThigh | LeftHaunch
    RightThigh | RightHaunch
    
    LeftElbow
    RightElbow
    LeftKnee
    RightKnee
    
    LeftForearm
    RightForearm
    LeftShin
    RightShin
    
    FrontLeftFoot | FrontLeftPaw
    FrontLeftClawL
    FrontLeftClawM
    FrontLeftClawR
    
    FrontRightFoot | FrontRightPaw
    FrontRightClawL
    FrontRightClawM
    FrontRightClawR
    
    RearLeftFoot | RearLeftPaw
    RearLeftClawL
    RearLeftClawM
    RearLeftClawR
    
    RearRightFoot | RearRightPaw
    RearLeftClawL
    RearLeftClawM
    RearLeftClawR
    
    Tail1
    Tail2
    Tail3
    Tail4
    
    LeftWingJoint
    LeftWingCorner
    LeftWingRib1
    LeftWingRib2
    LeftWingRib3
    LeftWingRib4
    
    LeftWingPlane1
    LeftWingPlane2
    LeftWingPlane3
    
    RightWingJoint
    RightWingCorner
    RightWingRib1
    RightWingRib2
    RightWingRib3
    RightWingRib4
    
    RightWingPlane1
    RightWingPlane2
    RightWingPlane3
    
    Lantern
    FireBall
]#
