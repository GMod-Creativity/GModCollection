@name Autominer(Habitable)
@inputs Energy MaxEnergy Ore MaxOre Result
@inputs On Return Selected:array
@inputs InSeat Plug:string
@outputs Mine Jump Vec:vector Scan
@outputs EPerc OPerc
@persist Done Home:vector Tele:wirelink GenCycle
interval(1000)
if(first()|dupefinished()){
    Jump=0,Scan=0,Done=0,GenCycle=1
    Home=entity():isWeldedTo():pos()
    Tele=entity():isWeldedTo():wirelink()
}
if(On==0|Energy<1000|Ore==MaxOre){Mine=0,Scan=0}
if(On==1&Energy>1000&Ore<MaxOre){
    if(Result>0){Mine=1}
    else{Mine=0}
    Scan=1
}
if(Return){timer("Homedelay", 5000)}
if(Ore==MaxOre|Return){Vec=Home,Done=1}
else{Done=0}
if(!Result&On&!Done&Selected:entity(1):pos()!=vec(0,0,0)&Plug=="Unplugged"&InSeat){
    Jump=!Jump
    Vec=Selected:entity(1):pos() - vec(0,600,0)
}
elseif(!Result&On&!Done&Selected:entity(1):pos()==vec(0,0,0)&Selected:entity(2):pos()==vec(0,0,0)&Plug=="Unplugged"&InSeat){
    Jump=!Jump
    findByClass("sa_asteroid")
    Vec=find():pos() - vec(0,1000,0)
}
elseif(Done==1&entity():isWeldedTo():pos()!=Home&Plug=="Unplugged"&InSeat){Jump=!Jump}
elseif(clk("Homedelay")&entity():isWeldedTo():pos()!=Home){Jump=1}
else{Jump=0}

Tele["Jump", number]=Jump
Tele["TargetPos", vector]=Vec 

EPerc=Energy/MaxEnergy
OPerc=Ore/MaxOre
