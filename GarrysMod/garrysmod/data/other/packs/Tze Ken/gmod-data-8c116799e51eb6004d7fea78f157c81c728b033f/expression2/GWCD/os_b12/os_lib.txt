@name Lib
@inputs Group:string
@outputs
@persist Cmd:string Cmd2:string Running Count CCmd:string Params:string CCmd2:string Params2:string
interval(200)

#Listings of one command at a time and the code that handles them
#Variable Running - Used for functions that require running more than once (loops)
#Variable Count - Used as a counter for any function that utilizes Running

#New CPU - You can now handle capitals. While the CCmd and CCmd2 values are auto lowercased, you can remove that line if you desire

#LIBRARY LIB
#This library will not respond to any calls made to it because it won't find a function
#It will always look, because this is a template for developers, however it should be understood
#that it will *never* reply. Not replying with the new CPU means that it didn't find it.


if(Group != "")
{
    gSetGroup(Group)
    Cmd = gGetStr("Cmd")
    if((Cmd != "") | Running)
    {
        if(Cmd == "-endproc") #Clear all data
        {
            Running = 0
            CCmd = ""
            CCmd2 = ""
            Params = ""
            Params2 = ""
            Cmd2 = ""
            Count = 0
        }
        if(Cmd != "")
        {
            CCmd = Cmd:left(Cmd:find(" ") - 1) #Finds the -<command> part of -<command> <parameters>
            CCmd = CCmd:lower()
            Params = Cmd:right(Cmd:length() - Cmd:find(" ")) #Finds the <parameters> part of -<command> <parameters> This is not (necessarily) lowercase by defualt!
            Running = 0
        }
        if(Cmd2 != "")
        {
            CCmd2 = Cmd2:left(Cmd2:find(" ") - 1) #Finds the -<command> part of -<command> <parameters>
            CCmd2 = CCmd2:lower()
            Params2 = Cmd2:right(Cmd2:length() - Cmd2:find(" ")) #Finds the <parameters> part of -<command> <parameters> This is not (necessarily) lowercase by defualt!
        }    
        if(CCmd == "-WONTRUN") #Remove this if you use this library as a template.
        {
            #This command won't run because capitals are not accepted in the command's name
        }
        elseif(Running == 0) #Clear data when no command is found/running
        {
            Cmd2 = ""
            CCmd = ""
            CCmd2 = ""
            Params = ""
            Params2 = ""
            Count = 0
        }
    }
}
