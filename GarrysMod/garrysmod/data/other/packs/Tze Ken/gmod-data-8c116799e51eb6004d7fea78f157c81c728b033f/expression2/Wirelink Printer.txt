@name Wirelink Print Program
@inputs Screen:wirelink Toggle E:entity
@outputs ID Type:string Model:string Name:string SteamID:string Pos:vector Health Armor Mass Alive
@persist Line0:string Line1:string Line2:string Line3:string Line4:string Line5:string Line6:string Line7:string Line8:string Line9:string Line10:string Line11:string Line12:string Line13:string Line14:string Line15:string Line16:string Line17:string
@persist Count Color On

if(~Toggle&Toggle){On=!On}
interval(1)

Name=E:name()
Type=E:type()
Model=E:model()
SteamID=E:steamID()
Pos=E:pos()
Health=E:health()
Armor=E:armor()
Alive=E:isAlive()
Mass=E:mass()
Color=111099

Line0 = "Subject:"+Name
Line1 = "Type:"+Type
Line2 = "Model:"
Line3 = Model
if(Alive==1){Line4 = "Status:Alive"}
if(Alive==0){Line4 = "Status:Dead"}
Line5 = "SteamID:"+SteamID
Line6 = "Health:"+(toString(Health))
Line7 = "Armor:"+(toString(Armor))
Line8 = "PosX:"+(toString(Pos:x()))
Line9 = "PosY:"+(toString(Pos:y()))
Line10 = "PosZ:"+(toString(Pos:z()))
Line11= "Mass:"+(toString(Mass))
Line12= ""
Line13= ""
Line14= ""
Line15= ""
Line16= ""
Line17= "End Of Report"


if(On){

Screen:writeCell(Count*2-2,toByte(Line0,Count)) # Write line 1 to Screen
Screen:writeCell(Count*2-1,Color)

Screen:writeCell(Count*2-2+60,toByte(Line1,Count)) # Write line 2 to Screen
Screen:writeCell(Count*2-1+60,Color)

Screen:writeCell(Count*2-2+120,toByte(Line2,Count)) # Write line 3 to Screen
Screen:writeCell(Count*2-1+120,Color)

Screen:writeCell(Count*2-2+180,toByte(Line3,Count)) # Write line 4 to Screen
Screen:writeCell(Count*2-1+180,Color)

Screen:writeCell(Count*2-2+240,toByte(Line4,Count)) # Write line 5 to Screen
Screen:writeCell(Count*2-1+240,Color)

Screen:writeCell(Count*2-2+300,toByte(Line5,Count)) # Write line 6 to Screen
Screen:writeCell(Count*2-1+300,Color)

Screen:writeCell(Count*2-2+360,toByte(Line6,Count)) # Write line 7 to Screen
Screen:writeCell(Count*2-1+360,Color)

Screen:writeCell(Count*2-2+420,toByte(Line7,Count)) # Write line 8 to Screen
Screen:writeCell(Count*2-1+420,Color)

Screen:writeCell(Count*2-2+480,toByte(Line8,Count)) # Write line 9 to Screen
Screen:writeCell(Count*2-1+480,Color)

Screen:writeCell(Count*2-2+540,toByte(Line9,Count)) # Write line 10 to Screen
Screen:writeCell(Count*2-1+540,Color)

Screen:writeCell(Count*2-2+600,toByte(Line10,Count)) # Write line 11 to Screen
Screen:writeCell(Count*2-1+600,Color)

Screen:writeCell(Count*2-2+660,toByte(Line11,Count)) # Write line 12 to Screen
Screen:writeCell(Count*2-1+660,Color)

Screen:writeCell(Count*2-2+720,toByte(Line12,Count)) # Write line 13 to Screen
Screen:writeCell(Count*2-1+720,Color)

Screen:writeCell(Count*2-2+780,toByte(Line13,Count)) # Write line 14 to Screen
Screen:writeCell(Count*2-1+780,Color)

Screen:writeCell(Count*2-2+840,toByte(Line14,Count)) # Write line 15 to Screen
Screen:writeCell(Count*2-1+840,Color)

Screen:writeCell(Count*2-2+900,toByte(Line15,Count)) # Write line 16 to Screen
Screen:writeCell(Count*2-1+900,Color)

Screen:writeCell(Count*2-2+960,toByte(Line16,Count)) # Write line 17 to Screen
Screen:writeCell(Count*2-1+960,Color)

Screen:writeCell(Count*2-2+1020,toByte(Line17,Count)) # Write line 18 to Screen
Screen:writeCell(Count*2-1+1020,Color)

Count+=1
}
else{

Screen:writeCell(2041,1) # Reset Screen
Count=0
}

if(Count>30){
Count=0
}
