@name DarkRP HUD
@persist E:wirelink 
@outputs Find:array I Size DistEval LastCount
@trigger 
runOnTick(1)

function vector anchor(){
    #return entity():pos()
    return entity():owner():shootPos()
}

function void drawPlayer(){
    SizeL=Find[I, entity]:boxSize():x()
    DistEval=anchor():distance(Find[I, entity]:pos()) < 2000 ? anchor():distance(Find[I, entity]:pos())*2 : anchor():distance(Find[I, entity]:pos())/4
    
    E:egp3DTracker(I * 3, vec(0,0,0))
    E:egpParent(I * 3, Find[I, entity])    
    E:egpBox(I * 3 + 1, vec2(0, 0), vec2(5, 5) * egpScrW(owner()) / DistEval)
    E:egpParent(I * 3 + 1, I * 3)
    E:egpColor(I * 3 + 1, vec4(0,255,128,120))
    
    if(anchor():distance(Find[I, entity]:pos()) < 2000){
        E:egpText(I * 3 + 2, Find[I, entity]:name(), vec2(-E:egpSize(I * 3 + 1):x()/2,E:egpSize(I * 3 + 1):y()/2+2))
        E:egpFont(I * 3 + 2, "",14)
        E:egpParent(I * 3 + 2, I * 3)
        E:egpColor(I * 3 + 2, vec4(0,255,128,120))
    }
    else{
        E:egpRemove(I * 3 + 2)
    }
}

function void drawE2(){
    SizeL=Find[I, entity]:boxSize():x()
    DistEval=anchor():distance(Find[I, entity]:pos()) < 2000 ? anchor():distance(Find[I, entity]:pos())*2 : anchor():distance(Find[I, entity]:pos())/10
    
    E:egp3DTracker(I * 3, vec(0,0,0))
    E:egpParent(I * 3, Find[I, entity])    
    E:egpBox(I * 3 + 1, vec2(0, 0), vec2(SizeL, SizeL) * egpScrW(owner()) / DistEval)
    E:egpParent(I * 3 + 1, I * 3)
    E:egpColor(I * 3 + 1, vec4(255,0,0,120))
    
    if(anchor():distance(Find[I, entity]:pos()) < 2000){
        E:egpText(I * 3 + 2, "E2 "+Find[I, entity]:id(), vec2(-E:egpSize(I * 3 + 1):x()/2,E:egpSize(I * 3 + 1):y()/2+2))
        E:egpFont(I * 3 + 2, "",14)
        E:egpParent(I * 3 + 2, I * 3)
        E:egpColor(I * 3 + 2, vec4(255,0,0,120))
    }
    else{
        E:egpRemove(I * 3 + 2)
    }
}

function void drawMoney(){
    SizeL=Find[I, entity]:boxSize():x()
    DistEval=anchor():distance(Find[I, entity]:pos()) < 2000 ? anchor():distance(Find[I, entity]:pos())*2 : anchor():distance(Find[I, entity]:pos())/4
    
    E:egp3DTracker(I * 3, vec(0,0,0))
    E:egpParent(I * 3, Find[I, entity])    
    E:egpBox(I * 3 + 1, vec2(0, 0), vec2(SizeL, SizeL) * egpScrW(owner()) / DistEval)
    E:egpParent(I * 3 + 1, I * 3)
    E:egpColor(I * 3 + 1, vec4(0,255,0,120))
    
    E:egpText(I * 3 + 2, Find[I, entity]:moneyAmount()+"$", vec2(-E:egpSize(I * 3 + 1):x()/2,E:egpSize(I * 3 + 1):y()/2+2))
    E:egpFont(I * 3 + 2, "",14)
    E:egpParent(I * 3 + 2, I * 3)
    E:egpColor(I * 3 + 2, vec4(0,255,0,120))

}

function void drawMoneyPrinter(){
    Type=Find[I, entity]:printerType():replace(" Money Printer","")
    if(Type=="Blue"){
        Color=vec4(0,0,200,120)
    }
    elseif(Type=="Yellow"){
        Color=vec4(180,180,0,120)
    }
    elseif(Type=="Green"){
        Color=vec4(0,200,0,120)
    }
    elseif(Type=="Red"){
        Color=vec4(200,0,0,120)
    }
    elseif(Type=="Gold"){
        Color=vec4(255,255,0,120)
    }
    elseif(Type=="Silver"){
        Color=vec4(255,255,255,120)
    }
    elseif(Type=="Crystal"){
        Color=vec4(0,255,255,120)
    }
    else{
        Color=vec4(100,100,100,120)
    }
    SizeL=Find[I, entity]:boxSize():x()
    DistEval=anchor():distance(Find[I, entity]:pos()) < 2000 ? anchor():distance(Find[I, entity]:pos())*2 : anchor():distance(Find[I, entity]:pos())/4
    
    E:egp3DTracker(I * 3, vec(0,0,0))
    E:egpParent(I * 3, Find[I, entity])    
    E:egpBox(I * 3 + 1, vec2(0, 0), vec2(5, 5) * egpScrW(owner()) / DistEval)
    E:egpParent(I * 3 + 1, I * 3)
    E:egpColor(I * 3 + 1, Color)
    
    E:egpText(I * 3 + 2, "Money Printer", vec2(-E:egpSize(I * 3 + 1):x()/2,E:egpSize(I * 3 + 1):y()/2+2))
    E:egpFont(I * 3 + 2, "",14)
    E:egpParent(I * 3 + 2, I * 3)
    E:egpColor(I * 3 + 2, Color)
}

function void findUpdate(){
    findInSphere(entity():pos(),1500000)
    Find=findToArray()
}


if(first()|dupefinished()){
    E=entity():isWeldedTo():wirelink()
    E:egpClear()
    findIncludeClass("player")
    findIncludeClass("gmod_wire_expression2")
    findIncludeClass("spawned_money")
    findIncludeClass("money_red_printer")
    findIncludeClass("money_green_printer")
    findIncludeClass("money_blue_printer")
    findIncludeClass("money_yellow_printer")
    findIncludeClass("money_silver_printer")
    findIncludeClass("money_gold_printer")
    findIncludeClass("money_crystal_printer")
    findIncludeClass("weed_plant")
    findIncludeClass("drugz_weed")
    findIncludeClass("eml_spot")
    findIncludeClass("eml_stove")
    findUpdate()
    I = 1
}

if(entity():owner():keyWalk()){
    E:egpClear()
    Find=array()
    findUpdate()
    I = 1
}

#Render Find
if(I <= Find:count()){
    if(Find[I, entity]:type()=="player"){
        drawPlayer()
    }elseif(Find[I, entity]:type()=="spawned_money"){
        drawMoney()
    }
    elseif(Find[I, entity]:type():find("printer")){
        drawMoneyPrinter()
    }
    elseif(Find[I, entity]:type()=="gmod_wire_expression2"){
        drawE2()
    }
    I++
    LastCount=Find:count()
}
else{
    E:egpRemove(I * 3)
    E:egpRemove(I * 3 + 1)
    E:egpRemove(I * 3 + 2)
    I++
    findUpdate()
}

#Find Update
if(Find:count()!=LastCount|I>80){
    I = 1
}
