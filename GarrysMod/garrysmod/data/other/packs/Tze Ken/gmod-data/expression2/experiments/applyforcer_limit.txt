@name Applyforce Limit
@outputs Start:vector End:vector Cycle Length Force:vector
@model models/hunter/blocks/cube025x025x025.mdl

function void maintainPosAng(Entity:entity, TargetPos:vector){
    Entity:propFreeze(0)
    Entity:noCollideAll(1)
    Entity:enableGravity(0)
    Entity:setMass(50000)
    Force=(TargetPos-Entity:pos())*10 - Entity:vel()
    Force *=Entity:mass()
    Entity:applyForce(clamp(Force,0,100000000))
}


function array generateEvenlySpacedPath(Source:vector, Destination:vector, Spacing:number) {
    Direction = (Destination - Source):normalized()
    Distance = Destination:distance(Source)
    NumberRequired = Distance/Spacing
    Positions = array()
    for(I=1, NumberRequired){
        Pos = Source + (Direction * I * Spacing)
        Positions:pushVector(Pos)
        holoCreate(3+I, Pos)
    }
    return Positions
}

if(first()){
    Cycle = 0
    Start = owner():pos() + vec(0,0,100)
    holoCreate(1, Start)
    End = entity():pos() + vec(0,0,100)
    holoCreate(2, End)
    
    generateEvenlySpacedPath(Start, End, 100)
}

interval(3000)
Cycle = !Cycle

event tick(){
    if(Cycle){
        Target = Start
    }
    else{
        Target = End
    }
    
    maintainPosAng(entity(),Target)
    
}
