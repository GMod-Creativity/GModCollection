@name Ice Status
@inputs EnergyW:wirelink Storage:wirelink RawIceStorage:wirelink
@inputs RefIceStorage:wirelink Cycle On IceType:string IceAmmount 
@persist E:wirelink 

if(first()|dupefinished()){
E=entity():isWeldedTo():wirelink()
}

DarkG=3000
Krys=2350
Geli=2250
White=2000
Glacial=1800
Glare=1200
Clear=800
Blue=800


interval(1000)
#RawIce Wirelink
GlareCrust = RawIceStorage["Raw_GlareCrust", number]
MaxGlareCrust = RawIceStorage["Raw_GlareCrustMax", number]
ClearIce = RawIceStorage["Raw_ClearIce", number]
MaxClearIce = RawIceStorage["Raw_ClearIceMax", number]
BlueIce = RawIceStorage["Raw_BlueIce", number]
MaxBlueIce = RawIceStorage["Raw_BlueIceMax", number]
GlacialMass = RawIceStorage["Raw_GlacialMass", number]
MaxGlacialMass = RawIceStorage["Raw_GlacialMassMax", number]
WhiteGlaze = RawIceStorage["Raw_WhiteGlaze", number]
MaxWhiteGlaze = RawIceStorage["Raw_WhiteGlazeMax", number]
Gelidus = RawIceStorage["Raw_Gelidus", number]
MaxGelidus = RawIceStorage["Raw_GelidusMax", number]
Krystallos = RawIceStorage["Raw_Krystallos", number]
MaxKrystallos = RawIceStorage["Raw_KrystallosMax", number]
DarkGlitter = RawIceStorage["Raw_DarkGlitter", number]
MaxDarkGlitter = RawIceStorage["Raw_DarkGlitterMax", number]
#RefIce Wirelink
RefGlareCrust = RefIceStorage["Refined_GlareCrust", number]
RefMaxGlareCrust = RefIceStorage["Refined_GlareCrustMax", number]
RefClearIce = RefIceStorage["Refined_ClearIce", number]
RefMaxClearIce = RefIceStorage["Refined_ClearIceMax", number]
RefBlueIce = RefIceStorage["Refined_BlueIce", number]
RefMaxBlueIce = RefIceStorage["Refined_BlueIceMax", number]
RefGlacialMass = RefIceStorage["Refined_GlacialMass", number]
RefMaxGlacialMass = RefIceStorage["Refined_GlacialMassMax", number]
RefWhiteGlaze = RefIceStorage["Refined_WhiteGlaze", number]
RefMaxWhiteGlaze = RefIceStorage["Refined_WhiteGlazeMax", number]
RefGelidus = RefIceStorage["Refined_Gelidus", number]
RefMaxGelidus = RefIceStorage["Refined_GelidusMax", number]
RefKrystallos = RefIceStorage["Refined_Krystallos", number]
RefMaxKrystallos = RefIceStorage["Refined_KrystallosMax", number]
RefDarkGlitter = RefIceStorage["Refined_DarkGlitter", number]
RefMaxDarkGlitter = RefIceStorage["Refined_DarkGlitterMax", number]
#Other WireLinks
Energy = EnergyW["Energy", number]
MaxEnergy = EnergyW["EnergyMax", number]
Oxygen = Storage["Oxygen", number]
MaxOxygen = Storage["OxygenMax", number]
Ice = Storage["Ice", number]
MaxIce = Storage["IceMax", number]
Steam = Storage["Steam", number]
MaxSteam = Storage["SteamMax", number]
#Title
E:egpClear()
E:egpRoundedBox(1,vec2(256,40),vec2(450,50))
E:egpColor(1,vec(50,50,50))
E:egpText(2,"Ice Status",vec2(80,30))
E:egpColor(2,vec(0,0,0))
E:egpSize(2,30)
E:egpText(3,"Ice Status",vec2(75,15))
E:egpSize(3,45)
E:egpRoundedBox(4,vec2(256,281),vec2(450,410))
E:egpColor(4,vec(50,50,50))
#Left Stats
E:egpText(5, "Glare Crust: ", vec2(40,110))
E:egpText(6,GlareCrust + "/" + MaxGlareCrust, vec2(150,110))
E:egpText(7, "Clear Ice: ", vec2(40,80))
E:egpText(8,ClearIce + "/" + MaxClearIce, vec2(150,80))
E:egpText(9, "BlueIce: ", vec2(40,95))
E:egpText(10,BlueIce + "/" + MaxBlueIce, vec2(150,95))
E:egpText(11, "Glacial Mass: ", vec2(40,125))
E:egpText(12,GlacialMass + "/" + MaxGlacialMass, vec2(150,125))
E:egpText(13, "White Glaze: ", vec2(40,140))
E:egpText(14,WhiteGlaze + "/" + MaxWhiteGlaze, vec2(150,140))
E:egpText(15, "Gelidus: ", vec2(40,155))
E:egpText(16,Gelidus + "/" + MaxGelidus, vec2(150,155))
E:egpText(17, "Krystallos: ", vec2(40,170))
E:egpText(18,Krystallos + "/" + MaxKrystallos, vec2(150,170))
E:egpText(19, "Dark Glitter: ", vec2(40,185))
E:egpText(20,DarkGlitter + "/" + MaxDarkGlitter, vec2(150,185))
E:egpText(21, "Oxygen: ", vec2(40,200))
E:egpText(22,Oxygen + "/" + MaxOxygen, vec2(150,200))
E:egpText(23, "Steam: ", vec2(40,215))
E:egpText(24,Steam + "/" + MaxSteam, vec2(150,215))
E:egpText(48, "Ice: ", vec2(40,230))
E:egpText(49,Ice + "/" + MaxIce, vec2(150,230))
E:egpText(25, "Ice Type: ", vec2(60,415))
E:egpText(47, IceType, vec2(70,450))
E:egpSize(25, 35)
E:egpSize(47, 30)
#Right Stats
E:egpText(31, "Refined Glare Crust: ", vec2(200,320))
E:egpText(32,RefGlareCrust + "/" + RefMaxGlareCrust, vec2(370,320))
E:egpText(33, "Refined Clear Ice: ", vec2(200,290))
E:egpText(34,RefClearIce + "/" + RefMaxClearIce, vec2(370,290))
E:egpText(35, "Refined BlueIce: ", vec2(200,305))
E:egpText(36,RefBlueIce + "/" + RefMaxBlueIce, vec2(370,305))
E:egpText(37, "Refined Glacial Mass: ", vec2(200,335))
E:egpText(38,RefGlacialMass + "/" + RefMaxGlacialMass, vec2(370,335))
E:egpText(39, "Refined White Glaze: ", vec2(200,350))
E:egpText(40,RefWhiteGlaze + "/" + RefMaxWhiteGlaze, vec2(370,350))
E:egpText(41, "Refined Gelidus: ", vec2(200,365))
E:egpText(42,RefGelidus + "/" + RefMaxGelidus, vec2(370,365))
E:egpText(43, "Refined Krystallos: ", vec2(200,380))
E:egpText(44,RefKrystallos + "/" + RefMaxKrystallos, vec2(370,380))
E:egpText(45, "Refined Dark Glitter: ", vec2(200,395))
E:egpText(46,RefDarkGlitter + "/" + RefMaxDarkGlitter, vec2(370,395))
E:egpText(51, "Ice Ammount: ", vec2(260,415))
E:egpText(50,IceAmmount+"", vec2(370,450))
E:egpSize(51, 35)
E:egpSize(50, 30)
Math = round((Energy/MaxEnergy)*360)
WedgeEnergy = 360 - Math
Math2 = round((Cycle)*3.6)
WedgeCycle = 360 - Math2


E:egpCircle(26,vec2(370,180),vec2(90,90))
E:egpColor(26,vec(25,25,25))

E:egpWedge(27,vec2(370,180),vec2(90,90))

E:egpSize(27,WedgeEnergy)
E:egpAngle(27,90)
E:egpColor(27,vec(25,205,25))

E:egpCircle(28,vec2(370,180),vec2(70,70))
E:egpColor(28,vec(25,25,25))

E:egpWedge(29,vec2(370,180),vec2(70,70))
E:egpSize(29,WedgeCycle)
E:egpAngle(29,90)

E:egpColor(27,vec(255,255,0))
E:egpColor(28,vec(200,100,0))
E:egpColor(29,vec(0,0,255))

E:egpCircle(30,vec2(370,180),vec2(45,45))
if(On){E:egpColor(30,vec(25,215,100))}
    else{E:egpColor(30,vec(75,75,75))}
    

