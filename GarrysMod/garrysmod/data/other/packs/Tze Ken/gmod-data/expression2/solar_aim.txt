@name Solar Aimer (II)
@inputs 
@outputs Sun:entity Panel:entity AimAng:angle PivotPos:vector
@persist Mode
@trigger 

if(first()|dupefinished()){
    findByClass("env_sun")
    Sun=find()
    if(entity():isWeldedTo():type()=="generator_energy_solar"){
        Panel=entity():isWeldedTo()
        AimAng = Panel:angles()
        hint("Constraint Mode",10)
    }
    elseif(ranger(200):hit()){
        Panel=ranger(200):entity()
        Mode=1
        hint("No Constraint Mode",10)
    }
    else{
        hint("No panel detected",10)
    }
    Panel:setMass(5000)
    entity():setMass(0)
    
}


interval(20)
AimAng=-(Sun:pos()-Panel:pos()):toAngle()+ang(-54.5,0,0)
Panel:applyAngForce(angnorm(-Panel:angles()-AimAng)*(Panel:boxSize():length()^2.6)-Panel:angVel()*(Panel:boxSize():length()^2.2))

#Non-constraint Mode
if(Mode==1){
    PivotPos=entity():pos()+entity():angles():up()*100
    Panel:applyForce(((PivotPos-Panel:pos())*40-Panel:vel())*Panel:mass())
}
