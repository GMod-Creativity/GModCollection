@name Entity Discovery Utils 2024
function array getPlayerEntityInRange(Player:entity, Class:string, Pos:vector, Range:number){
    findClearWhiteList()
    findIncludeClass(Class)
    findInSphere(Pos, Range)
    Result = array()
    foreach(I:number, Entity:entity=findToArray()){
        if(Entity:owner() == Player){
            Result:pushEntity(Entity)
        }
    }
    return Result
}

function array getOwnEntityInRange(Class:string, Pos:vector, Range:number){
    return getPlayerEntityInRange(owner(), Class, Pos, Range)
}

function array getPlayerEntity(Player:entity, Class:string){
    findByClass(Class)
    Result = array()
    foreach(I:number, Entity:entity=findToArray()){
        if(Entity:owner() == Player){
            Result:pushEntity(Entity)
        }
    }
    return Result
}

function array getOwnEntity(Class:string){
    return getPlayerEntity(owner(), Class)
}

function entity getOwnE2Contains(Name:string){
    foreach(I:number, Entity:entity=getOwnEntity("gmod_wire_expression2")){
        if(Entity:getName():find(Name)){
            return Entity
        }
    }
    return noentity()
}

function entity getFirstConnectedEntity(Root:entity, Class:string){
    foreach(I:number, Entity:entity=Root:getConnectedEntities()){
        if(Entity:type() == Class){
            return Entity
        }
    }
    return noentity()
}

function array joinEntityArrays(Array1:array, Array2:array){
    FinalArray = array()
    foreach(I:number, Entity:entity=Array1){
        FinalArray:pushEntity(Entity)
    }
    foreach(I:number, Entity:entity=Array2){
        FinalArray:pushEntity(Entity)
    }
    return FinalArray
}
