@name Tib Miner
@inputs Pod:wirelink Pad:entity R
@outputs CamLPos:vector CamActive Mine
@outputs WinchL Release
@persist X Y Z Pos:vector
@persist W A S D M1 M2 Shift Light Space Active
@trigger 

if(first()|dupefinished()){
    CamLPos=vec(40,0,50)
    X=Pad:pos():x()
    Y=Pad:pos():y()
    Z=-1000
    WinchL=20
}


interval(20)
#Pod Controller
W=Pod["W",number]
A=Pod["A",number]
S=Pod["S",number]
D=Pod["D",number]
M1=Pod["Mouse1",number]
M2=Pod["Mouse2",number]
Shift=Pod["Shift",number]
Light=Pod["Light",number]
Space=Pod["Space",number]
Active=Pod["Active",number]

#Main Body
Pos=vec(X,Y,Z)
Pad:applyForce(((Pos-Pad:pos())*40-Pad:vel())*Pad:mass())
Pad:setAng(ang(90,-90,-90))

#Controls
#Mine
if(Space){
    timer("delay",500)
}

if(clk("delay")){
    Mine=!Mine
}
if(!Active){
    Mine=0
}

#XY
if(!Shift){
    if(W){
        X+=5
    }
    if(S){
        X-=5
    }
    if(A){
        Y+=5
    }
    if(D){
        Y-=5
    }
}else{
    if(W){
        X+=20
    }
    if(S){
        X-=20
    }
    if(A){
        Y+=20
    }
    if(D){
        Y-=20
    }
}
if(!W&!A&!S&!D){
    Pad:propFreeze(1)
}
else{
    Pad:propFreeze(0)
}

#Winch
if(M1&WinchL<1000){
    WinchL+=10
}
if(M2&WinchL>20){
    WinchL-=10
}

#Storage Drop
if(Shift&Light){
    Release=1   
}
else{
    Release=0
}

#ViewMode
if(~R&R){
    CamActive=!CamActive
}
