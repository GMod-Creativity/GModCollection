@name Airstrike
@inputs 
@outputs 
@persist [Data FileName Name LoadName LoadNameP Bind1 Bind2 PropName NameP DataP]:string [LoadedProp Props Strikes PropIndex PropIndexC Settings Props2]:array 
@persist [LoadP AddNo Sticky Sticky2 StickyActivate] [Props3]:entity [Force]:vector
@persist [StrikeNo Radius Delay Height Loaded Rand Break Frequency SaveP Stop Save Load I LoadedP Alt]
@persist [Ranger]:ranger
@trigger 
interval(100)
runOnChat(1)
P = owner()
E = entity()
LS = P:lastSaid()
LSS = LS:explode(" ")
Rand = randint(500,5000)
if(first()){
    hint("type /help for help.",10)
    PropIndex[1,string] = "models/props_phx/mk-82.mdl"
    PropIndex[2,string] = "models/props_phx/amraam.mdl"
    PropIndex[3,string] = "models/props_phx/mk-82.mdl"
    PropIndex[4,string] = "models/props_phx/torpedo.mdl"
    PropIndex[5,string] = "models/props_phx/ww2bomb.mdl"
    PropIndex[6,string] = "models/props_phx/oildrum001_explosive.mdl"
    PropIndex[7,string] = "models/props_phx/misc/potato_launcher_explosive.mdl"
    PropIndex[8,string] = "models/props_phx/misc/flakshell_big.mdl"
    PropIndex[9,string] = "models/props_c17/oildrum001_explosive.mdl"
    PropIndex[10,string] = "models/props_junk/gascan001a.mdl"
    PropIndex[11,string] = "models/props_junk/propane_tank001a.mdl"
    Height = 10000
    Delay = 10
    Frequency = 0.5
    Stop = 25
    Bind1 = "i"
    Bind2 = "p"
    Radius = 1000
    AddNo = 0
    Data = ""
    function hide(){
            hideChat(1)
            printColor(vec(0,0,255),"[Hidden]",vec(random(0,255),random(0,255),random(0,255)),+P:name(),vec(255,255,255),": "+LS)
    }
}
Force = P:eye()
#help
if(chatClk(P)&LS == "/help"){
    hide()
    print("type /help for help.")
    print("Press i for airstrike.")
    print("Press p to stop airstrike.")
    print("type /height [number] to specify how high the bomb drop")
    print("type /delay [number] to specify how long until bomb drop")
    print("type /frequency [number] to specify how frequent bomb drop")
    print("type /radius [number] to specify the radius of bombs droping")
    print("Type /help2 for more help. SCROLL UP")
    
}
#/help2
if(chatClk(P)&LS == "/help2"){
    hide()
    print("-HELP SECOND PAGE-")
    print("type /help2 for help.")
    print("type /stop [number] to specify how long until bombs stop droping")
    print("type /save [name] to save your settings")
    print("type /load [name] to your load settings")
    print("type /settings to display your settings")
    print("type /bindstopstrike [letter] to bind your stop strike key")
    print("type /bindstrike [letter] to bind your air strike key")
    print("type /help3 for more help. SCROLL UP")
}
#/help2
if(chatClk(P)&LS == "/help3"){
    hide()
    print("-HELP THIRD PAGE-")
    print("type /help3 for help.")
    print("type /default to get back default settings")
    print("type /addprop to more props to airstrike with")
    print("type /sticky to make the grenade a sticky grenade (only sticks to props)")
    print("type /saveprop to save your proplist")
    print("type /loadprop to load your custom proplist")
}
#/height
if(chatClk(P)&LSS:string(1) == "/height"){
    hide()
    Height = LSS:string(2):toNumber()
    hint("The height at which the bombs spawn at is now: "+Height,10)
}
#/delay
if(chatClk(P)&LSS:string(1) == "/delay"){
    hide()
    Delay = LSS:string(2):toNumber()
    hint("The delay at which the bombs spawn is now: "+Delay+" seconds",10)
}
#/stop
if(chatClk(P)&LSS:string(1) == "/stop"){
    hide()
    Stop = LSS:string(2):toNumber()
    hint("The delay at which the bombs stop spawning is now: "+Stop+" seconds",10)
}
#/frequency
if(chatClk(P)&LSS:string(1) == "/frequency"){
    hide()
    Frequency = LSS:string(2):toNumber()
    hint("The frequency at which the bombs spawn at is now: "+Frequency+" second for every bomb",10)
}
#/bindstrike
if(chatClk(P)&LSS:string(1) == "/bindstrike"){
    hide()
    Bind1 = LSS:string(2)
    hint("The key to start an airstrike is now: "+Bind1,10)
}
#/bindstopstrike
if(chatClk(P)&LSS:string(1) == "/bindstopstrike"){
    hide()
    Bind2 = LSS:string(2)
    hint("The key to stop an airstrike is now: "+Bind2,10)
}
#/radius
if(chatClk(P)&LSS:string(1) == "/radius"){
    hide()
    Radius = LSS:string(2):toNumber()
    hint("The bomb dropping radius is now: "+Radius,10)
}
#/addprop
if(chatClk(P)&LSS:string(1) == "/addprop"){
    hide()
    AddNo++
    PropName = LSS:string(2)
    PropIndexC[AddNo,string] = PropName
    hint("Added prop: "+PropIndexC[AddNo,string],10)
}
#/settings
if(chatClk(P)&LS == "/settings"){
    hide()
    print("Stop Airstrike: "+Bind2)
    print("Air Strike: "+Bind1)
    print("Height: "+Height)
    print("Delay: "+Delay)
    print("Stop: "+Stop)
    print("Frequency: "+Frequency)
    print("Radius: "+Radius)
}
#/clear
if(chatClk(P)&LS == "/clear"){
    hide()
    hint("Cleared all added props!",10)
    PropIndexC:clear()
    AddNo = 0
}
#/sticky
if(chatClk(P)&LS == "/sticky"&!Sticky2){
    hide()
    hint("Type /sticky again to turn sticky grenades off.",10)
    Sticky = 1
    timer("Sticky",100)
}
if(clk("Sticky")){
    Sticky2 = 1
}
if(chatClk(P)&LS == "/sticky"&Sticky2){
    hide()
    Sticky = 0
    hint("Turned sticky grenade off.",10)
}
if(Sticky&StickyActivate){
    findIncludeClass("prop_*")
    findExcludePlayer(P)
    findInSphere(Props[-1000000,entity]:pos(),100)
    findSortByDistance(Props[-1000000,entity]:pos())
    if(find():pos():distance(Props[-1000000,entity]:pos())<10){
        weld(Props[-1000000,entity],find())
        Props[-1000000,entity]:propFreeze(1)
    }
} 
#/default
if(chatClk(P)&LS == "/default"){
    hide()
    hint("Settings are now default!",10)
    Height = 10000
    Delay = 10
    Frequency = 0.5
    Stop = 25
    Bind1 = "i"
    Bind2 = "p"
    Radius = 1000
}
#launching a air strike
if(changed(P:keyPressed(Bind1)) & P:keyPressed(Bind1)&!Props[-1000000,entity]){
    StrikeNo = 0
    Props:propDelete()
    Props:clear()
    StickyActivate = 1
    stoptimer("getridofbombandthenstopgettingridofthestupidbombsthatareintheskyandalsocodesomeluaforfunishouldalsomakethisinlua")
    Props[-1000000,entity] = propSpawn("models/props_phx2/garbage_metalcan001a.mdl",P:pos()+vec(0,0,60),ang(360),0)
    Props[-1000000,entity]:applyForce(Force*Rand)
    Props[-1000000,entity]:setTrails(10,10,5,"trails/smoke",vec(100,100,100),255)
    Props[-1000000,entity]:soundPlay(1,1,"weapons/ar2/ar2_altfire.wav")
#    lightCreate(1)
#    lightPos(1,Props[-1000000,entity]:pos())
#    lightParent(1,Props[-1000000,entity])
#    lightColor(1, vec(255,255,255))
    timer("strike",Delay*1000)
    hint("You have "+Delay+" second(s) to run.",10)
    timer("freezeprop",Delay*1000)
}elseif(Props & changed(P:keyPressed(Bind1)) & P:keyPressed(Bind1)){
    hint("You may only have 1 airstrike active.",10)
}
if(clk("freezeprop")){
    Props[-1000000,entity]:propFreeze(1)
    Props[-1000000,entity]:propNotSolid(1)
    Props[-1000000,entity]:setAlpha(0)
    Props[-1000001,entity] = propSpawn("models/props_phx/ww2bomb.mdl",Props[-1000000,entity]:pos(),ang(360),0)
    Props[-1000001,entity]:propBreak()
#    lightRemove(1)
}
if(clk("strike")){
    timer("strike",Frequency*1000)
    if(changed(StrikeNo == 1)&StrikeNo == 1){
        hint("Air strike taking effect.",10)
        Props[-1000000,entity]:soundPlay(1,1,"ambient/alarms/warningbell1.wav")
    }
    StrikeNo++
    Props[StrikeNo,entity] = propSpawn(PropIndex[randint(1,5),string],Props[-1000000,entity]:pos()+vec(random(-Radius,Radius),random(-Radius,Radius),Height),ang(90,90,90),0)
    if(randint(1,2)==1){
        Props[-StrikeNo,entity] = propSpawn(PropIndex[randint(6,11),string],Props[-1000000,entity]:pos()+vec(random(-Radius,Radius),random(-Radius,Radius),Height),ang(0),0)
}
    if(randint(1,2)==1){
        Props3 = propSpawn(PropIndexC[randint(1,AddNo),string],Props[-1000000,entity]:pos()+vec(random(-Radius,Radius),random(-Radius,Radius),Height),ang(0),0)
        if(Props3){
            Props2:pushEntity(Props3)
        } 
            
            
}
    timer("stopStrike",Stop*1000)
}
#stopping an airstrike
if(clk("stopStrike") | changed(P:keyPressed(Bind2))&P:keyPressed(Bind2) | !Props[-1000000,entity] & StrikeNo){
#    lightCreate(1)
#    lightRemove(1)
    StrikeNo = 0
    stoptimer("freezeprop")
    stoptimer("strike")
    stoptimer("stopStrike")
    Props[-1000000,entity]:propDelete()
    StickyActivate = 0
    hint("Airstrike done.",10)
    timer("getridofbombandthenstopgettingridofthestupidbombsthatareintheskyandalsocodesomeluaforfunishouldalsomakethisinlua",10000)
}
if(clk("getridofbombandthenstopgettingridofthestupidbombsthatareintheskyandalsocodesomeluaforfunishouldalsomakethisinlua")){
    Props:propDelete()
    Props:clear()
    Props2:propDelete()
    Props2:clear()
    hint("Bombs Cleared!",10)
}
#/save
if(chatClk(P)&LSS:string(1)=="/save"){
    hide()
    Save = 1
    Name = LSS:string(2)
    hint("Saving settings as: "+Name,10)
}
if(fileCanWrite()&Save){
    Data = Height+" "+Delay+" "+Frequency+" "+Stop+" "+Bind1+" "+Bind2+" "+Radius
    fileWrite(">e2shared/airstrike"+Name+".txt",Data)
    timer("stopsave",100)
}
if(clk("stopsave")){
    hint("Saved Data",10)
    Save = 0
    Data = ""
    Name = ""
}
#/load
if(chatClk(P)&LSS:string(1)=="/load"){
    hide()
    Load = 1
    LoadName = LSS:string(2)
    hint("Loading file: "+LoadName,10)
}
if(Load&fileCanLoad()){
    fileLoad(">e2shared/airstrike"+LoadName+".txt")
    if(changed(Load==1)&Load==1){
        hint("Loading settings...",10)
}
}
if(Load&fileLoaded()){
    Loaded = 1
    Settings = fileRead():explode(" ")
    Height = Settings[1,string]:toNumber()
    Delay = Settings[2,string]:toNumber()
    Frequency = Settings[3,string]:toNumber()
    Stop = Settings[4,string]:toNumber()
    Bind1 = Settings[5,string]
    Bind2 = Settings[6,string]
    Radius = Settings[7,string]:toNumber()
}
if(Loaded){
    if(changed(Loaded==1)&Loaded==1){
    hint("Settings Loaded!",10)
}
    Loaded = 0
    Load = 0
    LoadName = ""
}
#/saveprop
if(chatClk(P)&LSS:string(1)=="/saveprop"){
    hide()
    SaveP = 1
    NameP = LSS:string(2)
    hint("Saving props as: "+NameP,10)
}
if(fileCanWrite()&SaveP){
    while(I <= PropIndexC:count()){
        I++
        DataP = DataP + PropIndexC[I, string]+"|"
        timer("Alt",1000)
        if(Break){
            Break = 0
            break 
    }
}
    fileWrite(">e2shared/airstrikeprop"+NameP+".txt",DataP)
}
if(clk("Alt")){
    hint("Saved Props",10)
    SaveP = 0
    DataP = ""
    NameP = ""
    Break = 1
    I = 0
}
#/load
if(chatClk(P)&LSS:string(1)=="/loadprop"){
    hide()
    LoadP = 1
    LoadNameP = LSS:string(2)
    hint("Loading Props: "+LoadNameP,10)
}
if(LoadP&fileCanLoad()){
    fileLoad(">e2shared/airstrikeprop"+LoadNameP+".txt")
    if(changed(LoadP==1)&LoadP==1){
        hint("Loading Props...",10)
}
}
if(LoadP&fileLoaded()){
    LoadedP = 1
    LoadedProp = fileRead():explode("|")
    PropIndexC = LoadedProp
}
if(LoadedP){
    if(changed(LoadedP==1)&LoadedP==1){
    hint("Props Loaded!",10)
}
    LoadedP = 0
    LoadP = 0
    LoadNameP = ""
    AddNo = PropIndexC:count()
}
if(duped()){
    reset()
}
