@name Chat Encrypter
@inputs 
@outputs 
@persist [Key Alphabet LSS2 Alpha]:array [KeyA]:number [String]:string
@trigger 
interval(10)
runOnChat(1)
P = owner()
E = entity()
LS = P:lastSaid()
LSS = LS:explode(" ")
LSS2 = LS:explode(":")
Chat = chatClk(P)
if(first()){
    hint("type /help for help.",10)
    print("wire_expression2_concmd 1 must be enabled.")
    Alpha = "a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 ! @ # $ % 0":explode(" ")
    function hide(){
            hideChat(1)
            printColor(vec(0,255,0),"[Hidden]",vec(random(0,255),random(0,255),random(0,255)),+P:name(),vec(255,255,255),": "+LS)
    }
    LSS[2,string] = "8"
    LSS[3,string] = "12"
    LSS[4,string] = "3"
    LSS[5,string] = "5"
    LSS[6,string] = "9"
    LSS[7,string] = "2"
    LSS[8,string] = "4"
    LSS[9,string] = "6"
    LSS[10,string] = "7"
    LSS[11,string] = "10"
    LSS[12,string] = "1"
    LSS[13,string] = "13"
    LSS[14,string] = "11"
    LSS[15,string] = "15"
    LSS[16,string] = "17"
    LSS[17,string] = "14"
    LSS[18,string] = "20"
    LSS[19,string] = "16"
    LSS[20,string] = "19"
    LSS[21,string] = "18"
    LSS2[1,number] = LSS:string(2):toNumber()+20
    LSS2[2,number] = LSS:string(3):toNumber()+20
    LSS2[3,number] = LSS:string(4):toNumber()+20
    LSS2[4,number] = LSS:string(5):toNumber()+20
    LSS2[5,number] = LSS:string(6):toNumber()+20
    LSS2[6,number] = LSS:string(7):toNumber()+20
    LSS2[7,number] = LSS:string(8):toNumber()+20
    LSS2[8,number] = LSS:string(9):toNumber()+20
    LSS2[9,number] = LSS:string(10):toNumber()+20
    LSS2[10,number] = LSS:string(11):toNumber()+20
    LSS2[11,number] = LSS:string(12):toNumber()+20
    LSS2[12,number] = LSS:string(13):toNumber()+20
    LSS2[13,number] = LSS:string(14):toNumber()+20
    LSS2[14,number] = LSS:string(15):toNumber()+20
    LSS2[15,number] = LSS:string(16):toNumber()+20
    LSS2[16,number] = LSS:string(17):toNumber()+20
    LSS2[17,number] = LSS:string(18):toNumber()+20
    LSS2[18,number] = LSS:string(19):toNumber()+20
    LSS2[19,number] = LSS:string(20):toNumber()+20
    LSS2[20,number] = LSS:string(20):toNumber()+21
    LSS2[21,number] = LSS:string(20):toNumber()+22
    LSS2[22,number] = LSS:string(20):toNumber()+23
    Alphabet[LSS:string(2):toNumber(),string] = "a"
    Alphabet[LSS:string(3):toNumber(),string] = "b"
    Alphabet[LSS:string(4):toNumber(),string] = "c"
    Alphabet[LSS:string(5):toNumber(),string] = "d"
    Alphabet[LSS:string(6):toNumber(),string] = "e"
    Alphabet[LSS:string(7):toNumber(),string] = "f"
    Alphabet[LSS:string(8):toNumber(),string] = "g"
    Alphabet[LSS:string(9):toNumber(),string] = "h"
    Alphabet[LSS:string(10):toNumber(),string] = "i"
    Alphabet[LSS:string(11):toNumber(),string] = "j"
    Alphabet[LSS:string(12):toNumber(),string] = "k"
    Alphabet[LSS:string(13):toNumber(),string] = "l"
    Alphabet[LSS:string(14):toNumber(),string] = "m"
    Alphabet[LSS:string(15):toNumber(),string] = "n"
    Alphabet[LSS:string(16):toNumber(),string] = "o"
    Alphabet[LSS:string(17):toNumber(),string] = "p"
    Alphabet[LSS:string(18):toNumber(),string] = "q"
    Alphabet[LSS:string(19):toNumber(),string] = "r"
    Alphabet[LSS:string(20):toNumber(),string] = "s"
    Alphabet[LSS2:number(1),string] = "t"
    Alphabet[LSS2:number(2),string] = "u"
    Alphabet[LSS2:number(3),string] = "v"
    Alphabet[LSS2:number(4),string] = "w"
    Alphabet[LSS2:number(5),string] = "y"
    Alphabet[LSS2:number(6),string] = "x"
    Alphabet[LSS2:number(7),string] = "z"
    Alphabet[LSS2:number(8),string] = "1"
    Alphabet[LSS2:number(9),string] = "2"
    Alphabet[LSS2:number(10),string] = "3"
    Alphabet[LSS2:number(11),string] = "4"
    Alphabet[LSS2:number(12),string] = "5"
    Alphabet[LSS2:number(13),string] = "6"
    Alphabet[LSS2:number(14),string] = "7"
    Alphabet[LSS2:number(15),string] = "8"
    Alphabet[LSS2:number(16),string] = "9"
    Alphabet[LSS2:number(17),string] = "!"
    Alphabet[LSS2:number(18),string] = "@"
    Alphabet[LSS2:number(19),string] = "#"
    Alphabet[LSS2:number(20),string] = "$"
    Alphabet[LSS2:number(21),string] = "%"
    Alphabet[LSS2:number(22),string] = "0"
}
if(LS == "/help" & Chat){
    hide()
    print(_HUD_PRINTCENTER,"Help printed in chat.")
    print("/key [N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N,N] creates a key which can decrypt messages. N = Number.")
    print("The key must not contain repeating numbers. Key must only contain numbers from 1-20")
    print("An example of a key is: 2 3 1 5 9 8 4 6 7 10 12 13 11 15 17 14 20 16 19 18.")
    print("/e:[Message] encrypts your message.")
    print("/Example for an example.")
}
if(LS == "/example" & Chat){
    hide()
    print(_HUD_PRINTCENTER,"Example printed in chat.")
    print("/key 2 3 1 5 9 8 4 6 7 10 12 13 11 15 17 14 20 16 19 18")
    print("/e:Hello World!")
    print("Devoided(XninjazXxx): eellq yqqld9")
}
if(LSS:string(1) == "/key" & Chat){
    hide()
    hint("Key is now: "+LSS:string(2)+" "+LSS:string(3)+" "+LSS:string(4)+" "+LSS:string(5)+" "+LSS:string(6)+" "
    +LSS:string(7)+" "+LSS:string(8)+" "+LSS:string(9)+" "+LSS:string(10)+" "+LSS:string(11)+" "+LSS:string(12)+" "
    +LSS:string(13)+" "+LSS:string(14)+" "+LSS:string(15)+" "+LSS:string(16)+" "+LSS:string(17)+" "+LSS:string(18)
    +" "+LSS:string(19)+" "+LSS:string(20)+" "+LSS:string(21),10)
    LSS2[1,number] = LSS:string(2):toNumber()+20
    LSS2[2,number] = LSS:string(3):toNumber()+20
    LSS2[3,number] = LSS:string(4):toNumber()+20
    LSS2[4,number] = LSS:string(5):toNumber()+20
    LSS2[5,number] = LSS:string(6):toNumber()+20
    LSS2[6,number] = LSS:string(7):toNumber()+20
    LSS2[7,number] = LSS:string(8):toNumber()+20
    LSS2[8,number] = LSS:string(9):toNumber()+20
    LSS2[9,number] = LSS:string(10):toNumber()+20
    LSS2[10,number] = LSS:string(11):toNumber()+20
    LSS2[11,number] = LSS:string(12):toNumber()+20
    LSS2[12,number] = LSS:string(13):toNumber()+20
    LSS2[13,number] = LSS:string(14):toNumber()+20
    LSS2[14,number] = LSS:string(15):toNumber()+20
    LSS2[15,number] = LSS:string(16):toNumber()+20
    LSS2[16,number] = LSS:string(17):toNumber()+20
    LSS2[17,number] = LSS:string(18):toNumber()+20
    LSS2[18,number] = LSS:string(19):toNumber()+20
    LSS2[19,number] = LSS:string(20):toNumber()+20
    LSS2[20,number] = LSS:string(20):toNumber()+21
    LSS2[21,number] = LSS:string(20):toNumber()+22
    LSS2[22,number] = LSS:string(20):toNumber()+23
    Alphabet[LSS:string(2):toNumber(),string] = "a"
    Alphabet[LSS:string(3):toNumber(),string] = "b"
    Alphabet[LSS:string(4):toNumber(),string] = "c"
    Alphabet[LSS:string(5):toNumber(),string] = "d"
    Alphabet[LSS:string(6):toNumber(),string] = "e"
    Alphabet[LSS:string(7):toNumber(),string] = "f"
    Alphabet[LSS:string(8):toNumber(),string] = "g"
    Alphabet[LSS:string(9):toNumber(),string] = "h"
    Alphabet[LSS:string(10):toNumber(),string] = "i"
    Alphabet[LSS:string(11):toNumber(),string] = "j"
    Alphabet[LSS:string(12):toNumber(),string] = "k"
    Alphabet[LSS:string(13):toNumber(),string] = "l"
    Alphabet[LSS:string(14):toNumber(),string] = "m"
    Alphabet[LSS:string(15):toNumber(),string] = "n"
    Alphabet[LSS:string(16):toNumber(),string] = "o"
    Alphabet[LSS:string(17):toNumber(),string] = "p"
    Alphabet[LSS:string(18):toNumber(),string] = "q"
    Alphabet[LSS:string(19):toNumber(),string] = "r"
    Alphabet[LSS:string(20):toNumber(),string] = "s"
    Alphabet[LSS2:number(1),string] = "t"
    Alphabet[LSS2:number(2),string] = "u"
    Alphabet[LSS2:number(3),string] = "v"
    Alphabet[LSS2:number(4),string] = "w"
    Alphabet[LSS2:number(5),string] = "y"
    Alphabet[LSS2:number(6),string] = "x"
    Alphabet[LSS2:number(7),string] = "z"
    Alphabet[LSS2:number(8),string] = "1"
    Alphabet[LSS2:number(9),string] = "2"
    Alphabet[LSS2:number(10),string] = "3"
    Alphabet[LSS2:number(11),string] = "4"
    Alphabet[LSS2:number(12),string] = "5"
    Alphabet[LSS2:number(13),string] = "6"
    Alphabet[LSS2:number(14),string] = "7"
    Alphabet[LSS2:number(15),string] = "8"
    Alphabet[LSS2:number(16),string] = "9"
    Alphabet[LSS2:number(17),string] = "!"
    Alphabet[LSS2:number(18),string] = "@"
    Alphabet[LSS2:number(19),string] = "#"
    Alphabet[LSS2:number(20),string] = "$"
    Alphabet[LSS2:number(21),string] = "%"
    Alphabet[LSS2:number(22),string] = "0"
}

if(LSS2:string(1) == "e" & Chat){
    hide()
    String = LSS2:string(2):lower()
    for(I = 1, Alpha:count()){
        String = String:replace(Alpha[I,string], Alphabet[I+1,string])
    }
    timer("chat",1000)
    hint("Encoding/Decoding Chat!",10)
}
if(clk("chat")){
    concmd("say "+String)
}
