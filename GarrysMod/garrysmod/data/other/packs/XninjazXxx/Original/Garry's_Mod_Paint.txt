@name Garry's Mod Paint
@persist Red Blue Green Rainbow Alpha Ghost Ghost2 [MEMORY Find Ents Ents2]:array Rad Rad2 Find2:entity Chat Chat2 CC Rec
@persist Mode SelectNo Red2 Blue2 Green2 Rec2 Rec3
runOnTick(1)
runOnChat(1)
Ent = owner():aimEntity()
A = owner():lastSaid():explode(" ") 
A2 = owner():lastSaid():explode(" ") 
A3 = owner():lastSaid():explode(" ") 
A4 = owner():lastSaid():explode(" ") 
Modee = owner():lastSaid():explode(" ") 
Modee2 = owner():lastSaid():explode(" ") 
Modee3 = owner():lastSaid():explode(" ") 
Selection = owner():lastSaid():explode(" ") 
if(Mode == 1){
MEMORY[1, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 2){
MEMORY[2, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 3){
MEMORY[3, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 4){
MEMORY[4, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 5){
MEMORY[5, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 6){
MEMORY[6, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 7){
MEMORY[7, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 8){
MEMORY[8, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 9){
MEMORY[9, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 10){
MEMORY[10, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 11){
MEMORY[11, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 12){
MEMORY[12, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 13){
MEMORY[13, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 14){
MEMORY[14, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 15){
MEMORY[15, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 16){
MEMORY[16, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 17){
MEMORY[17, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 18){
MEMORY[18, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 19){
MEMORY[19, vector] = vec(Red2,Green2,Blue2)
}
if(Mode == 20){
MEMORY[20, vector] = vec(Red2,Green2,Blue2)
}
if(CC){
if(owner():keyReload()){
    Ents:pushEntity(Ent)
    Ent:setColor(Red,Green,Blue)
    Ent:setAlpha(Alpha)
} 
if(changed(owner():keyUse())&owner():keyUse()){
    Ents:pushEntity(Ent)
    Ent:setColor(Red,Green,Blue)
    Ent:setAlpha(Alpha) 
    hint("Number of props selected: "+ Ents:count():toString(),10)
}

if(chatClk(owner())){
if(A:string(1):lower() == "!red"){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
    hideChat(1)
    Red = (A:string(2)):toNumber()
    hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
    
}
if(A:string(1):lower() == "!red"&holoEntity(1)){
    holoColor(1,vec(Red,Green,Blue))

}
}
if(Red>255){
    Red = 255
}
if(Green>255){
    Green = 255
}
if(Blue>255){
    Blue = 255
}
if(chatClk(owner())){
if(A2:string(1):lower() == "!blue"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A2:string(1)+" "+A:string(2))
    Blue = (A2:string(2)):toNumber()
    hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
    if(Red>255){
    Red = 255
}
if(Green>255){
    Green = 255
}
if(Blue>255){
    Blue = 255
}
}
if(A:string(1):lower() == "!blue"&holoEntity(1)){
    holoColor(1,vec(Red,Green,Blue))
}
}
if(chatClk(owner())){
if(A3:string(1):lower() == "!green"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A3:string(1)+" "+A:string(2))
    Green = (A3:string(2)):toNumber()
    hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
    if(A:string(1):lower() == "!green"&holoEntity(1)){
    holoColor(1,vec(Red,Green,Blue))
}
}
    if(Red>255){
    Red = 255
}
if(Green>255){
    Green = 255
}
if(Blue>255){
    Blue = 255
}
}
if(Alpha>255){
    Alpha = 255
}
}
if(chatClk(owner())){
if(A:string(1):lower() == "!alpha"){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
    hideChat(1)
    Alpha = (A:string(2)):toNumber()
    hint("ALPHA: "+Alpha:toString(),10)
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!record"){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
    hint("Type !stop record to stop recording",10)
    hideChat(1)
    Rec = 1
    Rec3 = 1
    CC = 0
    timer("Rec2",100)
}
}
if(chatClk(owner())){
                if(owner():lastSaid() == "!stop record"){
                    hideChat(1)
                    printColor(vec(Red2,Green2,Blue2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
                    CC = 1
                    Rec2 = 0
                    Rec = 0
                    Rec3 = 0
                    hint("Stopped recording...",10)
        }
    }
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!clear"){
    Ents:clear()
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
    Red = 0
    Blue = 0
    Green = 0
    CC = 1
    stopAllTimers()
    holoColor(1, vec(0,0,0))
    stopAllTimers()
    owner():setColor(255,255,255)
    Ents2:clear()
    Ghost2 = 0
    Ghost = 0
    Rainbow = 0
    Rad = 0
    Rad2 = 0
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!color"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    holoCreate(1)
    holoPos(1,owner():pos()+vec(0,60,60))
    holoColor(1,vec(Red,Green,Blue))
    hint("Hologram spawned with the color.",10)
    if(holoEntity(1)&CC==0){
        holoColor(1,MEMORY[SelectNo, vector])
    }
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!chat"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    Chat = 1
    timer("Chat",100)
    hint("You are now chatting everyone in color.",10)
    hint("Type !chat again to turn this off.",10)
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!color self"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    owner():setColor(Red,Green,Blue)
    owner():setAlpha(Alpha)
    
}
if(owner():lastSaid():lower() == "!color self"&CC==0){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    owner():setColor(MEMORY[SelectNo, vector])
    owner():setAlpha(Alpha)
    
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!color self rainbow"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    timer("rainbow2",100)
    owner():setAlpha(Alpha)
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!undo"){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    owner():setColor(255,255,255)
    Ents:shiftEntity():setColor(255,255,255)
    Ents:shiftEntity():setAlpha(255)
    hint("Undid!",10)
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!remove"&Ent){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    Ent:setColor(255,255,255)
    Ent:setAlpha(255)
    hint("Color removed!.",10)
}
if(owner():lastSaid():lower() == "!remove"&!Ent){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    hint("Look at a prop and type !remove to get red of the color.",10)
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!rainbow"&!Rainbow){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    hint("select a prop multiple of times to make it flash colors!",5)
    hint("type !rainbow again to turn it off.",5)
    timer("rainbow",1)
    timer("rainbow3",100)
}
}
if(chatClk(owner())){
    if(owner():lastSaid():lower() == "!ghost"&!Ghost2){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    hint("type !ghost again to turn it off.",5)
    timer("ghost",100)
    Ghost = 1
}
}
if(chatClk(owner())){
if(owner():lastSaid():lower() == "!color sphere"&!Rad2){
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    hideChat(1)
    hint("type !color shpere again to turn it off.",5)
    timer("rad",100)
    Rad = 1
}
}
if(clk("rad")){
    Rad2 = 1
}
if(clk("rainbow")){
    timer("rainbow",50)
    holoColor(1,vec(Red, Blue, Green))
    Ents:shiftEntity():setColor(Red, Blue, Green)
    Red = round(random(0,255))
    Blue = round(random(0,255)) 
    Green = round(random(0,255))
}
if(clk("rainbow")&CC==0){
    timer("rainbow",50)
    holoColor(1,MEMORY[SelectNo, vector])
    Ents:shiftEntity():setColor(MEMORY[SelectNo, vector])
    Red2 = round(random(0,255))
    Blue2 = round(random(0,255)) 
    Green2 = round(random(0,255))
}
if(clk("ghost")){
    Ghost2 = 1
}
if(clk("rainbow2")){
    timer("rainbow2",50)
    owner():setColor(Red, Blue, Green)
    Red = round(random(0,255))
    Blue = round(random(0,255))
    Green = round(random(0,255))
}
if(clk("rainbow2")&CC==0){
    timer("rainbow2",50)
    owner():setColor(Red2, Blue2, Green2)
    Red2 = round(random(0,255))
    Blue2 = round(random(0,255))
    Green2 = round(random(0,255))
}

if(clk("rainbow3")){
    Rainbow = 1
}
if(Rainbow){
    if(chatClk(owner())){
    if(owner():lastSaid():lower() == "!rainbow"){
        printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
        hideChat(1)
        hint("No more rainbow :(.",10)
        hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
        stoptimer("rainbow")
        Rainbow = 0
    }
}
}
if(clk("Chat")){
    Chat2 = 1
}
if(clk("Rec2")){
    stoptimer("rec2")
    Rec2 = 1
}
if(Chat2){
    if(chatClk(owner())){
    if(owner():lastSaid():lower() == "!chat"){
    hideChat(1)
    printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+owner():lastSaid())
    Chat = 0
    Chat2 = 0
    hint("Stopped chatting in color.",10)
}
}
}
if(Chat){
    hint("This Function Is Being Developed...",10)
}
if(Ghost){
    if(Ent){
        Ents2:pushEntity(Ent)
    Ent:setAlpha(100)
}else{
    Ents2:shiftEntity():setAlpha(255)
    Ents2:clear()
}
}
if(Rad){
    findByClass("prop*")
    findSortByDistance(owner():pos())
    Find = findToArray()
    for(I = 1,Find:count()){
        Find2 = Find[I,entity]
    }
    if(Find2:pos():distance(owner():pos())<500){
        Find2:setColor(Red,Green,Blue)
        Find2:setAlpha(Alpha)
        if(Rad&CC==0){
        Find2:setColor(MEMORY[SelectNo, vector])
        Find2:setAlpha(Alpha)
        }
}
}

if(Rad2){
    if(chatClk(owner())){
    if(owner():lastSaid():lower() == "!color sphere"){
        printColor(vec(Red,Blue,Green),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
        hideChat(1)
        Rad2 = 0
        Rad = 0
        hint("No more coloring stuff in a sphere :(.",10)
        Find:clear()
    }
}
}
if(Ghost2){
if(chatClk(owner())){
    if(owner():lastSaid():lower() == "!ghost"){
        printColor(vec(Red2,Blue2,Green2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
        hideChat(1)
        Ghost2 = 0
        Ghost = 0
        hint("I'll stop ghosting props :(.",10)
        Ents2:shiftEntity():setAlpha(255)
        Ents2:clear()
    }
}
}
if(Rec){
    if(chatClk(owner())){
        if(Selection:string(1):lower() == "!save"){
            printColor(vec(Red2,Green2,Blue2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
            hideChat(1)
            Mode = Selection:string(2):toNumber()
            hint("Saved to array "+Mode:toString(),10)
            hint("use !select to select an array to use for coloring.",10)
        }
}
if(chatClk(owner())){
        if(Selection:string(1):lower() == "!select"){
            printColor(vec(Red2,Green2,Blue2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
            hideChat(1)
            SelectNo = Selection:string(2):toNumber()
            hint("Selected Array: "+ SelectNo:toString(),10)
            holoColor(1,MEMORY[SelectNo,vector])
        }
    
}
    if(chatClk(owner())){
        if(Modee:string(1):lower() == "!red"){
            printColor(vec(Red2,Green2,Blue2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
            hideChat(1)
            Red2 = (Modee:string(2)):toNumber()
            hint("RGB VECTOR TO SAVE: "+Red2+" "+Green2+" "+Blue2+" ",10)
            hint("Save this vector with !save [Number from 1-20]",10)
    
}
}
if(chatClk(owner())){
        if(Modee2:string(1):lower() == "!blue"){
            printColor(vec(Red2,Blue2,Green2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
            hideChat(1)
            Blue2 = (Modee2:string(2)):toNumber()
            hint("RGB VECTOR TO SAVE: "+Red2+" "+Green2+" "+Blue2+" ",10)
            hint("Save this vector with !save [Number from 1-7]",10)
    
}
}
if(chatClk(owner())){
        if(Modee3:string(1):lower() == "!green"){
            printColor(vec(Red2,Green2,Blue2),"[Hidden]"+owner():name(),vec(255,255,255),": "+A:string(1)+" "+A:string(2))
            hideChat(1)
            Green2 = (Modee3:string(2)):toNumber()
            hint("RGB VECTOR TO SAVE: "+Red2+" "+Green2+" "+Blue2+" ",10)
            hint("Save this vector with !save [Number from 1-7]",10)
    
}
}
if(owner():keyReload()){
    Ents:pushEntity(Ent)
    Ent:setColor(MEMORY[SelectNo, vector])
    Ent:setAlpha(Alpha)
} 
if(changed(owner():keyUse())&owner():keyUse()){
    Ents:pushEntity(Ent)
    Ent:setColor(MEMORY[SelectNo, vector])
    Ent:setAlpha(Alpha)
}
}
if(first()){
    CC = 1
    Alpha = 255
    Red = 0
    Blue = 0
    Green = 0
    Rec = 0
    Rec2 = 0
    Rec3 = 0
    hint("RGB VECTOR: "+Red:toString()+" "+Green:toString()+" "+Blue:toString(),10)
    holoColor(1,vec(Red,Green,Blue))
    Rainbow = 0
    SelectNo = 1
}
if(duped()){
    selfDestructAll()
    hint("Why are you trying to steal my stuff :(",10)
}
