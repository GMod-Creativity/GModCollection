@name HL2 Headcrab
@persist Alk:vector Songs:array Models:array Prop:entity
@model models/Lamarr.mdl
interval(10)
#Apply Force
    Alk=owner():pos()-(entity():pos()-vec(0,-70,150))
    applyForce($Alk*50+Alk) 
if (first()){
    timer("Song",1)
    entity():propFreeze(0)
    entity():propNotSolid(1)
    
} #Music
    Songs[1,string] = "music/hl1_song10.mp3"
    Songs[2,string] = "music/hl1_song25_remix3.mp3"
    Songs[3,string] = "music/hl2_song11.mp3"
    Songs[4,string] = "music/hl2_song12_long.mp3"
    Songs[5,string] = "music/hl2_song14.mp3"
    Songs[6,string] = "music/hl2_song15.mp3"
    Songs[7,string] = "music/hl2_song16.mp3"
    Songs[8,string] = "music/hl2_song19.mp3"
    Songs[9,string] = "music/hl2_song2.mp3"
    Songs[10,string] = "music/hl2_song20_submix0.mp3"
    Songs[11,string] = "music/hl2_song20_submix4.mp3"
    Songs[12,string] = "music/hl2_song23_suitsong3.mp3"
    Songs[13,string] = "music/hl2_song25_teleporter.mp3"
    Songs[14,string] = "music/hl2_song29.mp3"
    Songs[15,string] = "music/hl2_song3.mp3"
    Songs[16,string] = "music/hl2_song29.mp3"
    #Play the song
    if (owner():lastSaid() == "!owner"){
        hideChat(1)
        entity():applyForce($Alk*50+Alk)
    }
    A = owner():lastSaid():explode(" ") 
Target = findPlayerByName(A:string(2))
if (Target:isPlayer()){
Player = Target
Alk2=Player:pos()-(entity():pos()-vec(0,-70,150))
}
LastSaid=owner():lastSaid()  
if (A:string(1)=="!give"){
    hideChat(1)
    runOnChat(1) 
    entity():applyForce(Alk2*50+Alk2)
    
}
if (clk("Song")){
    entity():soundPlay(1,0, Songs:string(round(random(16))))
    timer("Song",100000)
    #Spawn a random prop
}
    if(randint(1,500) == 1 &!Prop){
        Prop = propSpawn("models/Roller.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,600) == 1 &!Prop){
        Prop = propSpawn("models/Gibs/HGIBS.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,750) == 1 &!Prop){
        Prop = propSpawn("models/props_c17/clock01.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,1000) == 1 &!Prop){
        Prop = propSpawn("models/props_combine/breenglobe.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,1500) == 1 &!Prop){
        Prop = propSpawn("models/props_c17/TrapPropeller_Lever.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,1750) == 1 &!Prop){
        Prop = propSpawn("models/props_c17/tv_monitor01.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

    if(randint(1,2500) == 1 &!Prop){
        Prop = propSpawn("models/props_c17/pottery02a.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

if(randint(1,3000) == 1 &!Prop){
        Prop = propSpawn("models/props_c17/doll01.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

if(randint(1,3250) == 1 &!Prop){
        Prop = propSpawn("models/props_lab/frame002a.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,3500) == 1 &!Prop){
        Prop = propSpawn("models/props_lab/tpplug.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,3750) == 1 &!Prop){
        Prop = propSpawn("models/props_lab/reciever01d.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,4000) == 1 &!Prop){
        Prop = propSpawn("models/Combine_Helicopter/helicopter_bomb01.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,5000) == 1 &!Prop){
        Prop = propSpawn("models/props_junk/PopCan01a.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,6000) == 1 &!Prop){
        Prop = propSpawn("models/props_halloween/smlprop_spider.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,7000) == 1 &!Prop){
        Prop = propSpawn("models/props_combine/breenglobe.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
if(randint(1,8000) == 1 &!Prop){
        Prop = propSpawn("models/props_junk/plasticbucket001a.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

if(randint(1,9000) == 1 &!Prop){
        Prop = propSpawn("models/props_junk/CinderBlock01a.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}

if(randint(1,10000) == 1 &!Prop){
        Prop = propSpawn("models/props_phx/cannonball_solid.mdl",entity():pos()+(vec(0,0,0)), entity():angles(),0 )
timer("Delete",10000)
}
if (clk("Delete")){
    Prop:propDelete()
}
