@name Prop Shooter2
@persist [Prop Player Player2 FindR PlayerFind]:entity [MEMORY Finds LoadS PropA]:array [Props LoadName SaveName MEMORYW Admin]:string AimAngle:vector
@persist [Mode L2 Sure L PlayerAim Seek I IO Target BlockShot Save BreakY O A LoopBreak Aim R Load LoadN LoadI R2 R3 SelectNo PropT]:number
@persist
@trigger 
#HOW TO USE VIDEO https://www.youtube.com/watch?v=EEiypUlHsLE
interval(100)
runOnChat(1)
#Variables
P = owner()
E = entity()
LS = P:lastSaid():lower()
#Array
if(Mode){
MEMORY[Mode, string] = Props
}
#First
if(first()){
    hint("Type /help for instructions",10)
    SelectNo = 1
    Props = "models/props_phx/construct/wood/wood_boardx1.mdl"
    Mode = 1
    hint("models/props_phx/construct/wood/wood_boardx1.mdl on number 1",10)
    function hide(){
    hideChat(1)
    printColor(vec(255,0,0),"[Hidden]",vec(random(0,255),random(0,255),random(0,255)),+P:name(),vec(255,255,255),": "+LS)
}
    timer("mode",10)
    timer("mode2",10)
    Admin = "No"
    BlockShot = 1
    LoopBreak = 1
}
#Shoot the prop
if(BlockShot){
        PropT = 1
    }else{
    PropT = 0
}
    if(changed(P:keyAttack2())&P:keyAttack2()){
        if(Seek){
            Finds = findToArray()
            FindR = Finds[randint(1,Finds:count()),entity]
    }
    
        if(MEMORY[SelectNo, string] == "models/props_phx/construct/wood/wood_boardx1.mdl" | MEMORY[SelectNo, string] == "models/props_phx/misc/potato_launcher_explosive.mdl" | MEMORY[SelectNo, string] == "models/props_phx/ww2bomb.mdl" | MEMORY[SelectNo, string] == "models/Items/item_item_crate_chunk02.mdl" | MEMORY[SelectNo, string] == "models/Items/AR2_Grenade.mdl" | MEMORY[SelectNo, string] == "models/Items/CrossbowRounds.mdl"){
            PropT = 1
    }else{  
    PropT = 0
}
        R = random(0,255)
        R2 = random(0,255)
        R3 = random(0,255)
        Prop = propSpawn(MEMORY[SelectNo, string], P:pos()+vec(0,0,60), P:eyeAngles(), 0)
        PropA:pushEntity(Prop)
        PropA:count()
        Prop:propGravity(0)
        if(PropT){
            P:soundPlay(0,0,"weapons/ar2/npc_ar2_altfire.wav")
            Prop:setTrails(10,10,5,"trails/laser",vec(R,R2,R3),255)
            Prop:setColor(vec(R,R2,R3))
            Prop:setMaterial("models/debug/debugwhite")
            timer("delete",10000)
} 
}
if(clk("delete")){
    PropA:propDelete()
}
#Apply force
if(LoopBreak){
    PropE = PropA:entity(PropA:count())
    PropE:applyForce(PropE:forward()*(1000000*Prop:mass()))
    if(Seek |Aim | Target){
        PropE:setAng(AimAngle:toAngle())
}
}
