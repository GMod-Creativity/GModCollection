@name Manual-Turret
@persist Prop:entity
@outputs Fire
@inputs Pod:wirelink
runOnTick(1)
#Variables
    E = entity()
    P = owner()
    C = 0
    Ran = random(255,0),random(255,0),random(255)
    EW = E:isConstrainedTo()
    PodD = Prop:isConstrainedTo():driver()
    #Pod wirelink
if(Pod["Mouse1",number]==1){
    Fire = 1

}else{
Fire = 0
}
if(Pod["Active",number]==1){
    C = 1

}else{
C = 0

}
#Instructions / moving prop
if(first()){
    printColor(vec(random(255,0),random(255,0),random(255)),"place this chip on a frozen prop")
        printColor(vec(random(255,0),random(255,0),random(255)),"Wire turret(s) to Fire then wire Pod to a pod controller linked to a veichle and")
            printColor(vec(random(255,0),random(255,0),random(255)),"weld the spawned prop to the veichle, if the turrets facing wrong way remove old add new turret(s) to the current way it's facing and repeat step 2 with the wiring turret(s) part.")
    
        E:setAlpha(0)
            timer("res",25000)
                Prop = propSpawn("models/hunter/blocks/cube025x025x025.mdl", E:pos()+(vec(0,0,60)), E:eyeAngles(), 0)
    }
    if(C){
EW:setAng((PodD:eyeAngles()))
}
