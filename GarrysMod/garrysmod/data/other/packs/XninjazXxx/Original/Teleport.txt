@name Teleport
@inputs 
@outputs 
@persist Target:entity Pos:vector Ent:entity Steps:array I I3 Ent2:array P:entity
@trigger 
runOnChat(1)
interval(100)
runOnLast(1)
P2 = owner()
Chat = chatClk(P2)
LS3 = P2:lastSaid()
if(Ent){
    E = entity()
    LS = P:lastSaid()
    LSS = P:lastSaid():explode(" ")
    LS2 = P:lastSaid():explode(":")
    Ent2 = Ent:getConstraints()
    Ent2[Ent2:count()+1,entity] = Ent
    if(LSS:string(1) == "/tp" & chatClk(P)){
        if(P == P2){
        hideChat(1)
} 
        Target = findPlayerByName(LSS:string(2))
        if(Target:isValid()){
            I3++
            for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Target:pos()+vec(60,0,0)+(Ent2[I2,entity]:pos()-P:pos()))
            }
            Steps[I3,vector] = Ent:pos()
        }else{
        Ent:hintDriver("Invalid Target!",10)
    }
    }
    if(LSS:string(1) == "/tppos" & chatClk(P)){
        if(P == P2){
        hideChat(1)
}
        I3++
        Pos = vec(LSS:string(2):toNumber(),LSS:string(3):toNumber(),LSS:string(4):toNumber())
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Pos+(Ent2[I2,entity]:pos()-P:pos()))
            }
        Steps[I3,vector] = Ent:pos()
    }
    if(changed(P:keySprint())&P:keySprint()&P:keyAttack2()){
        I3++
        Pos = P:aimPos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Pos+(Ent2[I2,entity]:pos()-P:pos()))
            }
        Steps[I3,vector] = Ent:pos()
    }
    if(LSS:string(1) == "/undo" & chatClk(P) & !I3<1){
        if(P == P2){
        hideChat(1)
}
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Steps[I,vector]+(Ent2[I2,entity]:pos()-P:pos()))
            }
        I--
    }elseif(LSS:string(1) == "/undo" & chatClk(P) & I3<1){
    if(P == P2){
        hideChat(1)
}
    Ent:hintDriver("Nothing to undo!",10)
}
    if(LSS:string(1) == "/redo" & chatClk(P) & !I<1){
        I++
            if(P == P2){
            hideChat(1)
    }
        for(I2 = 1, Ent2:count()){
                    Ent2[I2,entity]:setPos(Steps[I,vector]+(Ent2[I2,entity]:pos()-P:pos()))
                }
        }elseif(LSS:string(1) == "/redo" & chatClk(P) & I<1){
        if(P == P2){
            hideChat(1)
    }
        Ent:hintDriver("Nothing to redo!",10)
    }
    if(P:keyPressed("o")){
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(0,0,25))
            }
    }
    if(P:keyPressed("p")){
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(0,0,-25))
            }
    }
    if(P:keyPressed("i")){
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(0,25,0))
            }
    }
    if(P:keyPressed("j")){
        I3++
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(-25,0,0))
            }
    }
    if(P:keyPressed("k")){
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(0,-25,0))
            }
    }
    if(P:keyPressed("l")){
        Pos = P:pos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Ent2[I2,entity]:pos()+vec(25,0,0))
            }
    }
    if(changed(P:keySprint())&P:keySprint()&P:keyAttack2()){
        I3++
        Pos = P:aimPos()
        for(I2 = 1, Ent2:count()){
                Ent2[I2,entity]:setPos(Pos+(Ent2[I2,entity]:pos()-P:pos()))
            }
        Steps[I3,vector] = Ent:pos()
    }
}
if(LS3 == "/owner" & Chat & Ent){
    hideChat(1)
    P = owner()
    hint("Type /remote to give control of selected entites to person in the seat.",10)
}elseif(LS3 == "/owner" & Chat & !Ent){
hideChat(1)
hint("No entity selected!",10)
}
if(LS3 == "/remote" & Chat & Ent){
    hideChat(1)
    P = Ent:driver()
    hint("Type /owner to gain remote control of selected entities.",10)
}elseif(LS3 == "/remote" & Chat & !Ent){
hideChat(1)
hint("No entity selected!",10)
}
if(changed(P2:keyReload())&P2:keyReload()&P2:keyAttack2()){
    Ent2:clear()
    Ent = P2:aimEntity()
    Ent2 = Ent:getConstraints()
    Ent2[Ent2:count()+1,entity] = Ent
    hint("Selected Entity: "+Ent:model(),10)
    P = Ent:driver()
}
if(changed(P2:keyDuck())&P2:keyDuck()&P2:keyAttack2()&Ent){
    hint("Deslected Entity: "+Ent:model(),10)
    Ent = noentity()
    Ent2:clear()
}elseif(changed(P2:keyDuck())&P2:keyDuck()&P2:keyAttack2()&!Ent){
hint("No entity selected!",10)
}
if(changed(P2:keyWalk())&P2:keyWalk()&P2:keyAttack2()&Ent){
    for(I2 = 1, Ent2:count()){
        Ent2[I2,entity]:propFreeze(1)
    }
    hint("Froze all selected entites.",10)
}elseif(changed(P2:keyDuck())&P2:keyDuck()&P2:keyAttack2()&!Ent){
hint("No entity selected!",10)
}
if(changed(P2:keyPressed("p"))&P2:keyPressed("p")&P2:keyAttack2()&Ent){
    for(I2 = 1, Ent2:count()){
        Ent2[I2,entity]:propFreeze(0)
    }
    hint("Unfroze all selected entites.",10)
}elseif(changed(P2:keyDuck())&P2:keyDuck()&P2:keyAttack2()&!Ent){
hint("No entity selected!",10)
}
