@name Pedals
@inputs ThrottlePedal BrakePedal ClutchPedal
@outputs 
@persist [Dash Dash2 Visor Cupholder Milk] 
@persist [Wheelbase Wheelbasebar Wheelbasebar2 Wheel] 
@persist [Console1 Console2 Backboard Floorboard Floorboard2]
@persist [Gas GasB GasB2 Brake BrakeB BrakeB2 Clutch ClutchB ClutchB2 PB]
@persist [H HL HM HR] [Shifter Knob] [SB SP Radio]
@persist [DR DL DRF DLF] [Mirrorbar MirrorB Mirror]
@persist American SpeedUnit:string [Speeds Gears]:array
runOnTick(1)
E=entity()
Speed=toUnit(SpeedUnit, E:vel():length())
GearSpeed=toUnit("km/h", E:vel():length())
#if you have the "gear" input wired, use it, if not use the cars own system


#####################
#Made by postman,####
#With ideas from#####
#Eternal flame#######
#And many others#####
#Do not redistribute#
#####################




if(first()|dupefinished()|duped())
{
    #1 for american, -1 for british
    American=-1

    PB=5
   
    Gas=15
    GasB=16
    GasB2=17
    
    Brake=18
    BrakeB=19
    BrakeB2=20
    
    Clutch=21
    ClutchB=22
    ClutchB2=23

    holoCreate(PB)
       
    holoCreate(Gas)
    holoCreate(GasB)
    holoCreate(GasB2)
    
    holoCreate(Brake)
    holoCreate(BrakeB)
    holoCreate(BrakeB2)

    holoCreate(Clutch)
    holoCreate(ClutchB)
    holoCreate(ClutchB2)
    
    holoColor(Gas,vec(200,200,200))
    holoColor(Brake,vec(200,200,200))
    holoColor(Clutch,vec(200,200,200))

    holoAlpha(PB,0)
    holoAlpha(GasB,0)
    holoAlpha(BrakeB,0)
    holoAlpha(ClutchB,0)
  
    holoMaterial(Gas,"sprops/textures/sprops_cfiber1")
    holoMaterial(GasB2,"sprops/textures/sprops_cfiber1")
    holoMaterial(Brake,"sprops/textures/sprops_cfiber1")
    holoMaterial(BrakeB2,"sprops/textures/sprops_cfiber1")
    holoMaterial(Clutch,"sprops/textures/sprops_cfiber1")
    holoMaterial(ClutchB2,"sprops/textures/sprops_cfiber1")
    
    holoMaterial(ClutchB2,"sprops/textures/sprops_cfiber1")
    holoMaterial(ClutchB2,"sprops/textures/sprops_cfiber1")
    holoMaterial(ClutchB2,"sprops/textures/sprops_cfiber1")
  
    holoScale(PB,vec(0.2,0.2,0.2))
    holoScale(Gas,vec(0.9,0.25,0.15))
    holoScale(GasB,vec(0.1,0.1,0.1))
    holoScale(GasB2,vec(0.1,0.1,0.6))
    
    holoScale(Brake,vec(0.7,0.35,0.15))
    holoScale(BrakeB,vec(0.1,0.1,0.1))
    holoScale(BrakeB2,vec(0.1,0.1,0.6))
    
    holoScale(Clutch,vec(0.7,0.35,0.15))
    holoScale(ClutchB,vec(0.1,0.1,0.1))
    holoScale(ClutchB2,vec(0.1,0.1,0.6))
    
    holoPos(PB,E:toWorld(vec(3,-30*American,5)))
      
    holoPos(Gas,holoEntity(PB):toWorld(vec(0,-18,-2)))
    holoPos(GasB,holoEntity(PB):toWorld(vec(0,-18,-4)))
    holoPos(GasB2,holoEntity(PB):toWorld(vec(-3.5,-18,-2.2)))
    
    holoPos(Brake,holoEntity(PB):toWorld(vec(0,-23,-2)))
    holoPos(BrakeB,holoEntity(PB):toWorld(vec(0,-23,-4)))
    holoPos(BrakeB2,holoEntity(PB):toWorld(vec(-3.5,-23,-2.2)))
    
    holoPos(Clutch,holoEntity(PB):toWorld(vec(0,-29,-2)))
    holoPos(ClutchB,holoEntity(PB):toWorld(vec(0,-29,-4)))
    holoPos(ClutchB2,holoEntity(PB):toWorld(vec(-3.5,-29,-2.2)))
       
    holoAng(Gas,E:toWorld(ang(60,0,0)))
    holoAng(GasB,E:toWorld(ang(60,0,0)))
    holoAng(GasB2,E:toWorld(ang(60,0,0)))
    
    holoAng(Brake,E:toWorld(ang(60,0,0)))
    holoAng(BrakeB,E:toWorld(ang(60,0,0)))
    holoAng(BrakeB2,E:toWorld(ang(60,0,0)))
    
    holoAng(Clutch,E:toWorld(ang(60,0,0)))
    holoAng(ClutchB,E:toWorld(ang(60,0,0)))
    holoAng(ClutchB2,E:toWorld(ang(60,0,0)))

    holoParent(PB,E)
       
    holoParent(Gas,GasB)
    holoParent(GasB,E)
    holoParent(GasB2,Gas)
    
    holoParent(Brake,BrakeB)
    holoParent(BrakeB,E)
    holoParent(BrakeB2,Brake)
    
    holoParent(Clutch,ClutchB)
    holoParent(ClutchB,E)
    holoParent(ClutchB2,Clutch)
        
}




#various angle codes

holoAng(GasB,E:toWorld(ang(60-(ThrottlePedal*0.2),0,0)))
holoAng(BrakeB,E:toWorld(ang(60-(BrakePedal*20),0,0)))
holoAng(ClutchB,E:toWorld(ang(60-(ClutchPedal*20),0,0)))
if(dupefinished()){reset()}
