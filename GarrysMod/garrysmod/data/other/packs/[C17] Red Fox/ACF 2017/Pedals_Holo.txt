@name Pedals Holo
@inputs W S C
@persist X Base Wh Sh Ch Wha Sha Cha

E = entity()

if(first()){
    
    X = 0
    
    ############
    
    X++
    Base = X
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.6,1,0.1))
    holoColor(X,vec(1,0,1))
    holoPos(X,E:toWorld(vec(0,0,0.5)))
    holoParent(X,E)
    
    X++
    Wha = X
    
    holoCreate(X)
    holoScale(X,vec(0.1,0.1,0.1))
    holoPos(X,holoEntity(Base):toWorld(vec(-1.75,-3,1.75)))
    holoAlpha(X,0)
    
    X++
    Sha = X
    
    holoCreate(X)
    holoScale(X,vec(0.1,0.1,0.1))
    holoPos(X,holoEntity(Base):toWorld(vec(-1.75,0,1.75)))
    holoAlpha(X,0)
    
    X++
    Cha = X
    
    holoCreate(X)
    holoScale(X,vec(0.1,0.1,0.1))
    holoPos(X,holoEntity(Base):toWorld(vec(-1.75,3,1.75)))    
    holoAlpha(X,0)
    
    X++
    Sh = X
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.4,0.2,0.1))
    holoColor(X,vec(72,72,72))
    holoPos(X,holoEntity(Base):toWorld(vec(0,0,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    
    X++
    Wh = X
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.4,0.2,0.1))
    holoColor(X,vec(50,50,50))
    holoPos(X,holoEntity(Base):toWorld(vec(0,-3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    
    X++
    Ch = X
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.4,0.2,0.1))
    holoColor(X,vec(50,50,50))
    holoPos(X,holoEntity(Base):toWorld(vec(0,3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.41,0.21,0.08))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,-3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Wha))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.41,0.21,0.08))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,0,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Sha))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.41,0.21,0.08))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Cha))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.3,0.1,0.11))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,-3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Wha))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.3,0.1,0.11))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,0,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Sha))
    
    X++
    
    holoCreate(X)
    holoModel(X,"hq_rcube")
    holoScale(X,vec(0.3,0.1,0.11))
    holoColor(X,vec(30))
    holoPos(X,holoEntity(Base):toWorld(vec(0,3,3)))
    holoAng(X,holoEntity(Base):toWorld(ang(-45,0,0)))
    holoParent(X,holoEntity(Cha))
    
    
    holoParent(Wha,Base)
    holoParent(Sha,Base)
    holoParent(Cha,Base)
    
    holoParent(Wh,Wha)
    holoParent(Sh,Sha)
    holoParent(Ch,Cha)
    
}

interval(100)

if(dupefinished()){
    
    reset()
    
}

if(W){
    
    holoAng(Wha,holoEntity(Base):toWorld(ang(45,0,0)))
    
}else{

    holoAng(Wha,holoEntity(Base):toWorld(ang(0,0,0)))
    
}

if(S){
    
    holoAng(Sha,holoEntity(Base):toWorld(ang(45,0,0)))
    
}else{

    holoAng(Sha,holoEntity(Base):toWorld(ang(0,0,0)))
    
}

if(C){
    
    holoAng(Cha,holoEntity(Base):toWorld(ang(45,0,0)))
    
}else{

    holoAng(Cha,holoEntity(Base):toWorld(ang(0,0,0)))
    
}
