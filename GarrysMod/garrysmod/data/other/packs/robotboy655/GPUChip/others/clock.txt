dsetwidth 4;             // Setting line width
dsetsize 40;           //and text size

dcolor White;           //Draw the basic circles of the clock
dcircle center,240;
dcolor Black;
dcircle center,25;
dcolor White;

in eax,0;    //Adding AM or PM to top right corner
cmp eax,43200;
jl Am;
dwrite ap,textpm; 
jmp AmPmEnd;
Am:
dwrite ap,textam; 
AmPmEnd:

mov ecx,0;             //Looping through ECX to write the number
dcolor Black;    
number_loop: 
  inc ecx;            //increment ecx
  mov #npos.x,238;        //set npos back to  addjust center for text
  mov #npos.y,236;
  mov eax,ecx;                   //set eax to current loopnumber and multply by  60 degrees in radians. 
  mul eax,0.523599;
  fcos ebx,eax;                 //making the circle for the numbers
  mul ebx,200;
  sub #npos.y,ebx;
  fsin ebx,eax;
  mul ebx,200;
  add #npos.x,ebx;
  dwritei npos,ecx;                     //Write number on position
  cmp ecx,12;                      // Compare loopnummer with 12
  jl number_loop;                  //If it ls less loop die loop  again, otherwise continue

mov #Pend.x,256;  //Hours
mov #Pend.y,256;
in eax,0; 
cmp eax,0;                // Failsafe for division off 0
je fail;
div eax,3600;
fint eax;
mod eax,12;
mul eax,0.523599;
fcos ebx,eax;
mul ebx,120;
sub #Pend.y,ebx;
fsin ebx,eax;
mul ebx,120;
add #Pend.x,ebx;
dline center,Pend;

mov #Pend.x,256;                                    //Minutes
mov #Pend.y,256;
in eax,0; 
div eax,60;
fint eax;
mod eax,60;
mul eax,0.1047198;
fcos ebx,eax;
mul ebx,200;
sub #Pend.y,ebx;
fsin ebx,eax;
mul ebx,200;
add #Pend.x,ebx;
dline center,Pend;

mov #Pend.x,256;                            //Seconds
mov #Pend.y,256;
in eax,0;
mod eax,60;
mul eax,0.1047198;
fcos ebx,eax;
mul ebx,230;
sub #Pend.y,ebx;
fsin ebx,eax;
mul ebx,230;
add #Pend.x,ebx;
dcolor Red;
dline center,Pend;

dcircle center,20;                   //Add little red dot as finishing touch

fail:
dexit;

string textpm,'PM';
string textam,"AM";

vec2f ap,20,8;                                 //am pm position
vec2f center,256,256;                //Well, Duh
vec2f npos,238,236;                    //Number position
vec2f Pend,256,256;                    //Pointer End
color Red,255,0,0;
color White,255,255,255;
color Black,0,0,0;

