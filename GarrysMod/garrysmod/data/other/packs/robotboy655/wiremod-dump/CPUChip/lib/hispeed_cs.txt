
// The console screen functions

#ifndef HISPEED
     //#include <hispeed.txt>
#endif

void hscsWriteString(char* str, x, y, txt, bg, f) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    
    float p = f * 1000000 + bg * 1000 + txt;
    float xx = x;
    
    while(*str) {
        if (*str == '\n') {
            y++;
            x = xx;
            str++;
            if (*str == 0) return;
        }
        
        float a = 2 * (y * 30 + (x));
        
        *(HS_DEVICES[HS_CURRENT] + a) = *str;
        *(HS_DEVICES[HS_CURRENT] + a + 1) = p;
    
        str++;
        x++;
    }
}

void hscsRotate(float r) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2024) = r;
}

void hscsClear() {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2041) = 1;
}

void hscsSetScale(float s) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2023) = s; // Scale, def 0
}

void hscsSetBrigtness(float b) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2025) = b; // White, def 1
}

void hscsSetBrigtnessRGB(float r, g, b) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2028) = r; // R, def 1
    *(HS_DEVICES[HS_CURRENT] + 2027) = g; // G, def 1
    *(HS_DEVICES[HS_CURRENT] + 2026) = b; // B, def 1
}

void hscsSetBrigtnessAdd(float b) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2036) = b; // Additive, def 0
}

void hscsSetBackground(float b) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2042) = b;
}

void hscsSetActive(float a) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2047) = a;
}

void hscsClearRow(float r) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2039) = r;
}

void hscsClearColumn(float c) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2040) = c;
}

void hscsSetBlinkRate(float br) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2043) = br;
}

void hscsSetCursor(float e) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2046) = e;
}

void hscsSetCursorSize(float s) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2044) = s;
}

void hscsSetCursorPos(float x, y) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2045) = (2 * (y * 30 + (x)));
}

void hscsShiftCell(float c) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2037) = c;
}

void hscsShiftRow(float r) {
    if (!HS_DEVICES[HS_CURRENT]) return;
    *(HS_DEVICES[HS_CURRENT] + 2038) = r;
}

float hscsGetScreenRatio() {
    if (!HS_DEVICES[HS_CURRENT]) return;
    return *(HS_DEVICES[HS_CURRENT] + 2022);
}

// Idk how these work or what they do:
//  -Force cache refresh 2020
//  -Cached blocks size (up to 28, 0 if disabled) 2021

// These seems not to be working.
//  -Charset, always 0 2035 // No visible changes
//  -Vertical scale (1) 2029 // No visible changes
//  -Horizontal scale (1) 2030 // No visible changes

// These work incorrectly, doing crazy stuff.
//  -Low shift column 2031
//  -High shift column 2032
//  -Low shift row 2033
//  -High shift row 2034
