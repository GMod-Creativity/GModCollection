@name Heading Indicator - by Schmoller
@inputs S:wirelink
@outputs 
@persist 
@trigger 

interval(30)
Heading = entity():angles():yaw() + 90
Heading *= -1
I = 0

#Background and outline
S:egpCircle(I,256,256,404,404,255,255,255,255)
I++
S:egpCircle(I,256,256,400,400,0,0,0,255)
I++

#Center Indicator
S:egpTriangle(I,vec2(256-12,256+10),vec2(256,256-15),vec2(256+12,256+10),vec4(255,255,255,255))
I++
S:egpTriangle(I,vec2(256-10,256+8),vec2(256,256-13),vec2(256+10,256+8),vec4(0,0,0,255))
I++

S:egpLine(I,256,256 - 25,256,150,255,255,255,255)
I++

#Draw Heading

H = 0
O = 0

while(H < 36)
{
    D = 130
    if(O)
    {
        D = 140
    }
    S:egpLine(I,256 + D * sin(Heading - (10 * H)),256 + D * cos(Heading - (10 * H)),256 + 160 * sin(Heading - (10 * H)),256 + 160 * cos(Heading - (10 * H)),255,255,255,255)
    I++
    
    if(H == 0)
    {
        S:egpText(I,"N",256 + 180 * sin(Heading - (10 * H)),256 + 180 * cos(Heading - (10 * H)),255,255,255,255)
        S:egpSetFont(I,"arial",30)
        S:egpTextAlign(I,1,1)
        I++
    }
    elseif(H == 9)
    {
        S:egpText(I,"E",256 + 180 * sin(Heading - (10 * H)),256 + 180 * cos(Heading - (10 * H)),255,255,255,255)
        S:egpSetFont(I,"arial",30)
        S:egpTextAlign(I,1,1)
        I++
    }
    elseif(H == 18)
    {
        S:egpText(I,"S",256 + 180 * sin(Heading - (10 * H)),256 + 180 * cos(Heading - (10 * H)),255,255,255,255)
        S:egpSetFont(I,"arial",30)
        S:egpTextAlign(I,1,1)
        I++
    }
    elseif(H == 27)
    {
        S:egpText(I,"W",256 + 180 * sin(Heading - (10 * H)),256 + 180 * cos(Heading - (10 * H)),255,255,255,255)
        S:egpSetFont(I,"arial",30)
        S:egpTextAlign(I,1,1)
        I++
    }
    elseif(mod(H,3) == 0)
    {
        S:egpText(I,toString(H),256 + 180 * sin(Heading - (10 * H)),256 + 180 * cos(Heading - (10 * H)),255,255,255,255)
        S:egpSetFont(I,"arial",30)
        S:egpTextAlign(I,1,1)
        I++
    }
    
    
    H += 1.5
    O = !O
}

S:egpDraw()