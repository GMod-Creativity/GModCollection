@name physics_example_1
@inputs 
@outputs 
@persist Entity:entity Inertia:angle Mass
@trigger none

#-- i like using this model because it shows the orientation of the model
@model models/maxofs2d/cube_tool.mdl

#-- by shadowscion

#-- a series of examples showing how i usually
#-- handle the physical aspects of my mechs

#-- basic hovering physics base


if (first()) {
    
    Entity = entity()
    
    Entity:setMass(2000)
    
    Mass = Entity:mass()
    Inertia = shiftL(ang(Entity:inertia()))

}

interval(60)

#-- for most mechs i just use a single ranger for the hovering
local Ranger = rangerOffset(100, Entity:pos(), vec(0, 0, -1))

#-- if the ranger is hitting, the mech is on the ground
if (Ranger:hit()) {
    
    #-- to get away with using low intervals and applyforce, i turn off gravity when it's on the ground
    Entity:propGravity(0)
    
    #-- for now, just basic angle holding, i never use apply torque
    local Yaw = Entity:angles():yaw()
    Entity:applyAngForce((Entity:toLocal(ang(0, Yaw, 0))*300 - Entity:angVel()*30) * Inertia)
    
    #-- it can hover at any height lower than the ranger length
    #-- i use the tried and true Target - Current method
    local Height = 90

    Entity:applyForce((vec(0, 0, Height - Ranger:distance())*5 - Entity:vel()) * Mass)
}

#-- otherwise the mech is off the ground
else {
    
    Entity:propGravity(1)

}
