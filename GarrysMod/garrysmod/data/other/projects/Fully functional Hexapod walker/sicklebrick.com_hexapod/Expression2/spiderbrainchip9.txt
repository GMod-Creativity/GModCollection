@name SpiderBrainChip8
@inputs Forward Other Twist TurnMe WalkHeight
@outputs RaiseFor1 RaiseFor2 RaiseFor3 RaiseFor4 RaiseFor5 RaiseFor6        #Each leg's forward hydraulic length
@outputs RaiseBack1 RaiseBack2 RaiseBack3 RaiseBack4 RaiseBack5 RaiseBack6  #Each leg's rear hydraulic length (not in use)
@outputs TurnFor1 TurnFor2 TurnFor3 TurnFor4 TurnFor5 TurnFor6              #Each leg's forward turning hydraulic length
@outputs TurnBack1 TurnBack2 TurnBack3 TurnBack4 TurnBack5 TurnBack6        #Each leg's rear turning hydraulic length
@outputs LiftConst LiftDamp TurnConst TurnDamp
@persist Raise1 Raise2 Raise3 Raise4 Raise5 Raise6 Turn1 Turn2 Turn3 Turn4 Turn5 Turn6 
@persist AlphaHeight BetaHeight AlphaTurn BetaTurn 
@persist Input Counter Step 
@persist TurnHydraulicLong TurnHydraulicShort TurnHydraulicDefault TurnHydraulicExtention #Default lengths for the turning hydraulics
@persist LiftHydraulicLong LiftHydraulicShort LiftHydraulicDefault WalkheightModifier #Default lengths for the lifting hydraulics


#Hexapod code and construction by Sicklebrick - www.sicklebrick.com
#Enjoy :)

runOnTick(1)

Counter++


AlphaHeight = 0
BetaHeight = 0
AlphaTurn = 0
BetaTurn = 0

Raise1 = 0
Raise2 = 0
Raise3 = 0
Raise4 = 0
Raise5 = 0
Raise6 = 0
Turn1 = 0
Turn2 = 0
Turn3 = 0
Turn4 = 0
Turn5 = 0
Turn6 = 0

LiftConst = 50000
LiftDamp = 5000
    
TurnConst = 90000
TurnDamp = 5000

#TurnHydraulicShort = 61
#TurnHydraulicLong = 91

TurnHydraulicDefault = 75
TurnHydraulicExtention = 14


WalkheightModifier = 40
LiftHydraulicShort = 60 + (WalkheightModifier * WalkHeight)
LiftHydraulicLong = 180 + (WalkheightModifier * WalkHeight)#180
LiftHydraulicDefault = 150 + (WalkheightModifier * WalkHeight)


Input = Forward || Other || Twist || TurnMe

if (Input){
    
 if (Other){
    
    AlphaHeight = Other
    BetaHeight = Other
    
 }


 
 
 #Thrust = 1

 if (Forward  ){
    
    if (Counter >32){
        Counter = 0
        Step += 1 #incase we're going back it subtracts
        if(Step == 4){ Step = 0 }
        if(Step < 0){ Step = 3 }
    }        
    
    if(Step == 0){
    AlphaHeight = -1
    AlphaTurn = 1
    BetaHeight = 1
    BetaTurn = -1
    Counter -= 0.2  #half speed on the strides
    }

    if(Step == 1){
    AlphaHeight = 1
    AlphaTurn = 1
    BetaHeight = -1
    BetaTurn = -1
    Counter += 1  #double speed on lifting legs
    }
    
    if(Step == 2){
    AlphaHeight = 1
    AlphaTurn = -1
    BetaHeight = -1
    BetaTurn = 1
    Counter -= 0.2  
    }
    
    
    if(Step == 3){
    AlphaHeight =-1
    AlphaTurn =-1
    BetaHeight = 1
    BetaTurn = 1
    Counter += 1
    }
    
    if (Forward < 0 ){  #Let's just reverse everything
     TempA = AlphaTurn
     AlphaTurn = BetaTurn
     BetaTurn = TempA
       
     #TempA = AlphaHeight
     #AlphaHeight = BetaHeight
     #BetaHeight = TempA    
        
        
    }
    
    Raise1 = AlphaHeight
    Raise3 = AlphaHeight
    Raise5 = AlphaHeight
    Raise2 = BetaHeight
    Raise4 = BetaHeight
    Raise6 = BetaHeight
    
    Turn1 = AlphaTurn
    Turn3 = AlphaTurn
    Turn5 = -AlphaTurn
    Turn2 = BetaTurn
    Turn4 = -BetaTurn
    Turn6 = -BetaTurn
    
    
 }  #Forward

#Alternate turn code
if (TurnMe ){
    
    
    if (Counter >22){
        Counter = 0
        Step += 1 #incase we're going back it subtracts
        if(Step == 4){ Step = 0 }
        if(Step < 0){ Step = 3 }
    }        
    
    if(Step == 0){
        
    AlphaHeight = -1
    AlphaTurn  = 1    
    BetaHeight = 1
    BetaTurn = 1
    }

    if(Step == 1){
    AlphaHeight = 1
    AlphaTurn = 1
    BetaHeight = -1
    BetaTurn = 1
    Counter += 1   
    }
    
    if(Step == 2){
    AlphaHeight = 1
    AlphaTurn = -1    
    BetaHeight = -1
    BetaTurn = -1
    }
    
    
    if(Step == 3){
    AlphaHeight = -1
    AlphaTurn = -1
    BetaHeight = 1
    BetaTurn = -1
    Counter += 1
    }
    

 
    if (TurnMe < 0 ){  #Let's just reverse everything
     TempA = AlphaTurn
     AlphaTurn = BetaTurn
     BetaTurn = TempA
       
     TempA = AlphaHeight
     AlphaHeight = BetaHeight
     BetaHeight = TempA    
        
        
    }

    
    Raise1 = AlphaHeight 
    Raise3 = AlphaHeight 
    Raise5 = AlphaHeight 
    
    Raise2 = BetaHeight 
    Raise4 = BetaHeight 
    Raise6 = BetaHeight 
    
    Turn1 = AlphaTurn 
    Turn3 = AlphaTurn 
    Turn5 = AlphaTurn
    
    Turn2 = -BetaTurn 
    Turn4 = -BetaTurn 
    Turn6 = -BetaTurn 
    

    
    
    
    
}#TurnMe

if ( Twist){
    
 Raise1 = -Twist
 Raise4 = -Twist
 Raise2 = 0
 Raise5 = 0
 Raise3 = Twist
 Raise6 = Twist

 Turn1 = Twist
 Turn4 = Twist *-1
 Turn2 = 0
 Turn5 = 0
 Turn3 = -Twist
 Turn6 = -Twist *-1
    
    
    
    
    
    
    
}


if (  Other ){
  
    OutPutMultiplier = 1.0
    OutPutMultiplier2 = 1

    Raise1 = AlphaHeight * OutPutMultiplier
    Raise3 = AlphaHeight * OutPutMultiplier
    Raise5 = AlphaHeight * OutPutMultiplier
    Raise2 = BetaHeight * OutPutMultiplier
    Raise4 = BetaHeight * OutPutMultiplier
    Raise6 = BetaHeight * OutPutMultiplier

    Turn1 = AlphaTurn * OutPutMultiplier2
    Turn2 = -BetaTurn * OutPutMultiplier2
    Turn3 = AlphaTurn * OutPutMultiplier2
    Turn4 = -BetaTurn * OutPutMultiplier2
    Turn5 = AlphaTurn * OutPutMultiplier2
    Turn6 = -BetaTurn *  OutPutMultiplier2
    
    
}
    
    
}else{   #if no input

 Counter = 0
 Step = 0


}



#Send calculated values to the outputs.

TurnFor1 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn1)
TurnFor2 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn2)
TurnFor3 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn3)
TurnFor4 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn4)
TurnFor5 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn5)
TurnFor6 = TurnHydraulicDefault + ( TurnHydraulicExtention * -Turn6)

TurnBack1 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn1)
TurnBack2 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn2)
TurnBack3 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn3)
TurnBack4 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn4)
TurnBack5 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn5)
TurnBack6 = TurnHydraulicDefault + ( TurnHydraulicExtention * Turn6)


#RaiseFor1 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise1)
#RaiseFor2 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise2)
#RaiseFor3 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise3)
#RaiseFor4 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise4)
#RaiseFor5 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise5)
#RaiseFor6 = LiftHydraulicDefault + ( LiftHydraulicExtention * Raise6)

RaiseFor1 = LiftHydraulicDefault
RaiseFor2 = LiftHydraulicDefault
RaiseFor3 = LiftHydraulicDefault
RaiseFor4 = LiftHydraulicDefault
RaiseFor5 = LiftHydraulicDefault
RaiseFor6 = LiftHydraulicDefault

if ( Raise1 > 0 ){ RaiseFor1 = LiftHydraulicLong  }
if ( Raise1 < 0 ){ RaiseFor1 = LiftHydraulicShort }
if ( Raise2 > 0 ){ RaiseFor2 = LiftHydraulicLong  }
if ( Raise2 < 0 ){ RaiseFor2 = LiftHydraulicShort }
if ( Raise3 > 0 ){ RaiseFor3 = LiftHydraulicLong  }
if ( Raise3 < 0 ){ RaiseFor3 = LiftHydraulicShort }
if ( Raise4 > 0 ){ RaiseFor4 = LiftHydraulicLong  }
if ( Raise4 < 0 ){ RaiseFor4 = LiftHydraulicShort }
if ( Raise5 > 0 ){ RaiseFor5 = LiftHydraulicLong  }
if ( Raise5 < 0 ){ RaiseFor5 = LiftHydraulicShort }
if ( Raise6 > 0 ){ RaiseFor6 = LiftHydraulicLong  }
if ( Raise6 < 0 ){ RaiseFor6 = LiftHydraulicShort }











